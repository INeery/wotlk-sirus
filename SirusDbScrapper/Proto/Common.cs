// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SirusDbScrapper.UIDatabase {

  /// <summary>Holder for reflection information generated from common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgxjb21tb24ucHJvdG8SBXByb3RvIjAKCVVuaXRTdGF0cxINCgVzdGF0cxgB",
            "IAMoARIUCgxwc2V1ZG9fc3RhdHMYAiADKAEinAwKCVJhaWRCdWZmcxIvChBn",
            "aWZ0X29mX3RoZV93aWxkGAEgASgOMhUucHJvdG8uVHJpc3RhdGVFZmZlY3QS",
            "MwoUcG93ZXJfd29yZF9mb3J0aXR1ZGUYAiABKA4yFS5wcm90by5UcmlzdGF0",
            "ZUVmZmVjdBIvChBjb21tYW5kaW5nX3Nob3V0GAMgASgOMhUucHJvdG8uVHJp",
            "c3RhdGVFZmZlY3QSKQoKYmxvb2RfcGFjdBgEIAEoDjIVLnByb3RvLlRyaXN0",
            "YXRlRWZmZWN0EhYKDmhvcm5fb2Zfd2ludGVyGAUgASgIEjYKF3N0cmVuZ3Ro",
            "X29mX2VhcnRoX3RvdGVtGAYgASgOMhUucHJvdG8uVHJpc3RhdGVFZmZlY3QS",
            "GQoRYXJjYW5lX2JyaWxsaWFuY2UYByABKAgSLwoQZmVsX2ludGVsbGlnZW5j",
            "ZRgIIAEoDjIVLnByb3RvLlRyaXN0YXRlRWZmZWN0EhUKDWRpdmluZV9zcGly",
            "aXQYCSABKAgSKwoMYmF0dGxlX3Nob3V0GAogASgOMhUucHJvdG8uVHJpc3Rh",
            "dGVFZmZlY3QSFQoNdHJ1ZXNob3RfYXVyYRgLIAEoCBIWCg51bmxlYXNoZWRf",
            "cmFnZRgMIAEoCBIaChJhYm9taW5hdGlvbnNfbWlnaHQYDSABKAgSMQoSbGVh",
            "ZGVyX29mX3RoZV9wYWNrGA4gASgOMhUucHJvdG8uVHJpc3RhdGVFZmZlY3QS",
            "DwoHcmFtcGFnZRgPIAEoCBISCgppY3lfdGFsb25zGBAgASgIEi0KDndpbmRm",
            "dXJ5X3RvdGVtGBEgASgOMhUucHJvdG8uVHJpc3RhdGVFZmZlY3QSFgoOdG90",
            "ZW1fb2Zfd3JhdGgYEiABKAgSGQoRZmxhbWV0b25ndWVfdG90ZW0YEyABKAgS",
            "FwoPZGVtb25pY19wYWN0X3NwGCwgASgFEhkKEXN3aWZ0X3JldHJpYnV0aW9u",
            "GBUgASgIEisKDG1vb25raW5fYXVyYRgWIAEoDjIVLnByb3RvLlRyaXN0YXRl",
            "RWZmZWN0EhYKDmVsZW1lbnRhbF9vYXRoGBcgASgIEhoKEndyYXRoX29mX2Fp",
            "cl90b3RlbRgYIAEoCBIdChVmZXJvY2lvdXNfaW5zcGlyYXRpb24YGSABKAgS",
            "HgoWc2FuY3RpZmllZF9yZXRyaWJ1dGlvbhgaIAEoCBIaChJhcmNhbmVfZW1w",
            "b3dlcm1lbnQYGyABKAgSMAoRbWFuYV9zcHJpbmdfdG90ZW0YHCABKA4yFS5w",
            "cm90by5UcmlzdGF0ZUVmZmVjdBIZChFzaGFkb3dfcHJvdGVjdGlvbhghIAEo",
            "CBIfChduYXR1cmVfcmVzaXN0YW5jZV90b3RlbRgtIAEoCBIaChJhc3BlY3Rf",
            "b2ZfdGhlX3dpbGQYLiABKAgSHQoVZnJvc3RfcmVzaXN0YW5jZV9hdXJhGC8g",
            "ASgIEh4KFmZyb3N0X3Jlc2lzdGFuY2VfdG90ZW0YMCABKAgSEQoJYmxvb2Rs",
            "dXN0GB0gASgIEiUKBnRob3JucxgeIAEoDjIVLnByb3RvLlRyaXN0YXRlRWZm",
            "ZWN0EiwKDWRldm90aW9uX2F1cmEYHyABKA4yFS5wcm90by5UcmlzdGF0ZUVm",
            "ZmVjdBIuCg9zdG9uZXNraW5fdG90ZW0YKiABKA4yFS5wcm90by5UcmlzdGF0",
            "ZUVmZmVjdBIYChByZXRyaWJ1dGlvbl9hdXJhGCAgASgIEhkKEXN0cmVuZ3Ro",
            "X29mX3dyeW5uGDEgASgIEiAKGGRydW1zX29mX2ZvcmdvdHRlbl9raW5ncxgi",
            "IAEoCBIZChFkcnVtc19vZl90aGVfd2lsZBgjIAEoCBIcChRzY3JvbGxfb2Zf",
            "cHJvdGVjdGlvbhgkIAEoCBIZChFzY3JvbGxfb2Zfc3RhbWluYRglIAEoCBIa",
            "ChJzY3JvbGxfb2Zfc3RyZW5ndGgYJiABKAgSGQoRc2Nyb2xsX29mX2FnaWxp",
            "dHkYJyABKAgSGwoTc2Nyb2xsX29mX2ludGVsbGVjdBgoIAEoCBIYChBzY3Jv",
            "bGxfb2Zfc3Bpcml0GCkgASgIIskBCgpQYXJ0eUJ1ZmZzEhMKC2F0aWVzaF9t",
            "YWdlGAEgASgFEhYKDmF0aWVzaF93YXJsb2NrGAIgASgFEh4KFmJyYWlkZWRf",
            "ZXRlcm5pdW1fY2hhaW4YAyABKAgSGAoQZXllX29mX3RoZV9uaWdodBgEIAEo",
            "CBIhChljaGFpbl9vZl90aGVfdHdpbGlnaHRfb3dsGAUgASgIEhgKEG1hbmFf",
            "dGlkZV90b3RlbXMYBiABKAUSFwoPaGVyb2ljX3ByZXNlbmNlGAcgASgIIt4F",
            "Cg9JbmRpdmlkdWFsQnVmZnMSGQoRYmxlc3Npbmdfb2Zfa2luZ3MYASABKAgS",
            "MQoSYmxlc3Npbmdfb2Zfd2lzZG9tGAIgASgOMhUucHJvdG8uVHJpc3RhdGVF",
            "ZmZlY3QSMAoRYmxlc3Npbmdfb2ZfbWlnaHQYAyABKA4yFS5wcm90by5Ucmlz",
            "dGF0ZUVmZmVjdBIdChVibGVzc2luZ19vZl9zYW5jdHVhcnkYBCABKAgSEQoJ",
            "dmlnaWxhbmNlGAUgASgIEhQKDHJlbmV3ZWRfaG9wZRgGIAEoCBIUCgxoeW1u",
            "X29mX2hvcGUYByABKAUSGQoRaGFuZF9vZl9zYWx2YXRpb24YCCABKAUSDwoH",
            "cmFwdHVyZRgJIAEoBRISCgppbm5lcnZhdGVzGAogASgFEhcKD3Bvd2VyX2lu",
            "ZnVzaW9ucxgLIAEoBRIVCg11bmhvbHlfZnJlbnp5GAwgASgFEh8KF3Jldml0",
            "YWxpemVfcmVqdXZpbmF0aW9uGA0gASgFEh4KFnJldml0YWxpemVfd2lsZF9n",
            "cm93dGgYFSABKAUSHAoUdHJpY2tzX29mX3RoZV90cmFkZXMYEyABKAUSGAoQ",
            "ZGl2aW5lX2d1YXJkaWFucxgXIAEoBRIZChFwYWluX3N1cHByZXNzaW9ucxgY",
            "IAEoBRIaChJoYW5kX29mX3NhY3JpZmljZXMYGSABKAUSGAoQZ3VhcmRpYW5f",
            "c3Bpcml0cxgaIAEoBRIZChFzaGF0dGVyaW5nX3Rocm93cxgUIAEoBRIWCg52",
            "YW1waXJpY190b3VjaBgOIAEoCBIVCg1odW50aW5nX3BhcnR5GA8gASgIEh4K",
            "Fmp1ZGdlbWVudHNfb2ZfdGhlX3dpc2UYECABKAgSGwoTaW1wcm92ZWRfc291",
            "bF9sZWVjaBgRIAEoCBIXCg9lbmR1cmluZ193aW50ZXIYEiABKAgSEwoLZm9j",
            "dXNfbWFnaWMYFiABKAgi1gMKCENvbnN1bWVzEhsKBWZsYXNrGAEgASgOMgwu",
            "cHJvdG8uRmxhc2sSKgoNYmF0dGxlX2VsaXhpchgCIAEoDjITLnByb3RvLkJh",
            "dHRsZUVsaXhpchIuCg9ndWFyZGlhbl9lbGl4aXIYAyABKA4yFS5wcm90by5H",
            "dWFyZGlhbkVsaXhpchIZCgRmb29kGAYgASgOMgsucHJvdG8uRm9vZBIgCghw",
            "ZXRfZm9vZBgHIAEoDjIOLnByb3RvLlBldEZvb2QSHQoVcGV0X3Njcm9sbF9v",
            "Zl9hZ2lsaXR5GAggASgFEh4KFnBldF9zY3JvbGxfb2Zfc3RyZW5ndGgYCSAB",
            "KAUSJgoOZGVmYXVsdF9wb3Rpb24YCiABKA4yDi5wcm90by5Qb3Rpb25zEiUK",
            "DXByZXBvcF9wb3Rpb24YCyABKA4yDi5wcm90by5Qb3Rpb25zEikKEGRlZmF1",
            "bHRfY29uanVyZWQYDCABKA4yDy5wcm90by5Db25qdXJlZBIWCg50aGVybWFs",
            "X3NhcHBlchgPIAEoCBIXCg9leHBsb3NpdmVfZGVjb3kYECABKAgSKgoQZmls",
            "bGVyX2V4cGxvc2l2ZRgRIAEoDjIQLnByb3RvLkV4cGxvc2l2ZSKNCAoHRGVi",
            "dWZmcxIbChNqdWRnZW1lbnRfb2Zfd2lzZG9tGAEgASgIEhoKEmp1ZGdlbWVu",
            "dF9vZl9saWdodBgCIAEoCBIOCgZtaXNlcnkYAyABKAgSKgoLZmFlcmllX2Zp",
            "cmUYBCABKA4yFS5wcm90by5UcmlzdGF0ZUVmZmVjdBIZChFjdXJzZV9vZl9l",
            "bGVtZW50cxgFIAEoCBIaChJlYm9uX3BsYWd1ZWJyaW5nZXIYBiABKAgSFgoO",
            "ZWFydGhfYW5kX21vb24YByABKAgSHQoVaGVhcnRfb2ZfdGhlX2NydXNhZGVy",
            "GAggASgIEhcKD21hc3Rlcl9wb2lzb25lchgJIAEoCBIWCg50b3RlbV9vZl93",
            "cmF0aBgKIAEoCBIWCg5zaGFkb3dfbWFzdGVyeRgLIAEoCBIXCg9pbXByb3Zl",
            "ZF9zY29yY2gYDCABKAgSFQoNd2ludGVyc19jaGlsbBgNIAEoCBIUCgxibG9v",
            "ZF9mcmVuenkYDiABKAgSFQoNc2F2YWdlX2NvbWJhdBgPIAEoCBIWCg5naWZ0",
            "X29mX2FydGhhcxgQIAEoCBIOCgZtYW5nbGUYESABKAgSDgoGdHJhdW1hGBIg",
            "ASgIEhAKCHN0YW1wZWRlGBMgASgIEhQKDGV4cG9zZV9hcm1vchgUIAEoCBIU",
            "CgxzdW5kZXJfYXJtb3IYFSABKAgSEQoJYWNpZF9zcGl0GBYgASgIEjAKEWN1",
            "cnNlX29mX3dlYWtuZXNzGBcgASgOMhUucHJvdG8uVHJpc3RhdGVFZmZlY3QS",
            "DQoFc3RpbmcYGCABKAgSEwoLc3BvcmVfY2xvdWQYJSABKAgSMAoRZGVtb3Jh",
            "bGl6aW5nX3JvYXIYGSABKA4yFS5wcm90by5UcmlzdGF0ZUVmZmVjdBIxChJk",
            "ZW1vcmFsaXppbmdfc2hvdXQYGiABKA4yFS5wcm90by5UcmlzdGF0ZUVmZmVj",
            "dBITCgt2aW5kaWNhdGlvbhgkIAEoCBIcChRkZW1vcmFsaXppbmdfc2NyZWVj",
            "aBgiIAEoCBIrCgx0aHVuZGVyX2NsYXAYGyABKA4yFS5wcm90by5UcmlzdGF0",
            "ZUVmZmVjdBIqCgtmcm9zdF9mZXZlchgcIAEoDjIVLnByb3RvLlRyaXN0YXRl",
            "RWZmZWN0EhcKD2luZmVjdGVkX3dvdW5kcxgdIAEoCBIeChZqdWRnZW1lbnRz",
            "X29mX3RoZV9qdXN0GB4gASgIEhQKDGluc2VjdF9zd2FybRgfIAEoCBIVCg1z",
            "Y29ycGlkX3N0aW5nGCAgASgIEhYKDnNoYWRvd19lbWJyYWNlGCEgASgIEhQK",
            "DGh1bnRlcnNfbWFyaxgjIAEoBRIVCg1jcnlzdGFsX3lpZWxkGCYgASgIIn0K",
            "C1RhcmdldElucHV0EiQKCmlucHV0X3R5cGUYASABKA4yEC5wcm90by5JbnB1",
            "dFR5cGUSDQoFbGFiZWwYAiABKAkSDwoHdG9vbHRpcBgFIAEoCRISCgpib29s",
            "X3ZhbHVlGAMgASgIEhQKDG51bWJlcl92YWx1ZRgEIAEoASLtAgoGVGFyZ2V0",
            "EgoKAmlkGA4gASgFEgwKBG5hbWUYDyABKAkSDQoFbGV2ZWwYBCABKAUSIAoI",
            "bW9iX3R5cGUYAyABKA4yDi5wcm90by5Nb2JUeXBlEg0KBXN0YXRzGAUgAygB",
            "EhcKD21pbl9iYXNlX2RhbWFnZRgHIAEoARIVCg1kYW1hZ2Vfc3ByZWFkGBMg",
            "ASgBEhMKC3N3aW5nX3NwZWVkGAggASgBEhIKCmR1YWxfd2llbGQYCSABKAgS",
            "GgoSZHVhbF93aWVsZF9wZW5hbHR5GAogASgIEhMKC3BhcnJ5X2hhc3RlGAwg",
            "ASgIEhYKDnN1cHByZXNzX2RvZGdlGBAgASgIEigKDHNwZWxsX3NjaG9vbBgN",
            "IAEoDjISLnByb3RvLlNwZWxsU2Nob29sEhIKCnRhbmtfaW5kZXgYBiABKAUS",
            "KQoNdGFyZ2V0X2lucHV0cxgSIAMoCzISLnByb3RvLlRhcmdldElucHV0IsoB",
            "CglFbmNvdW50ZXISEAoIZHVyYXRpb24YASABKAESGgoSZHVyYXRpb25fdmFy",
            "aWF0aW9uGAIgASgBEh0KFWV4ZWN1dGVfcHJvcG9ydGlvbl8yMBgDIAEoARId",
            "ChVleGVjdXRlX3Byb3BvcnRpb25fMjUYByABKAESHQoVZXhlY3V0ZV9wcm9w",
            "b3J0aW9uXzM1GAQgASgBEhIKCnVzZV9oZWFsdGgYBSABKAgSHgoHdGFyZ2V0",
            "cxgGIAMoCzINLnByb3RvLlRhcmdldCI7CgxQcmVzZXRUYXJnZXQSDAoEcGF0",
            "aBgBIAEoCRIdCgZ0YXJnZXQYAiABKAsyDS5wcm90by5UYXJnZXQiRQoPUHJl",
            "c2V0RW5jb3VudGVyEgwKBHBhdGgYASABKAkSJAoHdGFyZ2V0cxgCIAMoCzIT",
            "LnByb3RvLlByZXNldFRhcmdldCI1CghJdGVtU3BlYxIKCgJpZBgCIAEoBRIP",
            "CgdlbmNoYW50GAMgASgFEgwKBGdlbXMYBCADKAUiLwoNRXF1aXBtZW50U3Bl",
            "YxIeCgVpdGVtcxgBIAMoCzIPLnByb3RvLkl0ZW1TcGVjIm4KC1NpbURhdGFi",
            "YXNlEh0KBWl0ZW1zGAEgAygLMg4ucHJvdG8uU2ltSXRlbRIjCghlbmNoYW50",
            "cxgCIAMoCzIRLnByb3RvLlNpbUVuY2hhbnQSGwoEZ2VtcxgDIAMoCzINLnBy",
            "b3RvLlNpbUdlbSKRAwoHU2ltSXRlbRIKCgJpZBgBIAEoBRIMCgRuYW1lGAIg",
            "ASgJEh0KBHR5cGUYAyABKA4yDy5wcm90by5JdGVtVHlwZRIkCgphcm1vcl90",
            "eXBlGAQgASgOMhAucHJvdG8uQXJtb3JUeXBlEiYKC3dlYXBvbl90eXBlGAUg",
            "ASgOMhEucHJvdG8uV2VhcG9uVHlwZRIiCgloYW5kX3R5cGUYBiABKA4yDy5w",
            "cm90by5IYW5kVHlwZRIzChJyYW5nZWRfd2VhcG9uX3R5cGUYByABKA4yFy5w",
            "cm90by5SYW5nZWRXZWFwb25UeXBlEg0KBXN0YXRzGAggAygBEiQKC2dlbV9z",
            "b2NrZXRzGAkgAygOMg8ucHJvdG8uR2VtQ29sb3ISEwoLc29ja2V0Qm9udXMY",
            "CiADKAESGQoRd2VhcG9uX2RhbWFnZV9taW4YCyABKAESGQoRd2VhcG9uX2Rh",
            "bWFnZV9tYXgYDCABKAESFAoMd2VhcG9uX3NwZWVkGA0gASgBEhAKCHNldF9u",
            "YW1lGA4gASgJIi4KClNpbUVuY2hhbnQSEQoJZWZmZWN0X2lkGAEgASgFEg0K",
            "BXN0YXRzGAIgAygBIlEKBlNpbUdlbRIKCgJpZBgBIAEoBRIMCgRuYW1lGAIg",
            "ASgJEh4KBWNvbG9yGAMgASgOMg8ucHJvdG8uR2VtQ29sb3ISDQoFc3RhdHMY",
            "BCADKAEi3wEKDVVuaXRSZWZlcmVuY2USJwoEdHlwZRgCIAEoDjIZLnByb3Rv",
            "LlVuaXRSZWZlcmVuY2UuVHlwZRINCgVpbmRleBgDIAEoBRIjCgVvd25lchgE",
            "IAEoCzIULnByb3RvLlVuaXRSZWZlcmVuY2UicQoEVHlwZRILCgdVbmtub3du",
            "EAASCgoGUGxheWVyEAESCgoGVGFyZ2V0EAISBwoDUGV0EAMSCAoEU2VsZhAE",
            "EhEKDUN1cnJlbnRUYXJnZXQQBRIOCgpBbGxQbGF5ZXJzEAYSDgoKQWxsVGFy",
            "Z2V0cxAHInAKCEFjdGlvbklEEhIKCHNwZWxsX2lkGAEgASgFSAASEQoHaXRl",
            "bV9pZBgCIAEoBUgAEiYKCG90aGVyX2lkGAMgASgOMhIucHJvdG8uT3RoZXJB",
            "Y3Rpb25IABILCgN0YWcYBCABKAVCCAoGcmF3X2lkImgKBkdseXBocxIOCgZt",
            "YWpvcjEYASABKAUSDgoGbWFqb3IyGAIgASgFEg4KBm1ham9yMxgDIAEoBRIO",
            "CgZtaW5vcjEYBCABKAUSDgoGbWlub3IyGAUgASgFEg4KBm1pbm9yMxgGIAEo",
            "BSI4CghDb29sZG93bhIbCgJpZBgBIAEoCzIPLnByb3RvLkFjdGlvbklEEg8K",
            "B3RpbWluZ3MYAiADKAEiUgoJQ29vbGRvd25zEiIKCWNvb2xkb3ducxgBIAMo",
            "CzIPLnByb3RvLkNvb2xkb3duEiEKGWhwX3BlcmNlbnRfZm9yX2RlZmVuc2l2",
            "ZXMYAiABKAEigQEKDEhlYWxpbmdNb2RlbBILCgNocHMYASABKAESFwoPY2Fk",
            "ZW5jZV9zZWNvbmRzGAIgASgBEhkKEWNhZGVuY2VfdmFyaWF0aW9uGAUgASgB",
            "EhoKEmluc3BpcmF0aW9uX3VwdGltZRgDIAEoARIUCgxidXJzdF93aW5kb3cY",
            "BCABKAUiNAoOQ3VzdG9tUm90YXRpb24SIgoGc3BlbGxzGAEgAygLMhIucHJv",
            "dG8uQ3VzdG9tU3BlbGwiNgoLQ3VzdG9tU3BlbGwSDQoFc3BlbGwYASABKAUS",
            "GAoQY2FzdHNfcGVyX21pbnV0ZRgCIAEoASJ0CghJdGVtU3dhcBIgCgdtaF9p",
            "dGVtGAEgASgLMg8ucHJvdG8uSXRlbVNwZWMSIAoHb2hfaXRlbRgCIAEoCzIP",
            "LnByb3RvLkl0ZW1TcGVjEiQKC3JhbmdlZF9pdGVtGAMgASgLMg8ucHJvdG8u",
            "SXRlbVNwZWMiFgoIRHVyYXRpb24SCgoCbXMYASABKAEq1wMKBFNwZWMSFAoQ",
            "U3BlY0JhbGFuY2VEcnVpZBAAEhIKDlNwZWNGZXJhbERydWlkEAwSFgoSU3Bl",
            "Y0ZlcmFsVGFua0RydWlkEA4SGAoUU3BlY1Jlc3RvcmF0aW9uRHJ1aWQQEhIX",
            "ChNTcGVjRWxlbWVudGFsU2hhbWFuEAESGQoVU3BlY0VuaGFuY2VtZW50U2hh",
            "bWFuEAkSGQoVU3BlY1Jlc3RvcmF0aW9uU2hhbWFuEBMSDgoKU3BlY0h1bnRl",
            "chAIEgwKCFNwZWNNYWdlEAISEwoPU3BlY0hvbHlQYWxhZGluEBQSGQoVU3Bl",
            "Y1Byb3RlY3Rpb25QYWxhZGluEA0SGgoWU3BlY1JldHJpYnV0aW9uUGFsYWRp",
            "bhADEg0KCVNwZWNSb2d1ZRAHEhUKEVNwZWNIZWFsaW5nUHJpZXN0EBESFAoQ",
            "U3BlY1NoYWRvd1ByaWVzdBAEEhMKD1NwZWNTbWl0ZVByaWVzdBAKEg8KC1Nw",
            "ZWNXYXJsb2NrEAUSDwoLU3BlY1dhcnJpb3IQBhIZChVTcGVjUHJvdGVjdGlv",
            "bldhcnJpb3IQCxITCg9TcGVjRGVhdGhrbmlnaHQQDxIXChNTcGVjVGFua0Rl",
            "YXRoa25pZ2h0EBAqtQEKBFJhY2USDwoLUmFjZVVua25vd24QABIQCgxSYWNl",
            "Qmxvb2RFbGYQARIPCgtSYWNlRHJhZW5laRACEg0KCVJhY2VEd2FyZhADEg0K",
            "CVJhY2VHbm9tZRAEEg0KCVJhY2VIdW1hbhAFEhAKDFJhY2VOaWdodEVsZhAG",
            "EgsKB1JhY2VPcmMQBxIOCgpSYWNlVGF1cmVuEAgSDQoJUmFjZVRyb2xsEAkS",
            "DgoKUmFjZVVuZGVhZBAKKi8KB0ZhY3Rpb24SCwoHVW5rbm93bhAAEgwKCEFs",
            "bGlhbmNlEAESCQoFSG9yZGUQAirHAQoFQ2xhc3MSEAoMQ2xhc3NVbmtub3du",
            "EAASDgoKQ2xhc3NEcnVpZBABEg8KC0NsYXNzSHVudGVyEAISDQoJQ2xhc3NN",
            "YWdlEAMSEAoMQ2xhc3NQYWxhZGluEAQSDwoLQ2xhc3NQcmllc3QQBRIOCgpD",
            "bGFzc1JvZ3VlEAYSDwoLQ2xhc3NTaGFtYW4QBxIQCgxDbGFzc1dhcmxvY2sQ",
            "CBIQCgxDbGFzc1dhcnJpb3IQCRIUChBDbGFzc0RlYXRoa25pZ2h0EAoq1AEK",
            "ClByb2Zlc3Npb24SFQoRUHJvZmVzc2lvblVua25vd24QABILCgdBbGNoZW15",
            "EAESEQoNQmxhY2tzbWl0aGluZxACEg4KCkVuY2hhbnRpbmcQAxIPCgtFbmdp",
            "bmVlcmluZxAEEg0KCUhlcmJhbGlzbRAFEg8KC0luc2NyaXB0aW9uEAYSEQoN",
            "SmV3ZWxjcmFmdGluZxAHEhIKDkxlYXRoZXJ3b3JraW5nEAgSCgoGTWluaW5n",
            "EAkSDAoIU2tpbm5pbmcQChINCglUYWlsb3JpbmcQCyqMBgoEU3RhdBIQCgxT",
            "dGF0U3RyZW5ndGgQABIPCgtTdGF0QWdpbGl0eRABEg8KC1N0YXRTdGFtaW5h",
            "EAISEQoNU3RhdEludGVsbGVjdBADEg4KClN0YXRTcGlyaXQQBBISCg5TdGF0",
            "U3BlbGxQb3dlchAFEgsKB1N0YXRNUDUQBhIQCgxTdGF0U3BlbGxIaXQQBxIR",
            "Cg1TdGF0U3BlbGxDcml0EAgSEgoOU3RhdFNwZWxsSGFzdGUQCRIYChRTdGF0",
            "U3BlbGxQZW5ldHJhdGlvbhAKEhMKD1N0YXRBdHRhY2tQb3dlchALEhAKDFN0",
            "YXRNZWxlZUhpdBAMEhEKDVN0YXRNZWxlZUNyaXQQDRISCg5TdGF0TWVsZWVI",
            "YXN0ZRAOEhgKFFN0YXRBcm1vclBlbmV0cmF0aW9uEA8SEQoNU3RhdEV4cGVy",
            "dGlzZRAQEgwKCFN0YXRNYW5hEBESDgoKU3RhdEVuZXJneRASEgwKCFN0YXRS",
            "YWdlEBMSDQoJU3RhdEFybW9yEBQSGQoVU3RhdFJhbmdlZEF0dGFja1Bvd2Vy",
            "EBUSDwoLU3RhdERlZmVuc2UQFhINCglTdGF0QmxvY2sQFxISCg5TdGF0Qmxv",
            "Y2tWYWx1ZRAYEg0KCVN0YXREb2RnZRAZEg0KCVN0YXRQYXJyeRAaEhIKDlN0",
            "YXRSZXNpbGllbmNlEBsSDgoKU3RhdEhlYWx0aBAcEhgKFFN0YXRBcmNhbmVS",
            "ZXNpc3RhbmNlEB0SFgoSU3RhdEZpcmVSZXNpc3RhbmNlEB4SFwoTU3RhdEZy",
            "b3N0UmVzaXN0YW5jZRAfEhgKFFN0YXROYXR1cmVSZXNpc3RhbmNlECASGAoU",
            "U3RhdFNoYWRvd1Jlc2lzdGFuY2UQIRISCg5TdGF0Qm9udXNBcm1vchAiEhIK",
            "DlN0YXRSdW5pY1Bvd2VyECMSEQoNU3RhdEJsb29kUnVuZRAkEhEKDVN0YXRG",
            "cm9zdFJ1bmUQJRISCg5TdGF0VW5ob2x5UnVuZRAmEhEKDVN0YXREZWF0aFJ1",
            "bmUQJyqoAQoKUHNldWRvU3RhdBIZChVQc2V1ZG9TdGF0TWFpbkhhbmREcHMQ",
            "ABIYChRQc2V1ZG9TdGF0T2ZmSGFuZERwcxABEhcKE1BzZXVkb1N0YXRSYW5n",
            "ZWREcHMQAhIiCh5Qc2V1ZG9TdGF0QmxvY2tWYWx1ZU11bHRpcGxpZXIQAxIT",
            "Cg9Qc2V1ZG9TdGF0RG9kZ2UQBBITCg9Qc2V1ZG9TdGF0UGFycnkQBSqsAgoI",
            "SXRlbVR5cGUSEwoPSXRlbVR5cGVVbmtub3duEAASEAoMSXRlbVR5cGVIZWFk",
            "EAESEAoMSXRlbVR5cGVOZWNrEAISFAoQSXRlbVR5cGVTaG91bGRlchADEhAK",
            "DEl0ZW1UeXBlQmFjaxAEEhEKDUl0ZW1UeXBlQ2hlc3QQBRIRCg1JdGVtVHlw",
            "ZVdyaXN0EAYSEQoNSXRlbVR5cGVIYW5kcxAHEhEKDUl0ZW1UeXBlV2Fpc3QQ",
            "CBIQCgxJdGVtVHlwZUxlZ3MQCRIQCgxJdGVtVHlwZUZlZXQQChISCg5JdGVt",
            "VHlwZUZpbmdlchALEhMKD0l0ZW1UeXBlVHJpbmtldBAMEhIKDkl0ZW1UeXBl",
            "V2VhcG9uEA0SEgoOSXRlbVR5cGVSYW5nZWQQDipyCglBcm1vclR5cGUSFAoQ",
            "QXJtb3JUeXBlVW5rbm93bhAAEhIKDkFybW9yVHlwZUNsb3RoEAESFAoQQXJt",
            "b3JUeXBlTGVhdGhlchACEhEKDUFybW9yVHlwZU1haWwQAxISCg5Bcm1vclR5",
            "cGVQbGF0ZRAEKuIBCgpXZWFwb25UeXBlEhUKEVdlYXBvblR5cGVVbmtub3du",
            "EAASEQoNV2VhcG9uVHlwZUF4ZRABEhQKEFdlYXBvblR5cGVEYWdnZXIQAhIS",
            "Cg5XZWFwb25UeXBlRmlzdBADEhIKDldlYXBvblR5cGVNYWNlEAQSFQoRV2Vh",
            "cG9uVHlwZU9mZkhhbmQQBRIVChFXZWFwb25UeXBlUG9sZWFybRAGEhQKEFdl",
            "YXBvblR5cGVTaGllbGQQBxITCg9XZWFwb25UeXBlU3RhZmYQCBITCg9XZWFw",
            "b25UeXBlU3dvcmQQCSp0CghIYW5kVHlwZRITCg9IYW5kVHlwZVVua25vd24Q",
            "ABIUChBIYW5kVHlwZU1haW5IYW5kEAESEwoPSGFuZFR5cGVPbmVIYW5kEAIS",
            "EwoPSGFuZFR5cGVPZmZIYW5kEAMSEwoPSGFuZFR5cGVUd29IYW5kEAQqoQIK",
            "EFJhbmdlZFdlYXBvblR5cGUSGwoXUmFuZ2VkV2VhcG9uVHlwZVVua25vd24Q",
            "ABIXChNSYW5nZWRXZWFwb25UeXBlQm93EAESHAoYUmFuZ2VkV2VhcG9uVHlw",
            "ZUNyb3NzYm93EAISFwoTUmFuZ2VkV2VhcG9uVHlwZUd1bhADEhgKFFJhbmdl",
            "ZFdlYXBvblR5cGVJZG9sEAQSGgoWUmFuZ2VkV2VhcG9uVHlwZUxpYnJhbRAF",
            "EhoKFlJhbmdlZFdlYXBvblR5cGVUaHJvd24QBhIZChVSYW5nZWRXZWFwb25U",
            "eXBlVG90ZW0QBxIYChRSYW5nZWRXZWFwb25UeXBlV2FuZBAIEhkKFVJhbmdl",
            "ZFdlYXBvblR5cGVTaWdpbBAJKtsCCghJdGVtU2xvdBIQCgxJdGVtU2xvdEhl",
            "YWQQABIQCgxJdGVtU2xvdE5lY2sQARIUChBJdGVtU2xvdFNob3VsZGVyEAIS",
            "EAoMSXRlbVNsb3RCYWNrEAMSEQoNSXRlbVNsb3RDaGVzdBAEEhEKDUl0ZW1T",
            "bG90V3Jpc3QQBRIRCg1JdGVtU2xvdEhhbmRzEAYSEQoNSXRlbVNsb3RXYWlz",
            "dBAHEhAKDEl0ZW1TbG90TGVncxAIEhAKDEl0ZW1TbG90RmVldBAJEhMKD0l0",
            "ZW1TbG90RmluZ2VyMRAKEhMKD0l0ZW1TbG90RmluZ2VyMhALEhQKEEl0ZW1T",
            "bG90VHJpbmtldDEQDBIUChBJdGVtU2xvdFRyaW5rZXQyEA0SFAoQSXRlbVNs",
            "b3RNYWluSGFuZBAOEhMKD0l0ZW1TbG90T2ZmSGFuZBAPEhIKDkl0ZW1TbG90",
            "UmFuZ2VkEBAqyAEKC0l0ZW1RdWFsaXR5EhMKD0l0ZW1RdWFsaXR5SnVuaxAA",
            "EhUKEUl0ZW1RdWFsaXR5Q29tbW9uEAESFwoTSXRlbVF1YWxpdHlVbmNvbW1v",
            "bhACEhMKD0l0ZW1RdWFsaXR5UmFyZRADEhMKD0l0ZW1RdWFsaXR5RXBpYxAE",
            "EhgKFEl0ZW1RdWFsaXR5TGVnZW5kYXJ5EAUSFwoTSXRlbVF1YWxpdHlBcnRp",
            "ZmFjdBAGEhcKE0l0ZW1RdWFsaXR5SGVpcmxvb20QByq6AQoIR2VtQ29sb3IS",
            "EwoPR2VtQ29sb3JVbmtub3duEAASEAoMR2VtQ29sb3JNZXRhEAESDwoLR2Vt",
            "Q29sb3JSZWQQAhIQCgxHZW1Db2xvckJsdWUQAxISCg5HZW1Db2xvclllbGxv",
            "dxAEEhEKDUdlbUNvbG9yR3JlZW4QBRISCg5HZW1Db2xvck9yYW5nZRAGEhIK",
            "DkdlbUNvbG9yUHVycGxlEAcSFQoRR2VtQ29sb3JQcmlzbWF0aWMQCCqrAQoL",
            "U3BlbGxTY2hvb2wSFwoTU3BlbGxTY2hvb2xQaHlzaWNhbBAAEhUKEVNwZWxs",
            "U2Nob29sQXJjYW5lEAESEwoPU3BlbGxTY2hvb2xGaXJlEAISFAoQU3BlbGxT",
            "Y2hvb2xGcm9zdBADEhMKD1NwZWxsU2Nob29sSG9seRAEEhUKEVNwZWxsU2No",
            "b29sTmF0dXJlEAUSFQoRU3BlbGxTY2hvb2xTaGFkb3cQBipiCg5UcmlzdGF0",
            "ZUVmZmVjdBIZChVUcmlzdGF0ZUVmZmVjdE1pc3NpbmcQABIZChVUcmlzdGF0",
            "ZUVmZmVjdFJlZ3VsYXIQARIaChZUcmlzdGF0ZUVmZmVjdEltcHJvdmVkEAIq",
            "WQoJRXhwbG9zaXZlEhQKEEV4cGxvc2l2ZVVua25vd24QABIZChVFeHBsb3Np",
            "dmVTYXJvbml0ZUJvbWIQARIbChdFeHBsb3NpdmVDb2JhbHRGcmFnQm9tYhAC",
            "KuYCCgdQb3Rpb25zEhEKDVVua25vd25Qb3Rpb24QABIWChJSdW5pY0hlYWxp",
            "bmdQb3Rpb24QARITCg9SdW5pY01hbmFQb3Rpb24QAhIYChRJbmRlc3RydWN0",
            "aWJsZVBvdGlvbhADEhEKDVBvdGlvbk9mU3BlZWQQBBIVChFQb3Rpb25PZldp",
            "bGRNYWdpYxAFEhUKEURlc3RydWN0aW9uUG90aW9uEAYSEwoPU3VwZXJNYW5h",
            "UG90aW9uEAcSDwoLSGFzdGVQb3Rpb24QCBIUChBNaWdodHlSYWdlUG90aW9u",
            "EAkSEQoNRmVsTWFuYVBvdGlvbhAKEhgKFEluc2FuZVN0cmVuZ3RoUG90aW9u",
            "EAsSFAoQSXJvbnNoaWVsZFBvdGlvbhAMEhAKDEhlcm9pY1BvdGlvbhANEhUK",
            "EVJ1bmljTWFuYUluamVjdG9yEA4SGAoUUnVuaWNIZWFsaW5nSW5qZWN0b3IQ",
            "DyqBAQoIQ29uanVyZWQSEwoPQ29uanVyZWRVbmtub3duEAASFAoQQ29uanVy",
            "ZWREYXJrUnVuZRABEhQKEENvbmp1cmVkRmxhbWVDYXAQAhIXChNDb25qdXJl",
            "ZEhlYWx0aHN0b25lEAUSGwoXQ29uanVyZWRSb2d1ZVRoaXN0bGVUZWEQBCrq",
            "AgoFRmxhc2sSEAoMRmxhc2tVbmtub3duEAASFwoTRmxhc2tPZlRoZUZyb3N0",
            "V3lybRABEhYKEkZsYXNrT2ZFbmRsZXNzUmFnZRACEhMKD0ZsYXNrT2ZQdXJl",
            "TW9qbxADEhUKEUZsYXNrT2ZTdG9uZWJsb29kEAQSGgoWTGVzc2VyRmxhc2tP",
            "ZlRvdWdobmVzcxAFEhsKF0xlc3NlckZsYXNrT2ZSZXNpc3RhbmNlEAYSGAoU",
            "Rmxhc2tPZkJsaW5kaW5nTGlnaHQQBxIcChhGbGFza09mTWlnaHR5UmVzdG9y",
            "YXRpb24QCBIUChBGbGFza09mUHVyZURlYXRoEAkSHAoYRmxhc2tPZlJlbGVu",
            "dGxlc3NBc3NhdWx0EAoSFwoTRmxhc2tPZlN1cHJlbWVQb3dlchALEhgKFEZs",
            "YXNrT2ZGb3J0aWZpY2F0aW9uEAwSGgoWRmxhc2tPZkNocm9tYXRpY1dvbmRl",
            "chANKqsECgxCYXR0bGVFbGl4aXISFwoTQmF0dGxlRWxpeGlyVW5rbm93bhAA",
            "EhQKEEVsaXhpck9mQWNjdXJhY3kQARIZChVFbGl4aXJPZkFybW9yUGllcmNp",
            "bmcQAhIZChVFbGl4aXJPZkRlYWRseVN0cmlrZXMQAxIVChFFbGl4aXJPZkV4",
            "cGVydGlzZRAEEhoKFkVsaXhpck9mTGlnaHRuaW5nU3BlZWQQBRIZChVFbGl4",
            "aXJPZk1pZ2h0eUFnaWxpdHkQBhIaChZFbGl4aXJPZk1pZ2h0eVN0cmVuZ3Ro",
            "EAcSDwoLR3VydXNFbGl4aXIQCBIUChBTcGVsbHBvd2VyRWxpeGlyEAkSDwoL",
            "V3JhdGhFbGl4aXIQChIQCgxBZGVwdHNFbGl4aXIQCxIYChRFbGl4aXJPZkRl",
            "bW9uc2xheWluZxAMEhgKFEVsaXhpck9mTWFqb3JBZ2lsaXR5EA0SGgoWRWxp",
            "eGlyT2ZNYWpvckZpcmVQb3dlchAOEhsKF0VsaXhpck9mTWFqb3JGcm9zdFBv",
            "d2VyEA8SHAoYRWxpeGlyT2ZNYWpvclNoYWRvd1Bvd2VyEBASGQoVRWxpeGly",
            "T2ZNYWpvclN0cmVuZ3RoEBESEwoPRWxpeGlyT2ZNYXN0ZXJ5EBISFwoTRWxp",
            "eGlyT2ZUaGVNb25nb29zZRATEhUKEUZlbFN0cmVuZ3RoRWxpeGlyEBQSFwoT",
            "R3JlYXRlckFyY2FuZUVsaXhpchAVKt0CCg5HdWFyZGlhbkVsaXhpchIZChVH",
            "dWFyZGlhbkVsaXhpclVua25vd24QABIZChVFbGl4aXJPZk1pZ2h0eURlZmVu",
            "c2UQARIbChdFbGl4aXJPZk1pZ2h0eUZvcnRpdHVkZRACEhsKF0VsaXhpck9m",
            "TWlnaHR5TWFnZWJsb29kEAMSGgoWRWxpeGlyT2ZNaWdodHlUaG91Z2h0cxAE",
            "EhYKEkVsaXhpck9mUHJvdGVjdGlvbhAFEhIKDkVsaXhpck9mU3Bpcml0EAYS",
            "EAoMR2lmdE9mQXJ0aGFzEAcSGQoVRWxpeGlyT2ZEcmFlbmljV2lzZG9tEAgS",
            "FAoQRWxpeGlyT2ZJcm9uc2tpbhAJEhgKFEVsaXhpck9mTWFqb3JEZWZlbnNl",
            "EAoSGgoWRWxpeGlyT2ZNYWpvckZvcnRpdHVkZRALEhoKFkVsaXhpck9mTWFq",
            "b3JNYWdlYmxvb2QQDCr/AwoERm9vZBIPCgtGb29kVW5rbm93bhAAEhEKDUZv",
            "b2RGaXNoRmVhc3QQARISCg5Gb29kR3JlYXRGZWFzdBACEhoKFkZvb2RCbGFj",
            "a2VuZWREcmFnb25maW4QAxITCg9Gb29kSGVhcnR5Umhpbm8QBBIXChNGb29k",
            "TWVnYU1hbW1vdGhNZWFsEAUSGAoURm9vZFNwaWNlZFdvcm1CdXJnZXIQBhId",
            "ChlGb29kUmhpbm9saWNpb3VzV29ybXN0ZWFrEAcSGgoWRm9vZEltcGVyaWFs",
            "TWFudGFTdGVhaxAIEhYKEkZvb2RTbmFwcGVyRXh0cmVtZRAJEhcKE0Zvb2RN",
            "aWdodHlSaGlub0RvZ3MQChIZChVGb29kRmlyZWNyYWNrZXJTYWxtb24QCxIT",
            "Cg9Gb29kQ3V0dGxlc3RlYWsQDBIWChJGb29kRHJhZ29uZmluRmlsZXQQDRIZ",
            "ChVGb29kQmxhY2tlbmVkQmFzaWxpc2sQDhIWChJGb29kR3JpbGxlZE11ZGZp",
            "c2gQDxISCg5Gb29kUmF2YWdlckRvZxAQEhgKFEZvb2RSb2FzdGVkQ2xlZnRo",
            "b29mEBESFQoRRm9vZFNrdWxsZmlzaFNvdXAQEhIWChJGb29kU3BpY3lIb3RU",
            "YWxidWsQExIXChNGb29kRmlzaGVybWFuc0ZlYXN0EBQqVQoHUGV0Rm9vZBIS",
            "Cg5QZXRGb29kVW5rbm93bhAAEh4KGlBldEZvb2RTcGljZWRNYW1tb3RoVHJl",
            "YXRzEAESFgoSUGV0Rm9vZEtpYmxlcnNCaXRzEAIqvgEKB01vYlR5cGUSEgoO",
            "TW9iVHlwZVVua25vd24QABIQCgxNb2JUeXBlQmVhc3QQARIQCgxNb2JUeXBl",
            "RGVtb24QAhIUChBNb2JUeXBlRHJhZ29ua2luEAMSFAoQTW9iVHlwZUVsZW1l",
            "bnRhbBAEEhAKDE1vYlR5cGVHaWFudBAFEhMKD01vYlR5cGVIdW1hbm9pZBAG",
            "EhUKEU1vYlR5cGVNZWNoYW5pY2FsEAcSEQoNTW9iVHlwZVVuZGVhZBAIKiEK",
            "CUlucHV0VHlwZRIICgRCb29sEAASCgoGTnVtYmVyEAEqfQoLRW5jaGFudFR5",
            "cGUSFQoRRW5jaGFudFR5cGVOb3JtYWwQABIWChJFbmNoYW50VHlwZVR3b0hh",
            "bmQQARIVChFFbmNoYW50VHlwZVNoaWVsZBACEhIKDkVuY2hhbnRUeXBlS2l0",
            "EAMSFAoQRW5jaGFudFR5cGVTdGFmZhAEKtsDCgtPdGhlckFjdGlvbhITCg9P",
            "dGhlckFjdGlvbk5vbmUQABITCg9PdGhlckFjdGlvbldhaXQQARIYChRPdGhl",
            "ckFjdGlvbk1hbmFSZWdlbhACEhoKFk90aGVyQWN0aW9uRW5lcmd5UmVnZW4Q",
            "BRIZChVPdGhlckFjdGlvbkZvY3VzUmVnZW4QBhIXChNPdGhlckFjdGlvbk1h",
            "bmFHYWluEAoSFwoTT3RoZXJBY3Rpb25SYWdlR2FpbhALEhUKEU90aGVyQWN0",
            "aW9uQXR0YWNrEAMSFAoQT3RoZXJBY3Rpb25TaG9vdBAEEhIKDk90aGVyQWN0",
            "aW9uUGV0EAcSFQoRT3RoZXJBY3Rpb25SZWZ1bmQQCBIaChZPdGhlckFjdGlv",
            "bkRhbWFnZVRha2VuEAkSGwoXT3RoZXJBY3Rpb25IZWFsaW5nTW9kZWwQDBIc",
            "ChhPdGhlckFjdGlvbkJsb29kUnVuZUdhaW4QDRIcChhPdGhlckFjdGlvbkZy",
            "b3N0UnVuZUdhaW4QDhIdChlPdGhlckFjdGlvblVuaG9seVJ1bmVHYWluEA8S",
            "HAoYT3RoZXJBY3Rpb25EZWF0aFJ1bmVHYWluEBASFQoRT3RoZXJBY3Rpb25Q",
            "b3Rpb24QEUIdqgIaU2lydXNEYlNjcmFwcGVyLlVJRGF0YWJhc2ViBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SirusDbScrapper.UIDatabase.Spec), typeof(global::SirusDbScrapper.UIDatabase.Race), typeof(global::SirusDbScrapper.UIDatabase.Faction), typeof(global::SirusDbScrapper.UIDatabase.Class), typeof(global::SirusDbScrapper.UIDatabase.Profession), typeof(global::SirusDbScrapper.UIDatabase.Stat), typeof(global::SirusDbScrapper.UIDatabase.PseudoStat), typeof(global::SirusDbScrapper.UIDatabase.ItemType), typeof(global::SirusDbScrapper.UIDatabase.ArmorType), typeof(global::SirusDbScrapper.UIDatabase.WeaponType), typeof(global::SirusDbScrapper.UIDatabase.HandType), typeof(global::SirusDbScrapper.UIDatabase.RangedWeaponType), typeof(global::SirusDbScrapper.UIDatabase.ItemSlot), typeof(global::SirusDbScrapper.UIDatabase.ItemQuality), typeof(global::SirusDbScrapper.UIDatabase.GemColor), typeof(global::SirusDbScrapper.UIDatabase.SpellSchool), typeof(global::SirusDbScrapper.UIDatabase.TristateEffect), typeof(global::SirusDbScrapper.UIDatabase.Explosive), typeof(global::SirusDbScrapper.UIDatabase.Potions), typeof(global::SirusDbScrapper.UIDatabase.Conjured), typeof(global::SirusDbScrapper.UIDatabase.Flask), typeof(global::SirusDbScrapper.UIDatabase.BattleElixir), typeof(global::SirusDbScrapper.UIDatabase.GuardianElixir), typeof(global::SirusDbScrapper.UIDatabase.Food), typeof(global::SirusDbScrapper.UIDatabase.PetFood), typeof(global::SirusDbScrapper.UIDatabase.MobType), typeof(global::SirusDbScrapper.UIDatabase.InputType), typeof(global::SirusDbScrapper.UIDatabase.EnchantType), typeof(global::SirusDbScrapper.UIDatabase.OtherAction), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.UnitStats), global::SirusDbScrapper.UIDatabase.UnitStats.Parser, new[]{ "Stats", "PseudoStats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.RaidBuffs), global::SirusDbScrapper.UIDatabase.RaidBuffs.Parser, new[]{ "GiftOfTheWild", "PowerWordFortitude", "CommandingShout", "BloodPact", "HornOfWinter", "StrengthOfEarthTotem", "ArcaneBrilliance", "FelIntelligence", "DivineSpirit", "BattleShout", "TrueshotAura", "UnleashedRage", "AbominationsMight", "LeaderOfThePack", "Rampage", "IcyTalons", "WindfuryTotem", "TotemOfWrath", "FlametongueTotem", "DemonicPactSp", "SwiftRetribution", "MoonkinAura", "ElementalOath", "WrathOfAirTotem", "FerociousInspiration", "SanctifiedRetribution", "ArcaneEmpowerment", "ManaSpringTotem", "ShadowProtection", "NatureResistanceTotem", "AspectOfTheWild", "FrostResistanceAura", "FrostResistanceTotem", "Bloodlust", "Thorns", "DevotionAura", "StoneskinTotem", "RetributionAura", "StrengthOfWrynn", "DrumsOfForgottenKings", "DrumsOfTheWild", "ScrollOfProtection", "ScrollOfStamina", "ScrollOfStrength", "ScrollOfAgility", "ScrollOfIntellect", "ScrollOfSpirit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.PartyBuffs), global::SirusDbScrapper.UIDatabase.PartyBuffs.Parser, new[]{ "AtieshMage", "AtieshWarlock", "BraidedEterniumChain", "EyeOfTheNight", "ChainOfTheTwilightOwl", "ManaTideTotems", "HeroicPresence" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.IndividualBuffs), global::SirusDbScrapper.UIDatabase.IndividualBuffs.Parser, new[]{ "BlessingOfKings", "BlessingOfWisdom", "BlessingOfMight", "BlessingOfSanctuary", "Vigilance", "RenewedHope", "HymnOfHope", "HandOfSalvation", "Rapture", "Innervates", "PowerInfusions", "UnholyFrenzy", "RevitalizeRejuvination", "RevitalizeWildGrowth", "TricksOfTheTrades", "DivineGuardians", "PainSuppressions", "HandOfSacrifices", "GuardianSpirits", "ShatteringThrows", "VampiricTouch", "HuntingParty", "JudgementsOfTheWise", "ImprovedSoulLeech", "EnduringWinter", "FocusMagic" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.Consumes), global::SirusDbScrapper.UIDatabase.Consumes.Parser, new[]{ "Flask", "BattleElixir", "GuardianElixir", "Food", "PetFood", "PetScrollOfAgility", "PetScrollOfStrength", "DefaultPotion", "PrepopPotion", "DefaultConjured", "ThermalSapper", "ExplosiveDecoy", "FillerExplosive" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.Debuffs), global::SirusDbScrapper.UIDatabase.Debuffs.Parser, new[]{ "JudgementOfWisdom", "JudgementOfLight", "Misery", "FaerieFire", "CurseOfElements", "EbonPlaguebringer", "EarthAndMoon", "HeartOfTheCrusader", "MasterPoisoner", "TotemOfWrath", "ShadowMastery", "ImprovedScorch", "WintersChill", "BloodFrenzy", "SavageCombat", "GiftOfArthas", "Mangle", "Trauma", "Stampede", "ExposeArmor", "SunderArmor", "AcidSpit", "CurseOfWeakness", "Sting", "SporeCloud", "DemoralizingRoar", "DemoralizingShout", "Vindication", "DemoralizingScreech", "ThunderClap", "FrostFever", "InfectedWounds", "JudgementsOfTheJust", "InsectSwarm", "ScorpidSting", "ShadowEmbrace", "HuntersMark", "CrystalYield" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.TargetInput), global::SirusDbScrapper.UIDatabase.TargetInput.Parser, new[]{ "InputType", "Label", "Tooltip", "BoolValue", "NumberValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.Target), global::SirusDbScrapper.UIDatabase.Target.Parser, new[]{ "Id", "Name", "Level", "MobType", "Stats", "MinBaseDamage", "DamageSpread", "SwingSpeed", "DualWield", "DualWieldPenalty", "ParryHaste", "SuppressDodge", "SpellSchool", "TankIndex", "TargetInputs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.Encounter), global::SirusDbScrapper.UIDatabase.Encounter.Parser, new[]{ "Duration", "DurationVariation", "ExecuteProportion20", "ExecuteProportion25", "ExecuteProportion35", "UseHealth", "Targets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.PresetTarget), global::SirusDbScrapper.UIDatabase.PresetTarget.Parser, new[]{ "Path", "Target" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.PresetEncounter), global::SirusDbScrapper.UIDatabase.PresetEncounter.Parser, new[]{ "Path", "Targets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.ItemSpec), global::SirusDbScrapper.UIDatabase.ItemSpec.Parser, new[]{ "Id", "Enchant", "Gems" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.EquipmentSpec), global::SirusDbScrapper.UIDatabase.EquipmentSpec.Parser, new[]{ "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.SimDatabase), global::SirusDbScrapper.UIDatabase.SimDatabase.Parser, new[]{ "Items", "Enchants", "Gems" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.SimItem), global::SirusDbScrapper.UIDatabase.SimItem.Parser, new[]{ "Id", "Name", "Type", "ArmorType", "WeaponType", "HandType", "RangedWeaponType", "Stats", "GemSockets", "SocketBonus", "WeaponDamageMin", "WeaponDamageMax", "WeaponSpeed", "SetName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.SimEnchant), global::SirusDbScrapper.UIDatabase.SimEnchant.Parser, new[]{ "EffectId", "Stats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.SimGem), global::SirusDbScrapper.UIDatabase.SimGem.Parser, new[]{ "Id", "Name", "Color", "Stats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.UnitReference), global::SirusDbScrapper.UIDatabase.UnitReference.Parser, new[]{ "Type", "Index", "Owner" }, null, new[]{ typeof(global::SirusDbScrapper.UIDatabase.UnitReference.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.ActionID), global::SirusDbScrapper.UIDatabase.ActionID.Parser, new[]{ "SpellId", "ItemId", "OtherId", "Tag" }, new[]{ "RawId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.Glyphs), global::SirusDbScrapper.UIDatabase.Glyphs.Parser, new[]{ "Major1", "Major2", "Major3", "Minor1", "Minor2", "Minor3" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.Cooldown), global::SirusDbScrapper.UIDatabase.Cooldown.Parser, new[]{ "Id", "Timings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.Cooldowns), global::SirusDbScrapper.UIDatabase.Cooldowns.Parser, new[]{ "Cooldowns_", "HpPercentForDefensives" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.HealingModel), global::SirusDbScrapper.UIDatabase.HealingModel.Parser, new[]{ "Hps", "CadenceSeconds", "CadenceVariation", "InspirationUptime", "BurstWindow" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.CustomRotation), global::SirusDbScrapper.UIDatabase.CustomRotation.Parser, new[]{ "Spells" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.CustomSpell), global::SirusDbScrapper.UIDatabase.CustomSpell.Parser, new[]{ "Spell", "CastsPerMinute" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.ItemSwap), global::SirusDbScrapper.UIDatabase.ItemSwap.Parser, new[]{ "MhItem", "OhItem", "RangedItem" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.Duration), global::SirusDbScrapper.UIDatabase.Duration.Parser, new[]{ "Ms" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Spec {
    [pbr::OriginalName("SpecBalanceDruid")] BalanceDruid = 0,
    [pbr::OriginalName("SpecFeralDruid")] FeralDruid = 12,
    [pbr::OriginalName("SpecFeralTankDruid")] FeralTankDruid = 14,
    [pbr::OriginalName("SpecRestorationDruid")] RestorationDruid = 18,
    [pbr::OriginalName("SpecElementalShaman")] ElementalShaman = 1,
    [pbr::OriginalName("SpecEnhancementShaman")] EnhancementShaman = 9,
    [pbr::OriginalName("SpecRestorationShaman")] RestorationShaman = 19,
    [pbr::OriginalName("SpecHunter")] Hunter = 8,
    [pbr::OriginalName("SpecMage")] Mage = 2,
    [pbr::OriginalName("SpecHolyPaladin")] HolyPaladin = 20,
    [pbr::OriginalName("SpecProtectionPaladin")] ProtectionPaladin = 13,
    [pbr::OriginalName("SpecRetributionPaladin")] RetributionPaladin = 3,
    [pbr::OriginalName("SpecRogue")] Rogue = 7,
    [pbr::OriginalName("SpecHealingPriest")] HealingPriest = 17,
    [pbr::OriginalName("SpecShadowPriest")] ShadowPriest = 4,
    [pbr::OriginalName("SpecSmitePriest")] SmitePriest = 10,
    [pbr::OriginalName("SpecWarlock")] Warlock = 5,
    [pbr::OriginalName("SpecWarrior")] Warrior = 6,
    [pbr::OriginalName("SpecProtectionWarrior")] ProtectionWarrior = 11,
    [pbr::OriginalName("SpecDeathknight")] Deathknight = 15,
    [pbr::OriginalName("SpecTankDeathknight")] TankDeathknight = 16,
  }

  public enum Race {
    [pbr::OriginalName("RaceUnknown")] Unknown = 0,
    [pbr::OriginalName("RaceBloodElf")] BloodElf = 1,
    [pbr::OriginalName("RaceDraenei")] Draenei = 2,
    [pbr::OriginalName("RaceDwarf")] Dwarf = 3,
    [pbr::OriginalName("RaceGnome")] Gnome = 4,
    [pbr::OriginalName("RaceHuman")] Human = 5,
    [pbr::OriginalName("RaceNightElf")] NightElf = 6,
    [pbr::OriginalName("RaceOrc")] Orc = 7,
    [pbr::OriginalName("RaceTauren")] Tauren = 8,
    [pbr::OriginalName("RaceTroll")] Troll = 9,
    [pbr::OriginalName("RaceUndead")] Undead = 10,
  }

  public enum Faction {
    [pbr::OriginalName("Unknown")] Unknown = 0,
    [pbr::OriginalName("Alliance")] Alliance = 1,
    [pbr::OriginalName("Horde")] Horde = 2,
  }

  public enum Class {
    [pbr::OriginalName("ClassUnknown")] Unknown = 0,
    [pbr::OriginalName("ClassDruid")] Druid = 1,
    [pbr::OriginalName("ClassHunter")] Hunter = 2,
    [pbr::OriginalName("ClassMage")] Mage = 3,
    [pbr::OriginalName("ClassPaladin")] Paladin = 4,
    [pbr::OriginalName("ClassPriest")] Priest = 5,
    [pbr::OriginalName("ClassRogue")] Rogue = 6,
    [pbr::OriginalName("ClassShaman")] Shaman = 7,
    [pbr::OriginalName("ClassWarlock")] Warlock = 8,
    [pbr::OriginalName("ClassWarrior")] Warrior = 9,
    [pbr::OriginalName("ClassDeathknight")] Deathknight = 10,
  }

  public enum Profession {
    [pbr::OriginalName("ProfessionUnknown")] Unknown = 0,
    [pbr::OriginalName("Alchemy")] Alchemy = 1,
    [pbr::OriginalName("Blacksmithing")] Blacksmithing = 2,
    [pbr::OriginalName("Enchanting")] Enchanting = 3,
    [pbr::OriginalName("Engineering")] Engineering = 4,
    [pbr::OriginalName("Herbalism")] Herbalism = 5,
    [pbr::OriginalName("Inscription")] Inscription = 6,
    [pbr::OriginalName("Jewelcrafting")] Jewelcrafting = 7,
    [pbr::OriginalName("Leatherworking")] Leatherworking = 8,
    [pbr::OriginalName("Mining")] Mining = 9,
    [pbr::OriginalName("Skinning")] Skinning = 10,
    [pbr::OriginalName("Tailoring")] Tailoring = 11,
  }

  /// <summary>
  /// Keep in sync with sim/core/stats/stats.go.
  /// </summary>
  public enum Stat {
    [pbr::OriginalName("StatStrength")] Strength = 0,
    [pbr::OriginalName("StatAgility")] Agility = 1,
    [pbr::OriginalName("StatStamina")] Stamina = 2,
    [pbr::OriginalName("StatIntellect")] Intellect = 3,
    [pbr::OriginalName("StatSpirit")] Spirit = 4,
    [pbr::OriginalName("StatSpellPower")] SpellPower = 5,
    [pbr::OriginalName("StatMP5")] Mp5 = 6,
    [pbr::OriginalName("StatSpellHit")] SpellHit = 7,
    [pbr::OriginalName("StatSpellCrit")] SpellCrit = 8,
    [pbr::OriginalName("StatSpellHaste")] SpellHaste = 9,
    [pbr::OriginalName("StatSpellPenetration")] SpellPenetration = 10,
    [pbr::OriginalName("StatAttackPower")] AttackPower = 11,
    [pbr::OriginalName("StatMeleeHit")] MeleeHit = 12,
    [pbr::OriginalName("StatMeleeCrit")] MeleeCrit = 13,
    [pbr::OriginalName("StatMeleeHaste")] MeleeHaste = 14,
    [pbr::OriginalName("StatArmorPenetration")] ArmorPenetration = 15,
    [pbr::OriginalName("StatExpertise")] Expertise = 16,
    [pbr::OriginalName("StatMana")] Mana = 17,
    [pbr::OriginalName("StatEnergy")] Energy = 18,
    [pbr::OriginalName("StatRage")] Rage = 19,
    [pbr::OriginalName("StatArmor")] Armor = 20,
    [pbr::OriginalName("StatRangedAttackPower")] RangedAttackPower = 21,
    [pbr::OriginalName("StatDefense")] Defense = 22,
    [pbr::OriginalName("StatBlock")] Block = 23,
    [pbr::OriginalName("StatBlockValue")] BlockValue = 24,
    [pbr::OriginalName("StatDodge")] Dodge = 25,
    [pbr::OriginalName("StatParry")] Parry = 26,
    [pbr::OriginalName("StatResilience")] Resilience = 27,
    [pbr::OriginalName("StatHealth")] Health = 28,
    [pbr::OriginalName("StatArcaneResistance")] ArcaneResistance = 29,
    [pbr::OriginalName("StatFireResistance")] FireResistance = 30,
    [pbr::OriginalName("StatFrostResistance")] FrostResistance = 31,
    [pbr::OriginalName("StatNatureResistance")] NatureResistance = 32,
    [pbr::OriginalName("StatShadowResistance")] ShadowResistance = 33,
    [pbr::OriginalName("StatBonusArmor")] BonusArmor = 34,
    /// <summary>
    /// Placeholder: not used yet.
    /// </summary>
    [pbr::OriginalName("StatRunicPower")] RunicPower = 35,
    /// <summary>
    /// Placeholder: not used yet.
    /// </summary>
    [pbr::OriginalName("StatBloodRune")] BloodRune = 36,
    /// <summary>
    /// Placeholder: not used yet.
    /// </summary>
    [pbr::OriginalName("StatFrostRune")] FrostRune = 37,
    /// <summary>
    /// Placeholder: not used yet.
    /// </summary>
    [pbr::OriginalName("StatUnholyRune")] UnholyRune = 38,
    /// <summary>
    /// Placeholder: not used yet.
    /// </summary>
    [pbr::OriginalName("StatDeathRune")] DeathRune = 39,
  }

  /// <summary>
  /// Not all pseudostats are included here; just the ones we want to pass
  /// between the UI and backend.
  ///
  /// It's also OK to include things here which aren't in the PseudoStats struct.
  /// </summary>
  public enum PseudoStat {
    [pbr::OriginalName("PseudoStatMainHandDps")] MainHandDps = 0,
    [pbr::OriginalName("PseudoStatOffHandDps")] OffHandDps = 1,
    [pbr::OriginalName("PseudoStatRangedDps")] RangedDps = 2,
    [pbr::OriginalName("PseudoStatBlockValueMultiplier")] BlockValueMultiplier = 3,
    [pbr::OriginalName("PseudoStatDodge")] Dodge = 4,
    [pbr::OriginalName("PseudoStatParry")] Parry = 5,
  }

  public enum ItemType {
    [pbr::OriginalName("ItemTypeUnknown")] Unknown = 0,
    [pbr::OriginalName("ItemTypeHead")] Head = 1,
    [pbr::OriginalName("ItemTypeNeck")] Neck = 2,
    [pbr::OriginalName("ItemTypeShoulder")] Shoulder = 3,
    [pbr::OriginalName("ItemTypeBack")] Back = 4,
    [pbr::OriginalName("ItemTypeChest")] Chest = 5,
    [pbr::OriginalName("ItemTypeWrist")] Wrist = 6,
    [pbr::OriginalName("ItemTypeHands")] Hands = 7,
    [pbr::OriginalName("ItemTypeWaist")] Waist = 8,
    [pbr::OriginalName("ItemTypeLegs")] Legs = 9,
    [pbr::OriginalName("ItemTypeFeet")] Feet = 10,
    [pbr::OriginalName("ItemTypeFinger")] Finger = 11,
    [pbr::OriginalName("ItemTypeTrinket")] Trinket = 12,
    [pbr::OriginalName("ItemTypeWeapon")] Weapon = 13,
    [pbr::OriginalName("ItemTypeRanged")] Ranged = 14,
  }

  public enum ArmorType {
    [pbr::OriginalName("ArmorTypeUnknown")] Unknown = 0,
    [pbr::OriginalName("ArmorTypeCloth")] Cloth = 1,
    [pbr::OriginalName("ArmorTypeLeather")] Leather = 2,
    [pbr::OriginalName("ArmorTypeMail")] Mail = 3,
    [pbr::OriginalName("ArmorTypePlate")] Plate = 4,
  }

  public enum WeaponType {
    [pbr::OriginalName("WeaponTypeUnknown")] Unknown = 0,
    [pbr::OriginalName("WeaponTypeAxe")] Axe = 1,
    [pbr::OriginalName("WeaponTypeDagger")] Dagger = 2,
    [pbr::OriginalName("WeaponTypeFist")] Fist = 3,
    [pbr::OriginalName("WeaponTypeMace")] Mace = 4,
    [pbr::OriginalName("WeaponTypeOffHand")] OffHand = 5,
    [pbr::OriginalName("WeaponTypePolearm")] Polearm = 6,
    [pbr::OriginalName("WeaponTypeShield")] Shield = 7,
    [pbr::OriginalName("WeaponTypeStaff")] Staff = 8,
    [pbr::OriginalName("WeaponTypeSword")] Sword = 9,
  }

  public enum HandType {
    [pbr::OriginalName("HandTypeUnknown")] Unknown = 0,
    [pbr::OriginalName("HandTypeMainHand")] MainHand = 1,
    [pbr::OriginalName("HandTypeOneHand")] OneHand = 2,
    [pbr::OriginalName("HandTypeOffHand")] OffHand = 3,
    [pbr::OriginalName("HandTypeTwoHand")] TwoHand = 4,
  }

  public enum RangedWeaponType {
    [pbr::OriginalName("RangedWeaponTypeUnknown")] Unknown = 0,
    [pbr::OriginalName("RangedWeaponTypeBow")] Bow = 1,
    [pbr::OriginalName("RangedWeaponTypeCrossbow")] Crossbow = 2,
    [pbr::OriginalName("RangedWeaponTypeGun")] Gun = 3,
    [pbr::OriginalName("RangedWeaponTypeIdol")] Idol = 4,
    [pbr::OriginalName("RangedWeaponTypeLibram")] Libram = 5,
    [pbr::OriginalName("RangedWeaponTypeThrown")] Thrown = 6,
    [pbr::OriginalName("RangedWeaponTypeTotem")] Totem = 7,
    [pbr::OriginalName("RangedWeaponTypeWand")] Wand = 8,
    [pbr::OriginalName("RangedWeaponTypeSigil")] Sigil = 9,
  }

  /// <summary>
  /// All slots on the gear menu where a single item can be worn.
  /// </summary>
  public enum ItemSlot {
    [pbr::OriginalName("ItemSlotHead")] Head = 0,
    [pbr::OriginalName("ItemSlotNeck")] Neck = 1,
    [pbr::OriginalName("ItemSlotShoulder")] Shoulder = 2,
    [pbr::OriginalName("ItemSlotBack")] Back = 3,
    [pbr::OriginalName("ItemSlotChest")] Chest = 4,
    [pbr::OriginalName("ItemSlotWrist")] Wrist = 5,
    [pbr::OriginalName("ItemSlotHands")] Hands = 6,
    [pbr::OriginalName("ItemSlotWaist")] Waist = 7,
    [pbr::OriginalName("ItemSlotLegs")] Legs = 8,
    [pbr::OriginalName("ItemSlotFeet")] Feet = 9,
    [pbr::OriginalName("ItemSlotFinger1")] Finger1 = 10,
    [pbr::OriginalName("ItemSlotFinger2")] Finger2 = 11,
    [pbr::OriginalName("ItemSlotTrinket1")] Trinket1 = 12,
    [pbr::OriginalName("ItemSlotTrinket2")] Trinket2 = 13,
    /// <summary>
    /// can be 1h or 2h
    /// </summary>
    [pbr::OriginalName("ItemSlotMainHand")] MainHand = 14,
    [pbr::OriginalName("ItemSlotOffHand")] OffHand = 15,
    [pbr::OriginalName("ItemSlotRanged")] Ranged = 16,
  }

  public enum ItemQuality {
    [pbr::OriginalName("ItemQualityJunk")] Junk = 0,
    [pbr::OriginalName("ItemQualityCommon")] Common = 1,
    [pbr::OriginalName("ItemQualityUncommon")] Uncommon = 2,
    [pbr::OriginalName("ItemQualityRare")] Rare = 3,
    [pbr::OriginalName("ItemQualityEpic")] Epic = 4,
    [pbr::OriginalName("ItemQualityLegendary")] Legendary = 5,
    [pbr::OriginalName("ItemQualityArtifact")] Artifact = 6,
    [pbr::OriginalName("ItemQualityHeirloom")] Heirloom = 7,
  }

  public enum GemColor {
    [pbr::OriginalName("GemColorUnknown")] Unknown = 0,
    [pbr::OriginalName("GemColorMeta")] Meta = 1,
    [pbr::OriginalName("GemColorRed")] Red = 2,
    [pbr::OriginalName("GemColorBlue")] Blue = 3,
    [pbr::OriginalName("GemColorYellow")] Yellow = 4,
    [pbr::OriginalName("GemColorGreen")] Green = 5,
    [pbr::OriginalName("GemColorOrange")] Orange = 6,
    [pbr::OriginalName("GemColorPurple")] Purple = 7,
    [pbr::OriginalName("GemColorPrismatic")] Prismatic = 8,
  }

  public enum SpellSchool {
    [pbr::OriginalName("SpellSchoolPhysical")] Physical = 0,
    [pbr::OriginalName("SpellSchoolArcane")] Arcane = 1,
    [pbr::OriginalName("SpellSchoolFire")] Fire = 2,
    [pbr::OriginalName("SpellSchoolFrost")] Frost = 3,
    [pbr::OriginalName("SpellSchoolHoly")] Holy = 4,
    [pbr::OriginalName("SpellSchoolNature")] Nature = 5,
    [pbr::OriginalName("SpellSchoolShadow")] Shadow = 6,
  }

  public enum TristateEffect {
    [pbr::OriginalName("TristateEffectMissing")] Missing = 0,
    [pbr::OriginalName("TristateEffectRegular")] Regular = 1,
    [pbr::OriginalName("TristateEffectImproved")] Improved = 2,
  }

  public enum Explosive {
    [pbr::OriginalName("ExplosiveUnknown")] Unknown = 0,
    [pbr::OriginalName("ExplosiveSaroniteBomb")] SaroniteBomb = 1,
    [pbr::OriginalName("ExplosiveCobaltFragBomb")] CobaltFragBomb = 2,
  }

  public enum Potions {
    [pbr::OriginalName("UnknownPotion")] UnknownPotion = 0,
    [pbr::OriginalName("RunicHealingPotion")] RunicHealingPotion = 1,
    [pbr::OriginalName("RunicManaPotion")] RunicManaPotion = 2,
    [pbr::OriginalName("IndestructiblePotion")] IndestructiblePotion = 3,
    [pbr::OriginalName("PotionOfSpeed")] PotionOfSpeed = 4,
    [pbr::OriginalName("PotionOfWildMagic")] PotionOfWildMagic = 5,
    [pbr::OriginalName("DestructionPotion")] DestructionPotion = 6,
    [pbr::OriginalName("SuperManaPotion")] SuperManaPotion = 7,
    [pbr::OriginalName("HastePotion")] HastePotion = 8,
    [pbr::OriginalName("MightyRagePotion")] MightyRagePotion = 9,
    [pbr::OriginalName("FelManaPotion")] FelManaPotion = 10,
    [pbr::OriginalName("InsaneStrengthPotion")] InsaneStrengthPotion = 11,
    [pbr::OriginalName("IronshieldPotion")] IronshieldPotion = 12,
    [pbr::OriginalName("HeroicPotion")] HeroicPotion = 13,
    [pbr::OriginalName("RunicManaInjector")] RunicManaInjector = 14,
    [pbr::OriginalName("RunicHealingInjector")] RunicHealingInjector = 15,
  }

  public enum Conjured {
    [pbr::OriginalName("ConjuredUnknown")] Unknown = 0,
    [pbr::OriginalName("ConjuredDarkRune")] DarkRune = 1,
    [pbr::OriginalName("ConjuredFlameCap")] FlameCap = 2,
    [pbr::OriginalName("ConjuredHealthstone")] Healthstone = 5,
    [pbr::OriginalName("ConjuredRogueThistleTea")] RogueThistleTea = 4,
  }

  public enum Flask {
    [pbr::OriginalName("FlaskUnknown")] Unknown = 0,
    [pbr::OriginalName("FlaskOfTheFrostWyrm")] OfTheFrostWyrm = 1,
    [pbr::OriginalName("FlaskOfEndlessRage")] OfEndlessRage = 2,
    [pbr::OriginalName("FlaskOfPureMojo")] OfPureMojo = 3,
    [pbr::OriginalName("FlaskOfStoneblood")] OfStoneblood = 4,
    [pbr::OriginalName("LesserFlaskOfToughness")] LesserFlaskOfToughness = 5,
    [pbr::OriginalName("LesserFlaskOfResistance")] LesserFlaskOfResistance = 6,
    /// <summary>
    /// TBC
    /// </summary>
    [pbr::OriginalName("FlaskOfBlindingLight")] OfBlindingLight = 7,
    [pbr::OriginalName("FlaskOfMightyRestoration")] OfMightyRestoration = 8,
    [pbr::OriginalName("FlaskOfPureDeath")] OfPureDeath = 9,
    [pbr::OriginalName("FlaskOfRelentlessAssault")] OfRelentlessAssault = 10,
    [pbr::OriginalName("FlaskOfSupremePower")] OfSupremePower = 11,
    [pbr::OriginalName("FlaskOfFortification")] OfFortification = 12,
    [pbr::OriginalName("FlaskOfChromaticWonder")] OfChromaticWonder = 13,
  }

  public enum BattleElixir {
    [pbr::OriginalName("BattleElixirUnknown")] Unknown = 0,
    [pbr::OriginalName("ElixirOfAccuracy")] ElixirOfAccuracy = 1,
    [pbr::OriginalName("ElixirOfArmorPiercing")] ElixirOfArmorPiercing = 2,
    [pbr::OriginalName("ElixirOfDeadlyStrikes")] ElixirOfDeadlyStrikes = 3,
    [pbr::OriginalName("ElixirOfExpertise")] ElixirOfExpertise = 4,
    [pbr::OriginalName("ElixirOfLightningSpeed")] ElixirOfLightningSpeed = 5,
    [pbr::OriginalName("ElixirOfMightyAgility")] ElixirOfMightyAgility = 6,
    [pbr::OriginalName("ElixirOfMightyStrength")] ElixirOfMightyStrength = 7,
    [pbr::OriginalName("GurusElixir")] GurusElixir = 8,
    [pbr::OriginalName("SpellpowerElixir")] SpellpowerElixir = 9,
    [pbr::OriginalName("WrathElixir")] WrathElixir = 10,
    /// <summary>
    /// TBC
    /// </summary>
    [pbr::OriginalName("AdeptsElixir")] AdeptsElixir = 11,
    [pbr::OriginalName("ElixirOfDemonslaying")] ElixirOfDemonslaying = 12,
    [pbr::OriginalName("ElixirOfMajorAgility")] ElixirOfMajorAgility = 13,
    [pbr::OriginalName("ElixirOfMajorFirePower")] ElixirOfMajorFirePower = 14,
    [pbr::OriginalName("ElixirOfMajorFrostPower")] ElixirOfMajorFrostPower = 15,
    [pbr::OriginalName("ElixirOfMajorShadowPower")] ElixirOfMajorShadowPower = 16,
    [pbr::OriginalName("ElixirOfMajorStrength")] ElixirOfMajorStrength = 17,
    [pbr::OriginalName("ElixirOfMastery")] ElixirOfMastery = 18,
    [pbr::OriginalName("ElixirOfTheMongoose")] ElixirOfTheMongoose = 19,
    [pbr::OriginalName("FelStrengthElixir")] FelStrengthElixir = 20,
    [pbr::OriginalName("GreaterArcaneElixir")] GreaterArcaneElixir = 21,
  }

  public enum GuardianElixir {
    [pbr::OriginalName("GuardianElixirUnknown")] Unknown = 0,
    [pbr::OriginalName("ElixirOfMightyDefense")] ElixirOfMightyDefense = 1,
    [pbr::OriginalName("ElixirOfMightyFortitude")] ElixirOfMightyFortitude = 2,
    [pbr::OriginalName("ElixirOfMightyMageblood")] ElixirOfMightyMageblood = 3,
    [pbr::OriginalName("ElixirOfMightyThoughts")] ElixirOfMightyThoughts = 4,
    [pbr::OriginalName("ElixirOfProtection")] ElixirOfProtection = 5,
    [pbr::OriginalName("ElixirOfSpirit")] ElixirOfSpirit = 6,
    /// <summary>
    /// TBC
    /// </summary>
    [pbr::OriginalName("GiftOfArthas")] GiftOfArthas = 7,
    [pbr::OriginalName("ElixirOfDraenicWisdom")] ElixirOfDraenicWisdom = 8,
    [pbr::OriginalName("ElixirOfIronskin")] ElixirOfIronskin = 9,
    [pbr::OriginalName("ElixirOfMajorDefense")] ElixirOfMajorDefense = 10,
    [pbr::OriginalName("ElixirOfMajorFortitude")] ElixirOfMajorFortitude = 11,
    [pbr::OriginalName("ElixirOfMajorMageblood")] ElixirOfMajorMageblood = 12,
  }

  public enum Food {
    [pbr::OriginalName("FoodUnknown")] Unknown = 0,
    [pbr::OriginalName("FoodFishFeast")] FishFeast = 1,
    [pbr::OriginalName("FoodGreatFeast")] GreatFeast = 2,
    [pbr::OriginalName("FoodBlackenedDragonfin")] BlackenedDragonfin = 3,
    [pbr::OriginalName("FoodHeartyRhino")] HeartyRhino = 4,
    [pbr::OriginalName("FoodMegaMammothMeal")] MegaMammothMeal = 5,
    [pbr::OriginalName("FoodSpicedWormBurger")] SpicedWormBurger = 6,
    [pbr::OriginalName("FoodRhinoliciousWormsteak")] RhinoliciousWormsteak = 7,
    [pbr::OriginalName("FoodImperialMantaSteak")] ImperialMantaSteak = 8,
    [pbr::OriginalName("FoodSnapperExtreme")] SnapperExtreme = 9,
    [pbr::OriginalName("FoodMightyRhinoDogs")] MightyRhinoDogs = 10,
    [pbr::OriginalName("FoodFirecrackerSalmon")] FirecrackerSalmon = 11,
    [pbr::OriginalName("FoodCuttlesteak")] Cuttlesteak = 12,
    [pbr::OriginalName("FoodDragonfinFilet")] DragonfinFilet = 13,
    /// <summary>
    /// TBC Foods
    /// </summary>
    [pbr::OriginalName("FoodBlackenedBasilisk")] BlackenedBasilisk = 14,
    [pbr::OriginalName("FoodGrilledMudfish")] GrilledMudfish = 15,
    [pbr::OriginalName("FoodRavagerDog")] RavagerDog = 16,
    [pbr::OriginalName("FoodRoastedClefthoof")] RoastedClefthoof = 17,
    [pbr::OriginalName("FoodSkullfishSoup")] SkullfishSoup = 18,
    [pbr::OriginalName("FoodSpicyHotTalbuk")] SpicyHotTalbuk = 19,
    [pbr::OriginalName("FoodFishermansFeast")] FishermansFeast = 20,
  }

  public enum PetFood {
    [pbr::OriginalName("PetFoodUnknown")] Unknown = 0,
    [pbr::OriginalName("PetFoodSpicedMammothTreats")] SpicedMammothTreats = 1,
    /// <summary>
    /// TBC
    /// </summary>
    [pbr::OriginalName("PetFoodKiblersBits")] KiblersBits = 2,
  }

  public enum MobType {
    [pbr::OriginalName("MobTypeUnknown")] Unknown = 0,
    [pbr::OriginalName("MobTypeBeast")] Beast = 1,
    [pbr::OriginalName("MobTypeDemon")] Demon = 2,
    [pbr::OriginalName("MobTypeDragonkin")] Dragonkin = 3,
    [pbr::OriginalName("MobTypeElemental")] Elemental = 4,
    [pbr::OriginalName("MobTypeGiant")] Giant = 5,
    [pbr::OriginalName("MobTypeHumanoid")] Humanoid = 6,
    [pbr::OriginalName("MobTypeMechanical")] Mechanical = 7,
    [pbr::OriginalName("MobTypeUndead")] Undead = 8,
  }

  public enum InputType {
    [pbr::OriginalName("Bool")] Bool = 0,
    [pbr::OriginalName("Number")] Number = 1,
  }

  /// <summary>
  /// Extra enum for describing which items are eligible for an enchant, when
  /// ItemType alone is not enough.
  /// </summary>
  public enum EnchantType {
    [pbr::OriginalName("EnchantTypeNormal")] Normal = 0,
    [pbr::OriginalName("EnchantTypeTwoHand")] TwoHand = 1,
    [pbr::OriginalName("EnchantTypeShield")] Shield = 2,
    [pbr::OriginalName("EnchantTypeKit")] Kit = 3,
    [pbr::OriginalName("EnchantTypeStaff")] Staff = 4,
  }

  /// <summary>
  /// ID for actions that aren't spells or items.
  /// </summary>
  public enum OtherAction {
    [pbr::OriginalName("OtherActionNone")] None = 0,
    [pbr::OriginalName("OtherActionWait")] Wait = 1,
    [pbr::OriginalName("OtherActionManaRegen")] ManaRegen = 2,
    [pbr::OriginalName("OtherActionEnergyRegen")] EnergyRegen = 5,
    [pbr::OriginalName("OtherActionFocusRegen")] FocusRegen = 6,
    /// <summary>
    /// For threat generated from mana gains.
    /// </summary>
    [pbr::OriginalName("OtherActionManaGain")] ManaGain = 10,
    /// <summary>
    /// For threat generated from rage gains.
    /// </summary>
    [pbr::OriginalName("OtherActionRageGain")] RageGain = 11,
    /// <summary>
    /// A white hit, can be main hand or off hand.
    /// </summary>
    [pbr::OriginalName("OtherActionAttack")] Attack = 3,
    /// <summary>
    /// Default shoot action using a wand/bow/gun.
    /// </summary>
    [pbr::OriginalName("OtherActionShoot")] Shoot = 4,
    /// <summary>
    /// Represents a grouping of all pet actions. Only used by the UI.
    /// </summary>
    [pbr::OriginalName("OtherActionPet")] Pet = 7,
    /// <summary>
    /// Refund of a resource like Energy or Rage, when the ability didn't land.
    /// </summary>
    [pbr::OriginalName("OtherActionRefund")] Refund = 8,
    /// <summary>
    /// Indicates damage taken; used for rage gen.
    /// </summary>
    [pbr::OriginalName("OtherActionDamageTaken")] DamageTaken = 9,
    /// <summary>
    /// Indicates healing received from healing model.
    /// </summary>
    [pbr::OriginalName("OtherActionHealingModel")] HealingModel = 12,
    /// <summary>
    /// Indicates healing received from healing model.
    /// </summary>
    [pbr::OriginalName("OtherActionBloodRuneGain")] BloodRuneGain = 13,
    /// <summary>
    /// Indicates healing received from healing model.
    /// </summary>
    [pbr::OriginalName("OtherActionFrostRuneGain")] FrostRuneGain = 14,
    /// <summary>
    /// Indicates healing received from healing model.
    /// </summary>
    [pbr::OriginalName("OtherActionUnholyRuneGain")] UnholyRuneGain = 15,
    /// <summary>
    /// Indicates healing received from healing model.
    /// </summary>
    [pbr::OriginalName("OtherActionDeathRuneGain")] DeathRuneGain = 16,
    /// <summary>
    /// Used by APL to generically refer to either the prepull or combat potion.
    /// </summary>
    [pbr::OriginalName("OtherActionPotion")] Potion = 17,
  }

  #endregion

  #region Messages
  public sealed partial class UnitStats : pb::IMessage<UnitStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnitStats> _parser = new pb::MessageParser<UnitStats>(() => new UnitStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnitStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitStats(UnitStats other) : this() {
      stats_ = other.stats_.Clone();
      pseudoStats_ = other.pseudoStats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitStats Clone() {
      return new UnitStats(this);
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 1;
    private static readonly pb::FieldCodec<double> _repeated_stats_codec
        = pb::FieldCodec.ForDouble(10);
    private readonly pbc::RepeatedField<double> stats_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Stats {
      get { return stats_; }
    }

    /// <summary>Field number for the "pseudo_stats" field.</summary>
    public const int PseudoStatsFieldNumber = 2;
    private static readonly pb::FieldCodec<double> _repeated_pseudoStats_codec
        = pb::FieldCodec.ForDouble(18);
    private readonly pbc::RepeatedField<double> pseudoStats_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> PseudoStats {
      get { return pseudoStats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnitStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnitStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stats_.Equals(other.stats_)) return false;
      if(!pseudoStats_.Equals(other.pseudoStats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stats_.GetHashCode();
      hash ^= pseudoStats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      stats_.WriteTo(output, _repeated_stats_codec);
      pseudoStats_.WriteTo(output, _repeated_pseudoStats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      stats_.WriteTo(ref output, _repeated_stats_codec);
      pseudoStats_.WriteTo(ref output, _repeated_pseudoStats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += stats_.CalculateSize(_repeated_stats_codec);
      size += pseudoStats_.CalculateSize(_repeated_pseudoStats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnitStats other) {
      if (other == null) {
        return;
      }
      stats_.Add(other.stats_);
      pseudoStats_.Add(other.pseudoStats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 9: {
            stats_.AddEntriesFrom(input, _repeated_stats_codec);
            break;
          }
          case 18:
          case 17: {
            pseudoStats_.AddEntriesFrom(input, _repeated_pseudoStats_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 9: {
            stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
            break;
          }
          case 18:
          case 17: {
            pseudoStats_.AddEntriesFrom(ref input, _repeated_pseudoStats_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Buffs that affect the entire raid.
  /// </summary>
  public sealed partial class RaidBuffs : pb::IMessage<RaidBuffs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaidBuffs> _parser = new pb::MessageParser<RaidBuffs>(() => new RaidBuffs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RaidBuffs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaidBuffs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaidBuffs(RaidBuffs other) : this() {
      giftOfTheWild_ = other.giftOfTheWild_;
      powerWordFortitude_ = other.powerWordFortitude_;
      commandingShout_ = other.commandingShout_;
      bloodPact_ = other.bloodPact_;
      hornOfWinter_ = other.hornOfWinter_;
      strengthOfEarthTotem_ = other.strengthOfEarthTotem_;
      arcaneBrilliance_ = other.arcaneBrilliance_;
      felIntelligence_ = other.felIntelligence_;
      divineSpirit_ = other.divineSpirit_;
      battleShout_ = other.battleShout_;
      trueshotAura_ = other.trueshotAura_;
      unleashedRage_ = other.unleashedRage_;
      abominationsMight_ = other.abominationsMight_;
      leaderOfThePack_ = other.leaderOfThePack_;
      rampage_ = other.rampage_;
      icyTalons_ = other.icyTalons_;
      windfuryTotem_ = other.windfuryTotem_;
      totemOfWrath_ = other.totemOfWrath_;
      flametongueTotem_ = other.flametongueTotem_;
      demonicPactSp_ = other.demonicPactSp_;
      swiftRetribution_ = other.swiftRetribution_;
      moonkinAura_ = other.moonkinAura_;
      elementalOath_ = other.elementalOath_;
      wrathOfAirTotem_ = other.wrathOfAirTotem_;
      ferociousInspiration_ = other.ferociousInspiration_;
      sanctifiedRetribution_ = other.sanctifiedRetribution_;
      arcaneEmpowerment_ = other.arcaneEmpowerment_;
      manaSpringTotem_ = other.manaSpringTotem_;
      shadowProtection_ = other.shadowProtection_;
      natureResistanceTotem_ = other.natureResistanceTotem_;
      aspectOfTheWild_ = other.aspectOfTheWild_;
      frostResistanceAura_ = other.frostResistanceAura_;
      frostResistanceTotem_ = other.frostResistanceTotem_;
      bloodlust_ = other.bloodlust_;
      thorns_ = other.thorns_;
      devotionAura_ = other.devotionAura_;
      stoneskinTotem_ = other.stoneskinTotem_;
      retributionAura_ = other.retributionAura_;
      strengthOfWrynn_ = other.strengthOfWrynn_;
      drumsOfForgottenKings_ = other.drumsOfForgottenKings_;
      drumsOfTheWild_ = other.drumsOfTheWild_;
      scrollOfProtection_ = other.scrollOfProtection_;
      scrollOfStamina_ = other.scrollOfStamina_;
      scrollOfStrength_ = other.scrollOfStrength_;
      scrollOfAgility_ = other.scrollOfAgility_;
      scrollOfIntellect_ = other.scrollOfIntellect_;
      scrollOfSpirit_ = other.scrollOfSpirit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaidBuffs Clone() {
      return new RaidBuffs(this);
    }

    /// <summary>Field number for the "gift_of_the_wild" field.</summary>
    public const int GiftOfTheWildFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.TristateEffect giftOfTheWild_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    /// <summary>
    /// +Stats
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect GiftOfTheWild {
      get { return giftOfTheWild_; }
      set {
        giftOfTheWild_ = value;
      }
    }

    /// <summary>Field number for the "power_word_fortitude" field.</summary>
    public const int PowerWordFortitudeFieldNumber = 2;
    private global::SirusDbScrapper.UIDatabase.TristateEffect powerWordFortitude_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    /// <summary>
    /// +Stam
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect PowerWordFortitude {
      get { return powerWordFortitude_; }
      set {
        powerWordFortitude_ = value;
      }
    }

    /// <summary>Field number for the "commanding_shout" field.</summary>
    public const int CommandingShoutFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.TristateEffect commandingShout_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    /// <summary>
    /// +Health
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect CommandingShout {
      get { return commandingShout_; }
      set {
        commandingShout_ = value;
      }
    }

    /// <summary>Field number for the "blood_pact" field.</summary>
    public const int BloodPactFieldNumber = 4;
    private global::SirusDbScrapper.UIDatabase.TristateEffect bloodPact_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect BloodPact {
      get { return bloodPact_; }
      set {
        bloodPact_ = value;
      }
    }

    /// <summary>Field number for the "horn_of_winter" field.</summary>
    public const int HornOfWinterFieldNumber = 5;
    private bool hornOfWinter_;
    /// <summary>
    /// + Agi and Str
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HornOfWinter {
      get { return hornOfWinter_; }
      set {
        hornOfWinter_ = value;
      }
    }

    /// <summary>Field number for the "strength_of_earth_totem" field.</summary>
    public const int StrengthOfEarthTotemFieldNumber = 6;
    private global::SirusDbScrapper.UIDatabase.TristateEffect strengthOfEarthTotem_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    /// <summary>
    /// none, normal, 15% improved
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect StrengthOfEarthTotem {
      get { return strengthOfEarthTotem_; }
      set {
        strengthOfEarthTotem_ = value;
      }
    }

    /// <summary>Field number for the "arcane_brilliance" field.</summary>
    public const int ArcaneBrillianceFieldNumber = 7;
    private bool arcaneBrilliance_;
    /// <summary>
    /// +Intell and/or Spi
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ArcaneBrilliance {
      get { return arcaneBrilliance_; }
      set {
        arcaneBrilliance_ = value;
      }
    }

    /// <summary>Field number for the "fel_intelligence" field.</summary>
    public const int FelIntelligenceFieldNumber = 8;
    private global::SirusDbScrapper.UIDatabase.TristateEffect felIntelligence_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect FelIntelligence {
      get { return felIntelligence_; }
      set {
        felIntelligence_ = value;
      }
    }

    /// <summary>Field number for the "divine_spirit" field.</summary>
    public const int DivineSpiritFieldNumber = 9;
    private bool divineSpirit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DivineSpirit {
      get { return divineSpirit_; }
      set {
        divineSpirit_ = value;
      }
    }

    /// <summary>Field number for the "battle_shout" field.</summary>
    public const int BattleShoutFieldNumber = 10;
    private global::SirusDbScrapper.UIDatabase.TristateEffect battleShout_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    /// <summary>
    /// +AP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect BattleShout {
      get { return battleShout_; }
      set {
        battleShout_ = value;
      }
    }

    /// <summary>Field number for the "trueshot_aura" field.</summary>
    public const int TrueshotAuraFieldNumber = 11;
    private bool trueshotAura_;
    /// <summary>
    /// 10% AP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TrueshotAura {
      get { return trueshotAura_; }
      set {
        trueshotAura_ = value;
      }
    }

    /// <summary>Field number for the "unleashed_rage" field.</summary>
    public const int UnleashedRageFieldNumber = 12;
    private bool unleashedRage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UnleashedRage {
      get { return unleashedRage_; }
      set {
        unleashedRage_ = value;
      }
    }

    /// <summary>Field number for the "abominations_might" field.</summary>
    public const int AbominationsMightFieldNumber = 13;
    private bool abominationsMight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AbominationsMight {
      get { return abominationsMight_; }
      set {
        abominationsMight_ = value;
      }
    }

    /// <summary>Field number for the "leader_of_the_pack" field.</summary>
    public const int LeaderOfThePackFieldNumber = 14;
    private global::SirusDbScrapper.UIDatabase.TristateEffect leaderOfThePack_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    /// <summary>
    /// 5% phy crit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect LeaderOfThePack {
      get { return leaderOfThePack_; }
      set {
        leaderOfThePack_ = value;
      }
    }

    /// <summary>Field number for the "rampage" field.</summary>
    public const int RampageFieldNumber = 15;
    private bool rampage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Rampage {
      get { return rampage_; }
      set {
        rampage_ = value;
      }
    }

    /// <summary>Field number for the "icy_talons" field.</summary>
    public const int IcyTalonsFieldNumber = 16;
    private bool icyTalons_;
    /// <summary>
    /// 20% Melee Haste
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IcyTalons {
      get { return icyTalons_; }
      set {
        icyTalons_ = value;
      }
    }

    /// <summary>Field number for the "windfury_totem" field.</summary>
    public const int WindfuryTotemFieldNumber = 17;
    private global::SirusDbScrapper.UIDatabase.TristateEffect windfuryTotem_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    /// <summary>
    /// none, 16%, 20%
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect WindfuryTotem {
      get { return windfuryTotem_; }
      set {
        windfuryTotem_ = value;
      }
    }

    /// <summary>Field number for the "totem_of_wrath" field.</summary>
    public const int TotemOfWrathFieldNumber = 18;
    private bool totemOfWrath_;
    /// <summary>
    /// +Spell Power
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TotemOfWrath {
      get { return totemOfWrath_; }
      set {
        totemOfWrath_ = value;
      }
    }

    /// <summary>Field number for the "flametongue_totem" field.</summary>
    public const int FlametongueTotemFieldNumber = 19;
    private bool flametongueTotem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FlametongueTotem {
      get { return flametongueTotem_; }
      set {
        flametongueTotem_ = value;
      }
    }

    /// <summary>Field number for the "demonic_pact_sp" field.</summary>
    public const int DemonicPactSpFieldNumber = 44;
    private int demonicPactSp_;
    /// <summary>
    /// SP buff NEW CORRECT
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DemonicPactSp {
      get { return demonicPactSp_; }
      set {
        demonicPactSp_ = value;
      }
    }

    /// <summary>Field number for the "swift_retribution" field.</summary>
    public const int SwiftRetributionFieldNumber = 21;
    private bool swiftRetribution_;
    /// <summary>
    /// +5% Spell Crit and/or +3% Haste
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SwiftRetribution {
      get { return swiftRetribution_; }
      set {
        swiftRetribution_ = value;
      }
    }

    /// <summary>Field number for the "moonkin_aura" field.</summary>
    public const int MoonkinAuraFieldNumber = 22;
    private global::SirusDbScrapper.UIDatabase.TristateEffect moonkinAura_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    /// <summary>
    ///both crit and haste
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect MoonkinAura {
      get { return moonkinAura_; }
      set {
        moonkinAura_ = value;
      }
    }

    /// <summary>Field number for the "elemental_oath" field.</summary>
    public const int ElementalOathFieldNumber = 23;
    private bool elementalOath_;
    /// <summary>
    ///crit only
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ElementalOath {
      get { return elementalOath_; }
      set {
        elementalOath_ = value;
      }
    }

    /// <summary>Field number for the "wrath_of_air_totem" field.</summary>
    public const int WrathOfAirTotemFieldNumber = 24;
    private bool wrathOfAirTotem_;
    /// <summary>
    /// 5% spell haste
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WrathOfAirTotem {
      get { return wrathOfAirTotem_; }
      set {
        wrathOfAirTotem_ = value;
      }
    }

    /// <summary>Field number for the "ferocious_inspiration" field.</summary>
    public const int FerociousInspirationFieldNumber = 25;
    private bool ferociousInspiration_;
    /// <summary>
    /// 3% dmg
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FerociousInspiration {
      get { return ferociousInspiration_; }
      set {
        ferociousInspiration_ = value;
      }
    }

    /// <summary>Field number for the "sanctified_retribution" field.</summary>
    public const int SanctifiedRetributionFieldNumber = 26;
    private bool sanctifiedRetribution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SanctifiedRetribution {
      get { return sanctifiedRetribution_; }
      set {
        sanctifiedRetribution_ = value;
      }
    }

    /// <summary>Field number for the "arcane_empowerment" field.</summary>
    public const int ArcaneEmpowermentFieldNumber = 27;
    private bool arcaneEmpowerment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ArcaneEmpowerment {
      get { return arcaneEmpowerment_; }
      set {
        arcaneEmpowerment_ = value;
      }
    }

    /// <summary>Field number for the "mana_spring_totem" field.</summary>
    public const int ManaSpringTotemFieldNumber = 28;
    private global::SirusDbScrapper.UIDatabase.TristateEffect manaSpringTotem_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    /// <summary>
    /// mp5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect ManaSpringTotem {
      get { return manaSpringTotem_; }
      set {
        manaSpringTotem_ = value;
      }
    }

    /// <summary>Field number for the "shadow_protection" field.</summary>
    public const int ShadowProtectionFieldNumber = 33;
    private bool shadowProtection_;
    /// <summary>
    /// Resistances
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShadowProtection {
      get { return shadowProtection_; }
      set {
        shadowProtection_ = value;
      }
    }

    /// <summary>Field number for the "nature_resistance_totem" field.</summary>
    public const int NatureResistanceTotemFieldNumber = 45;
    private bool natureResistanceTotem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NatureResistanceTotem {
      get { return natureResistanceTotem_; }
      set {
        natureResistanceTotem_ = value;
      }
    }

    /// <summary>Field number for the "aspect_of_the_wild" field.</summary>
    public const int AspectOfTheWildFieldNumber = 46;
    private bool aspectOfTheWild_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AspectOfTheWild {
      get { return aspectOfTheWild_; }
      set {
        aspectOfTheWild_ = value;
      }
    }

    /// <summary>Field number for the "frost_resistance_aura" field.</summary>
    public const int FrostResistanceAuraFieldNumber = 47;
    private bool frostResistanceAura_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FrostResistanceAura {
      get { return frostResistanceAura_; }
      set {
        frostResistanceAura_ = value;
      }
    }

    /// <summary>Field number for the "frost_resistance_totem" field.</summary>
    public const int FrostResistanceTotemFieldNumber = 48;
    private bool frostResistanceTotem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FrostResistanceTotem {
      get { return frostResistanceTotem_; }
      set {
        frostResistanceTotem_ = value;
      }
    }

    /// <summary>Field number for the "bloodlust" field.</summary>
    public const int BloodlustFieldNumber = 29;
    private bool bloodlust_;
    /// <summary>
    /// Miscellaneous
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Bloodlust {
      get { return bloodlust_; }
      set {
        bloodlust_ = value;
      }
    }

    /// <summary>Field number for the "thorns" field.</summary>
    public const int ThornsFieldNumber = 30;
    private global::SirusDbScrapper.UIDatabase.TristateEffect thorns_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect Thorns {
      get { return thorns_; }
      set {
        thorns_ = value;
      }
    }

    /// <summary>Field number for the "devotion_aura" field.</summary>
    public const int DevotionAuraFieldNumber = 31;
    private global::SirusDbScrapper.UIDatabase.TristateEffect devotionAura_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect DevotionAura {
      get { return devotionAura_; }
      set {
        devotionAura_ = value;
      }
    }

    /// <summary>Field number for the "stoneskin_totem" field.</summary>
    public const int StoneskinTotemFieldNumber = 42;
    private global::SirusDbScrapper.UIDatabase.TristateEffect stoneskinTotem_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect StoneskinTotem {
      get { return stoneskinTotem_; }
      set {
        stoneskinTotem_ = value;
      }
    }

    /// <summary>Field number for the "retribution_aura" field.</summary>
    public const int RetributionAuraFieldNumber = 32;
    private bool retributionAura_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RetributionAura {
      get { return retributionAura_; }
      set {
        retributionAura_ = value;
      }
    }

    /// <summary>Field number for the "strength_of_wrynn" field.</summary>
    public const int StrengthOfWrynnFieldNumber = 49;
    private bool strengthOfWrynn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool StrengthOfWrynn {
      get { return strengthOfWrynn_; }
      set {
        strengthOfWrynn_ = value;
      }
    }

    /// <summary>Field number for the "drums_of_forgotten_kings" field.</summary>
    public const int DrumsOfForgottenKingsFieldNumber = 34;
    private bool drumsOfForgottenKings_;
    /// <summary>
    /// Drums
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DrumsOfForgottenKings {
      get { return drumsOfForgottenKings_; }
      set {
        drumsOfForgottenKings_ = value;
      }
    }

    /// <summary>Field number for the "drums_of_the_wild" field.</summary>
    public const int DrumsOfTheWildFieldNumber = 35;
    private bool drumsOfTheWild_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DrumsOfTheWild {
      get { return drumsOfTheWild_; }
      set {
        drumsOfTheWild_ = value;
      }
    }

    /// <summary>Field number for the "scroll_of_protection" field.</summary>
    public const int ScrollOfProtectionFieldNumber = 36;
    private bool scrollOfProtection_;
    /// <summary>
    /// Scroll
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ScrollOfProtection {
      get { return scrollOfProtection_; }
      set {
        scrollOfProtection_ = value;
      }
    }

    /// <summary>Field number for the "scroll_of_stamina" field.</summary>
    public const int ScrollOfStaminaFieldNumber = 37;
    private bool scrollOfStamina_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ScrollOfStamina {
      get { return scrollOfStamina_; }
      set {
        scrollOfStamina_ = value;
      }
    }

    /// <summary>Field number for the "scroll_of_strength" field.</summary>
    public const int ScrollOfStrengthFieldNumber = 38;
    private bool scrollOfStrength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ScrollOfStrength {
      get { return scrollOfStrength_; }
      set {
        scrollOfStrength_ = value;
      }
    }

    /// <summary>Field number for the "scroll_of_agility" field.</summary>
    public const int ScrollOfAgilityFieldNumber = 39;
    private bool scrollOfAgility_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ScrollOfAgility {
      get { return scrollOfAgility_; }
      set {
        scrollOfAgility_ = value;
      }
    }

    /// <summary>Field number for the "scroll_of_intellect" field.</summary>
    public const int ScrollOfIntellectFieldNumber = 40;
    private bool scrollOfIntellect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ScrollOfIntellect {
      get { return scrollOfIntellect_; }
      set {
        scrollOfIntellect_ = value;
      }
    }

    /// <summary>Field number for the "scroll_of_spirit" field.</summary>
    public const int ScrollOfSpiritFieldNumber = 41;
    private bool scrollOfSpirit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ScrollOfSpirit {
      get { return scrollOfSpirit_; }
      set {
        scrollOfSpirit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RaidBuffs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RaidBuffs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GiftOfTheWild != other.GiftOfTheWild) return false;
      if (PowerWordFortitude != other.PowerWordFortitude) return false;
      if (CommandingShout != other.CommandingShout) return false;
      if (BloodPact != other.BloodPact) return false;
      if (HornOfWinter != other.HornOfWinter) return false;
      if (StrengthOfEarthTotem != other.StrengthOfEarthTotem) return false;
      if (ArcaneBrilliance != other.ArcaneBrilliance) return false;
      if (FelIntelligence != other.FelIntelligence) return false;
      if (DivineSpirit != other.DivineSpirit) return false;
      if (BattleShout != other.BattleShout) return false;
      if (TrueshotAura != other.TrueshotAura) return false;
      if (UnleashedRage != other.UnleashedRage) return false;
      if (AbominationsMight != other.AbominationsMight) return false;
      if (LeaderOfThePack != other.LeaderOfThePack) return false;
      if (Rampage != other.Rampage) return false;
      if (IcyTalons != other.IcyTalons) return false;
      if (WindfuryTotem != other.WindfuryTotem) return false;
      if (TotemOfWrath != other.TotemOfWrath) return false;
      if (FlametongueTotem != other.FlametongueTotem) return false;
      if (DemonicPactSp != other.DemonicPactSp) return false;
      if (SwiftRetribution != other.SwiftRetribution) return false;
      if (MoonkinAura != other.MoonkinAura) return false;
      if (ElementalOath != other.ElementalOath) return false;
      if (WrathOfAirTotem != other.WrathOfAirTotem) return false;
      if (FerociousInspiration != other.FerociousInspiration) return false;
      if (SanctifiedRetribution != other.SanctifiedRetribution) return false;
      if (ArcaneEmpowerment != other.ArcaneEmpowerment) return false;
      if (ManaSpringTotem != other.ManaSpringTotem) return false;
      if (ShadowProtection != other.ShadowProtection) return false;
      if (NatureResistanceTotem != other.NatureResistanceTotem) return false;
      if (AspectOfTheWild != other.AspectOfTheWild) return false;
      if (FrostResistanceAura != other.FrostResistanceAura) return false;
      if (FrostResistanceTotem != other.FrostResistanceTotem) return false;
      if (Bloodlust != other.Bloodlust) return false;
      if (Thorns != other.Thorns) return false;
      if (DevotionAura != other.DevotionAura) return false;
      if (StoneskinTotem != other.StoneskinTotem) return false;
      if (RetributionAura != other.RetributionAura) return false;
      if (StrengthOfWrynn != other.StrengthOfWrynn) return false;
      if (DrumsOfForgottenKings != other.DrumsOfForgottenKings) return false;
      if (DrumsOfTheWild != other.DrumsOfTheWild) return false;
      if (ScrollOfProtection != other.ScrollOfProtection) return false;
      if (ScrollOfStamina != other.ScrollOfStamina) return false;
      if (ScrollOfStrength != other.ScrollOfStrength) return false;
      if (ScrollOfAgility != other.ScrollOfAgility) return false;
      if (ScrollOfIntellect != other.ScrollOfIntellect) return false;
      if (ScrollOfSpirit != other.ScrollOfSpirit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GiftOfTheWild != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= GiftOfTheWild.GetHashCode();
      if (PowerWordFortitude != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= PowerWordFortitude.GetHashCode();
      if (CommandingShout != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= CommandingShout.GetHashCode();
      if (BloodPact != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= BloodPact.GetHashCode();
      if (HornOfWinter != false) hash ^= HornOfWinter.GetHashCode();
      if (StrengthOfEarthTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= StrengthOfEarthTotem.GetHashCode();
      if (ArcaneBrilliance != false) hash ^= ArcaneBrilliance.GetHashCode();
      if (FelIntelligence != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= FelIntelligence.GetHashCode();
      if (DivineSpirit != false) hash ^= DivineSpirit.GetHashCode();
      if (BattleShout != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= BattleShout.GetHashCode();
      if (TrueshotAura != false) hash ^= TrueshotAura.GetHashCode();
      if (UnleashedRage != false) hash ^= UnleashedRage.GetHashCode();
      if (AbominationsMight != false) hash ^= AbominationsMight.GetHashCode();
      if (LeaderOfThePack != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= LeaderOfThePack.GetHashCode();
      if (Rampage != false) hash ^= Rampage.GetHashCode();
      if (IcyTalons != false) hash ^= IcyTalons.GetHashCode();
      if (WindfuryTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= WindfuryTotem.GetHashCode();
      if (TotemOfWrath != false) hash ^= TotemOfWrath.GetHashCode();
      if (FlametongueTotem != false) hash ^= FlametongueTotem.GetHashCode();
      if (DemonicPactSp != 0) hash ^= DemonicPactSp.GetHashCode();
      if (SwiftRetribution != false) hash ^= SwiftRetribution.GetHashCode();
      if (MoonkinAura != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= MoonkinAura.GetHashCode();
      if (ElementalOath != false) hash ^= ElementalOath.GetHashCode();
      if (WrathOfAirTotem != false) hash ^= WrathOfAirTotem.GetHashCode();
      if (FerociousInspiration != false) hash ^= FerociousInspiration.GetHashCode();
      if (SanctifiedRetribution != false) hash ^= SanctifiedRetribution.GetHashCode();
      if (ArcaneEmpowerment != false) hash ^= ArcaneEmpowerment.GetHashCode();
      if (ManaSpringTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= ManaSpringTotem.GetHashCode();
      if (ShadowProtection != false) hash ^= ShadowProtection.GetHashCode();
      if (NatureResistanceTotem != false) hash ^= NatureResistanceTotem.GetHashCode();
      if (AspectOfTheWild != false) hash ^= AspectOfTheWild.GetHashCode();
      if (FrostResistanceAura != false) hash ^= FrostResistanceAura.GetHashCode();
      if (FrostResistanceTotem != false) hash ^= FrostResistanceTotem.GetHashCode();
      if (Bloodlust != false) hash ^= Bloodlust.GetHashCode();
      if (Thorns != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= Thorns.GetHashCode();
      if (DevotionAura != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= DevotionAura.GetHashCode();
      if (StoneskinTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= StoneskinTotem.GetHashCode();
      if (RetributionAura != false) hash ^= RetributionAura.GetHashCode();
      if (StrengthOfWrynn != false) hash ^= StrengthOfWrynn.GetHashCode();
      if (DrumsOfForgottenKings != false) hash ^= DrumsOfForgottenKings.GetHashCode();
      if (DrumsOfTheWild != false) hash ^= DrumsOfTheWild.GetHashCode();
      if (ScrollOfProtection != false) hash ^= ScrollOfProtection.GetHashCode();
      if (ScrollOfStamina != false) hash ^= ScrollOfStamina.GetHashCode();
      if (ScrollOfStrength != false) hash ^= ScrollOfStrength.GetHashCode();
      if (ScrollOfAgility != false) hash ^= ScrollOfAgility.GetHashCode();
      if (ScrollOfIntellect != false) hash ^= ScrollOfIntellect.GetHashCode();
      if (ScrollOfSpirit != false) hash ^= ScrollOfSpirit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GiftOfTheWild != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GiftOfTheWild);
      }
      if (PowerWordFortitude != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PowerWordFortitude);
      }
      if (CommandingShout != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(24);
        output.WriteEnum((int) CommandingShout);
      }
      if (BloodPact != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(32);
        output.WriteEnum((int) BloodPact);
      }
      if (HornOfWinter != false) {
        output.WriteRawTag(40);
        output.WriteBool(HornOfWinter);
      }
      if (StrengthOfEarthTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(48);
        output.WriteEnum((int) StrengthOfEarthTotem);
      }
      if (ArcaneBrilliance != false) {
        output.WriteRawTag(56);
        output.WriteBool(ArcaneBrilliance);
      }
      if (FelIntelligence != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(64);
        output.WriteEnum((int) FelIntelligence);
      }
      if (DivineSpirit != false) {
        output.WriteRawTag(72);
        output.WriteBool(DivineSpirit);
      }
      if (BattleShout != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(80);
        output.WriteEnum((int) BattleShout);
      }
      if (TrueshotAura != false) {
        output.WriteRawTag(88);
        output.WriteBool(TrueshotAura);
      }
      if (UnleashedRage != false) {
        output.WriteRawTag(96);
        output.WriteBool(UnleashedRage);
      }
      if (AbominationsMight != false) {
        output.WriteRawTag(104);
        output.WriteBool(AbominationsMight);
      }
      if (LeaderOfThePack != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(112);
        output.WriteEnum((int) LeaderOfThePack);
      }
      if (Rampage != false) {
        output.WriteRawTag(120);
        output.WriteBool(Rampage);
      }
      if (IcyTalons != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IcyTalons);
      }
      if (WindfuryTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) WindfuryTotem);
      }
      if (TotemOfWrath != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(TotemOfWrath);
      }
      if (FlametongueTotem != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(FlametongueTotem);
      }
      if (SwiftRetribution != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(SwiftRetribution);
      }
      if (MoonkinAura != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) MoonkinAura);
      }
      if (ElementalOath != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(ElementalOath);
      }
      if (WrathOfAirTotem != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(WrathOfAirTotem);
      }
      if (FerociousInspiration != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(FerociousInspiration);
      }
      if (SanctifiedRetribution != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(SanctifiedRetribution);
      }
      if (ArcaneEmpowerment != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(ArcaneEmpowerment);
      }
      if (ManaSpringTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) ManaSpringTotem);
      }
      if (Bloodlust != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(Bloodlust);
      }
      if (Thorns != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(240, 1);
        output.WriteEnum((int) Thorns);
      }
      if (DevotionAura != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(248, 1);
        output.WriteEnum((int) DevotionAura);
      }
      if (RetributionAura != false) {
        output.WriteRawTag(128, 2);
        output.WriteBool(RetributionAura);
      }
      if (ShadowProtection != false) {
        output.WriteRawTag(136, 2);
        output.WriteBool(ShadowProtection);
      }
      if (DrumsOfForgottenKings != false) {
        output.WriteRawTag(144, 2);
        output.WriteBool(DrumsOfForgottenKings);
      }
      if (DrumsOfTheWild != false) {
        output.WriteRawTag(152, 2);
        output.WriteBool(DrumsOfTheWild);
      }
      if (ScrollOfProtection != false) {
        output.WriteRawTag(160, 2);
        output.WriteBool(ScrollOfProtection);
      }
      if (ScrollOfStamina != false) {
        output.WriteRawTag(168, 2);
        output.WriteBool(ScrollOfStamina);
      }
      if (ScrollOfStrength != false) {
        output.WriteRawTag(176, 2);
        output.WriteBool(ScrollOfStrength);
      }
      if (ScrollOfAgility != false) {
        output.WriteRawTag(184, 2);
        output.WriteBool(ScrollOfAgility);
      }
      if (ScrollOfIntellect != false) {
        output.WriteRawTag(192, 2);
        output.WriteBool(ScrollOfIntellect);
      }
      if (ScrollOfSpirit != false) {
        output.WriteRawTag(200, 2);
        output.WriteBool(ScrollOfSpirit);
      }
      if (StoneskinTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(208, 2);
        output.WriteEnum((int) StoneskinTotem);
      }
      if (DemonicPactSp != 0) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(DemonicPactSp);
      }
      if (NatureResistanceTotem != false) {
        output.WriteRawTag(232, 2);
        output.WriteBool(NatureResistanceTotem);
      }
      if (AspectOfTheWild != false) {
        output.WriteRawTag(240, 2);
        output.WriteBool(AspectOfTheWild);
      }
      if (FrostResistanceAura != false) {
        output.WriteRawTag(248, 2);
        output.WriteBool(FrostResistanceAura);
      }
      if (FrostResistanceTotem != false) {
        output.WriteRawTag(128, 3);
        output.WriteBool(FrostResistanceTotem);
      }
      if (StrengthOfWrynn != false) {
        output.WriteRawTag(136, 3);
        output.WriteBool(StrengthOfWrynn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GiftOfTheWild != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GiftOfTheWild);
      }
      if (PowerWordFortitude != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PowerWordFortitude);
      }
      if (CommandingShout != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(24);
        output.WriteEnum((int) CommandingShout);
      }
      if (BloodPact != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(32);
        output.WriteEnum((int) BloodPact);
      }
      if (HornOfWinter != false) {
        output.WriteRawTag(40);
        output.WriteBool(HornOfWinter);
      }
      if (StrengthOfEarthTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(48);
        output.WriteEnum((int) StrengthOfEarthTotem);
      }
      if (ArcaneBrilliance != false) {
        output.WriteRawTag(56);
        output.WriteBool(ArcaneBrilliance);
      }
      if (FelIntelligence != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(64);
        output.WriteEnum((int) FelIntelligence);
      }
      if (DivineSpirit != false) {
        output.WriteRawTag(72);
        output.WriteBool(DivineSpirit);
      }
      if (BattleShout != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(80);
        output.WriteEnum((int) BattleShout);
      }
      if (TrueshotAura != false) {
        output.WriteRawTag(88);
        output.WriteBool(TrueshotAura);
      }
      if (UnleashedRage != false) {
        output.WriteRawTag(96);
        output.WriteBool(UnleashedRage);
      }
      if (AbominationsMight != false) {
        output.WriteRawTag(104);
        output.WriteBool(AbominationsMight);
      }
      if (LeaderOfThePack != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(112);
        output.WriteEnum((int) LeaderOfThePack);
      }
      if (Rampage != false) {
        output.WriteRawTag(120);
        output.WriteBool(Rampage);
      }
      if (IcyTalons != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IcyTalons);
      }
      if (WindfuryTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) WindfuryTotem);
      }
      if (TotemOfWrath != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(TotemOfWrath);
      }
      if (FlametongueTotem != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(FlametongueTotem);
      }
      if (SwiftRetribution != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(SwiftRetribution);
      }
      if (MoonkinAura != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) MoonkinAura);
      }
      if (ElementalOath != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(ElementalOath);
      }
      if (WrathOfAirTotem != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(WrathOfAirTotem);
      }
      if (FerociousInspiration != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(FerociousInspiration);
      }
      if (SanctifiedRetribution != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(SanctifiedRetribution);
      }
      if (ArcaneEmpowerment != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(ArcaneEmpowerment);
      }
      if (ManaSpringTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) ManaSpringTotem);
      }
      if (Bloodlust != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(Bloodlust);
      }
      if (Thorns != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(240, 1);
        output.WriteEnum((int) Thorns);
      }
      if (DevotionAura != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(248, 1);
        output.WriteEnum((int) DevotionAura);
      }
      if (RetributionAura != false) {
        output.WriteRawTag(128, 2);
        output.WriteBool(RetributionAura);
      }
      if (ShadowProtection != false) {
        output.WriteRawTag(136, 2);
        output.WriteBool(ShadowProtection);
      }
      if (DrumsOfForgottenKings != false) {
        output.WriteRawTag(144, 2);
        output.WriteBool(DrumsOfForgottenKings);
      }
      if (DrumsOfTheWild != false) {
        output.WriteRawTag(152, 2);
        output.WriteBool(DrumsOfTheWild);
      }
      if (ScrollOfProtection != false) {
        output.WriteRawTag(160, 2);
        output.WriteBool(ScrollOfProtection);
      }
      if (ScrollOfStamina != false) {
        output.WriteRawTag(168, 2);
        output.WriteBool(ScrollOfStamina);
      }
      if (ScrollOfStrength != false) {
        output.WriteRawTag(176, 2);
        output.WriteBool(ScrollOfStrength);
      }
      if (ScrollOfAgility != false) {
        output.WriteRawTag(184, 2);
        output.WriteBool(ScrollOfAgility);
      }
      if (ScrollOfIntellect != false) {
        output.WriteRawTag(192, 2);
        output.WriteBool(ScrollOfIntellect);
      }
      if (ScrollOfSpirit != false) {
        output.WriteRawTag(200, 2);
        output.WriteBool(ScrollOfSpirit);
      }
      if (StoneskinTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(208, 2);
        output.WriteEnum((int) StoneskinTotem);
      }
      if (DemonicPactSp != 0) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(DemonicPactSp);
      }
      if (NatureResistanceTotem != false) {
        output.WriteRawTag(232, 2);
        output.WriteBool(NatureResistanceTotem);
      }
      if (AspectOfTheWild != false) {
        output.WriteRawTag(240, 2);
        output.WriteBool(AspectOfTheWild);
      }
      if (FrostResistanceAura != false) {
        output.WriteRawTag(248, 2);
        output.WriteBool(FrostResistanceAura);
      }
      if (FrostResistanceTotem != false) {
        output.WriteRawTag(128, 3);
        output.WriteBool(FrostResistanceTotem);
      }
      if (StrengthOfWrynn != false) {
        output.WriteRawTag(136, 3);
        output.WriteBool(StrengthOfWrynn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GiftOfTheWild != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GiftOfTheWild);
      }
      if (PowerWordFortitude != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PowerWordFortitude);
      }
      if (CommandingShout != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommandingShout);
      }
      if (BloodPact != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BloodPact);
      }
      if (HornOfWinter != false) {
        size += 1 + 1;
      }
      if (StrengthOfEarthTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StrengthOfEarthTotem);
      }
      if (ArcaneBrilliance != false) {
        size += 1 + 1;
      }
      if (FelIntelligence != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FelIntelligence);
      }
      if (DivineSpirit != false) {
        size += 1 + 1;
      }
      if (BattleShout != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BattleShout);
      }
      if (TrueshotAura != false) {
        size += 1 + 1;
      }
      if (UnleashedRage != false) {
        size += 1 + 1;
      }
      if (AbominationsMight != false) {
        size += 1 + 1;
      }
      if (LeaderOfThePack != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LeaderOfThePack);
      }
      if (Rampage != false) {
        size += 1 + 1;
      }
      if (IcyTalons != false) {
        size += 2 + 1;
      }
      if (WindfuryTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) WindfuryTotem);
      }
      if (TotemOfWrath != false) {
        size += 2 + 1;
      }
      if (FlametongueTotem != false) {
        size += 2 + 1;
      }
      if (DemonicPactSp != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DemonicPactSp);
      }
      if (SwiftRetribution != false) {
        size += 2 + 1;
      }
      if (MoonkinAura != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MoonkinAura);
      }
      if (ElementalOath != false) {
        size += 2 + 1;
      }
      if (WrathOfAirTotem != false) {
        size += 2 + 1;
      }
      if (FerociousInspiration != false) {
        size += 2 + 1;
      }
      if (SanctifiedRetribution != false) {
        size += 2 + 1;
      }
      if (ArcaneEmpowerment != false) {
        size += 2 + 1;
      }
      if (ManaSpringTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ManaSpringTotem);
      }
      if (ShadowProtection != false) {
        size += 2 + 1;
      }
      if (NatureResistanceTotem != false) {
        size += 2 + 1;
      }
      if (AspectOfTheWild != false) {
        size += 2 + 1;
      }
      if (FrostResistanceAura != false) {
        size += 2 + 1;
      }
      if (FrostResistanceTotem != false) {
        size += 2 + 1;
      }
      if (Bloodlust != false) {
        size += 2 + 1;
      }
      if (Thorns != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Thorns);
      }
      if (DevotionAura != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) DevotionAura);
      }
      if (StoneskinTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) StoneskinTotem);
      }
      if (RetributionAura != false) {
        size += 2 + 1;
      }
      if (StrengthOfWrynn != false) {
        size += 2 + 1;
      }
      if (DrumsOfForgottenKings != false) {
        size += 2 + 1;
      }
      if (DrumsOfTheWild != false) {
        size += 2 + 1;
      }
      if (ScrollOfProtection != false) {
        size += 2 + 1;
      }
      if (ScrollOfStamina != false) {
        size += 2 + 1;
      }
      if (ScrollOfStrength != false) {
        size += 2 + 1;
      }
      if (ScrollOfAgility != false) {
        size += 2 + 1;
      }
      if (ScrollOfIntellect != false) {
        size += 2 + 1;
      }
      if (ScrollOfSpirit != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RaidBuffs other) {
      if (other == null) {
        return;
      }
      if (other.GiftOfTheWild != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        GiftOfTheWild = other.GiftOfTheWild;
      }
      if (other.PowerWordFortitude != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        PowerWordFortitude = other.PowerWordFortitude;
      }
      if (other.CommandingShout != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        CommandingShout = other.CommandingShout;
      }
      if (other.BloodPact != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        BloodPact = other.BloodPact;
      }
      if (other.HornOfWinter != false) {
        HornOfWinter = other.HornOfWinter;
      }
      if (other.StrengthOfEarthTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        StrengthOfEarthTotem = other.StrengthOfEarthTotem;
      }
      if (other.ArcaneBrilliance != false) {
        ArcaneBrilliance = other.ArcaneBrilliance;
      }
      if (other.FelIntelligence != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        FelIntelligence = other.FelIntelligence;
      }
      if (other.DivineSpirit != false) {
        DivineSpirit = other.DivineSpirit;
      }
      if (other.BattleShout != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        BattleShout = other.BattleShout;
      }
      if (other.TrueshotAura != false) {
        TrueshotAura = other.TrueshotAura;
      }
      if (other.UnleashedRage != false) {
        UnleashedRage = other.UnleashedRage;
      }
      if (other.AbominationsMight != false) {
        AbominationsMight = other.AbominationsMight;
      }
      if (other.LeaderOfThePack != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        LeaderOfThePack = other.LeaderOfThePack;
      }
      if (other.Rampage != false) {
        Rampage = other.Rampage;
      }
      if (other.IcyTalons != false) {
        IcyTalons = other.IcyTalons;
      }
      if (other.WindfuryTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        WindfuryTotem = other.WindfuryTotem;
      }
      if (other.TotemOfWrath != false) {
        TotemOfWrath = other.TotemOfWrath;
      }
      if (other.FlametongueTotem != false) {
        FlametongueTotem = other.FlametongueTotem;
      }
      if (other.DemonicPactSp != 0) {
        DemonicPactSp = other.DemonicPactSp;
      }
      if (other.SwiftRetribution != false) {
        SwiftRetribution = other.SwiftRetribution;
      }
      if (other.MoonkinAura != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        MoonkinAura = other.MoonkinAura;
      }
      if (other.ElementalOath != false) {
        ElementalOath = other.ElementalOath;
      }
      if (other.WrathOfAirTotem != false) {
        WrathOfAirTotem = other.WrathOfAirTotem;
      }
      if (other.FerociousInspiration != false) {
        FerociousInspiration = other.FerociousInspiration;
      }
      if (other.SanctifiedRetribution != false) {
        SanctifiedRetribution = other.SanctifiedRetribution;
      }
      if (other.ArcaneEmpowerment != false) {
        ArcaneEmpowerment = other.ArcaneEmpowerment;
      }
      if (other.ManaSpringTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        ManaSpringTotem = other.ManaSpringTotem;
      }
      if (other.ShadowProtection != false) {
        ShadowProtection = other.ShadowProtection;
      }
      if (other.NatureResistanceTotem != false) {
        NatureResistanceTotem = other.NatureResistanceTotem;
      }
      if (other.AspectOfTheWild != false) {
        AspectOfTheWild = other.AspectOfTheWild;
      }
      if (other.FrostResistanceAura != false) {
        FrostResistanceAura = other.FrostResistanceAura;
      }
      if (other.FrostResistanceTotem != false) {
        FrostResistanceTotem = other.FrostResistanceTotem;
      }
      if (other.Bloodlust != false) {
        Bloodlust = other.Bloodlust;
      }
      if (other.Thorns != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        Thorns = other.Thorns;
      }
      if (other.DevotionAura != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        DevotionAura = other.DevotionAura;
      }
      if (other.StoneskinTotem != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        StoneskinTotem = other.StoneskinTotem;
      }
      if (other.RetributionAura != false) {
        RetributionAura = other.RetributionAura;
      }
      if (other.StrengthOfWrynn != false) {
        StrengthOfWrynn = other.StrengthOfWrynn;
      }
      if (other.DrumsOfForgottenKings != false) {
        DrumsOfForgottenKings = other.DrumsOfForgottenKings;
      }
      if (other.DrumsOfTheWild != false) {
        DrumsOfTheWild = other.DrumsOfTheWild;
      }
      if (other.ScrollOfProtection != false) {
        ScrollOfProtection = other.ScrollOfProtection;
      }
      if (other.ScrollOfStamina != false) {
        ScrollOfStamina = other.ScrollOfStamina;
      }
      if (other.ScrollOfStrength != false) {
        ScrollOfStrength = other.ScrollOfStrength;
      }
      if (other.ScrollOfAgility != false) {
        ScrollOfAgility = other.ScrollOfAgility;
      }
      if (other.ScrollOfIntellect != false) {
        ScrollOfIntellect = other.ScrollOfIntellect;
      }
      if (other.ScrollOfSpirit != false) {
        ScrollOfSpirit = other.ScrollOfSpirit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GiftOfTheWild = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 16: {
            PowerWordFortitude = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 24: {
            CommandingShout = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 32: {
            BloodPact = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 40: {
            HornOfWinter = input.ReadBool();
            break;
          }
          case 48: {
            StrengthOfEarthTotem = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 56: {
            ArcaneBrilliance = input.ReadBool();
            break;
          }
          case 64: {
            FelIntelligence = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 72: {
            DivineSpirit = input.ReadBool();
            break;
          }
          case 80: {
            BattleShout = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 88: {
            TrueshotAura = input.ReadBool();
            break;
          }
          case 96: {
            UnleashedRage = input.ReadBool();
            break;
          }
          case 104: {
            AbominationsMight = input.ReadBool();
            break;
          }
          case 112: {
            LeaderOfThePack = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 120: {
            Rampage = input.ReadBool();
            break;
          }
          case 128: {
            IcyTalons = input.ReadBool();
            break;
          }
          case 136: {
            WindfuryTotem = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 144: {
            TotemOfWrath = input.ReadBool();
            break;
          }
          case 152: {
            FlametongueTotem = input.ReadBool();
            break;
          }
          case 168: {
            SwiftRetribution = input.ReadBool();
            break;
          }
          case 176: {
            MoonkinAura = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 184: {
            ElementalOath = input.ReadBool();
            break;
          }
          case 192: {
            WrathOfAirTotem = input.ReadBool();
            break;
          }
          case 200: {
            FerociousInspiration = input.ReadBool();
            break;
          }
          case 208: {
            SanctifiedRetribution = input.ReadBool();
            break;
          }
          case 216: {
            ArcaneEmpowerment = input.ReadBool();
            break;
          }
          case 224: {
            ManaSpringTotem = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 232: {
            Bloodlust = input.ReadBool();
            break;
          }
          case 240: {
            Thorns = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 248: {
            DevotionAura = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 256: {
            RetributionAura = input.ReadBool();
            break;
          }
          case 264: {
            ShadowProtection = input.ReadBool();
            break;
          }
          case 272: {
            DrumsOfForgottenKings = input.ReadBool();
            break;
          }
          case 280: {
            DrumsOfTheWild = input.ReadBool();
            break;
          }
          case 288: {
            ScrollOfProtection = input.ReadBool();
            break;
          }
          case 296: {
            ScrollOfStamina = input.ReadBool();
            break;
          }
          case 304: {
            ScrollOfStrength = input.ReadBool();
            break;
          }
          case 312: {
            ScrollOfAgility = input.ReadBool();
            break;
          }
          case 320: {
            ScrollOfIntellect = input.ReadBool();
            break;
          }
          case 328: {
            ScrollOfSpirit = input.ReadBool();
            break;
          }
          case 336: {
            StoneskinTotem = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 352: {
            DemonicPactSp = input.ReadInt32();
            break;
          }
          case 360: {
            NatureResistanceTotem = input.ReadBool();
            break;
          }
          case 368: {
            AspectOfTheWild = input.ReadBool();
            break;
          }
          case 376: {
            FrostResistanceAura = input.ReadBool();
            break;
          }
          case 384: {
            FrostResistanceTotem = input.ReadBool();
            break;
          }
          case 392: {
            StrengthOfWrynn = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GiftOfTheWild = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 16: {
            PowerWordFortitude = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 24: {
            CommandingShout = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 32: {
            BloodPact = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 40: {
            HornOfWinter = input.ReadBool();
            break;
          }
          case 48: {
            StrengthOfEarthTotem = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 56: {
            ArcaneBrilliance = input.ReadBool();
            break;
          }
          case 64: {
            FelIntelligence = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 72: {
            DivineSpirit = input.ReadBool();
            break;
          }
          case 80: {
            BattleShout = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 88: {
            TrueshotAura = input.ReadBool();
            break;
          }
          case 96: {
            UnleashedRage = input.ReadBool();
            break;
          }
          case 104: {
            AbominationsMight = input.ReadBool();
            break;
          }
          case 112: {
            LeaderOfThePack = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 120: {
            Rampage = input.ReadBool();
            break;
          }
          case 128: {
            IcyTalons = input.ReadBool();
            break;
          }
          case 136: {
            WindfuryTotem = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 144: {
            TotemOfWrath = input.ReadBool();
            break;
          }
          case 152: {
            FlametongueTotem = input.ReadBool();
            break;
          }
          case 168: {
            SwiftRetribution = input.ReadBool();
            break;
          }
          case 176: {
            MoonkinAura = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 184: {
            ElementalOath = input.ReadBool();
            break;
          }
          case 192: {
            WrathOfAirTotem = input.ReadBool();
            break;
          }
          case 200: {
            FerociousInspiration = input.ReadBool();
            break;
          }
          case 208: {
            SanctifiedRetribution = input.ReadBool();
            break;
          }
          case 216: {
            ArcaneEmpowerment = input.ReadBool();
            break;
          }
          case 224: {
            ManaSpringTotem = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 232: {
            Bloodlust = input.ReadBool();
            break;
          }
          case 240: {
            Thorns = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 248: {
            DevotionAura = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 256: {
            RetributionAura = input.ReadBool();
            break;
          }
          case 264: {
            ShadowProtection = input.ReadBool();
            break;
          }
          case 272: {
            DrumsOfForgottenKings = input.ReadBool();
            break;
          }
          case 280: {
            DrumsOfTheWild = input.ReadBool();
            break;
          }
          case 288: {
            ScrollOfProtection = input.ReadBool();
            break;
          }
          case 296: {
            ScrollOfStamina = input.ReadBool();
            break;
          }
          case 304: {
            ScrollOfStrength = input.ReadBool();
            break;
          }
          case 312: {
            ScrollOfAgility = input.ReadBool();
            break;
          }
          case 320: {
            ScrollOfIntellect = input.ReadBool();
            break;
          }
          case 328: {
            ScrollOfSpirit = input.ReadBool();
            break;
          }
          case 336: {
            StoneskinTotem = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 352: {
            DemonicPactSp = input.ReadInt32();
            break;
          }
          case 360: {
            NatureResistanceTotem = input.ReadBool();
            break;
          }
          case 368: {
            AspectOfTheWild = input.ReadBool();
            break;
          }
          case 376: {
            FrostResistanceAura = input.ReadBool();
            break;
          }
          case 384: {
            FrostResistanceTotem = input.ReadBool();
            break;
          }
          case 392: {
            StrengthOfWrynn = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Buffs that affect a single party.
  /// </summary>
  public sealed partial class PartyBuffs : pb::IMessage<PartyBuffs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PartyBuffs> _parser = new pb::MessageParser<PartyBuffs>(() => new PartyBuffs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PartyBuffs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PartyBuffs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PartyBuffs(PartyBuffs other) : this() {
      atieshMage_ = other.atieshMage_;
      atieshWarlock_ = other.atieshWarlock_;
      braidedEterniumChain_ = other.braidedEterniumChain_;
      eyeOfTheNight_ = other.eyeOfTheNight_;
      chainOfTheTwilightOwl_ = other.chainOfTheTwilightOwl_;
      manaTideTotems_ = other.manaTideTotems_;
      heroicPresence_ = other.heroicPresence_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PartyBuffs Clone() {
      return new PartyBuffs(this);
    }

    /// <summary>Field number for the "atiesh_mage" field.</summary>
    public const int AtieshMageFieldNumber = 1;
    private int atieshMage_;
    /// <summary>
    /// Item Buffs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AtieshMage {
      get { return atieshMage_; }
      set {
        atieshMage_ = value;
      }
    }

    /// <summary>Field number for the "atiesh_warlock" field.</summary>
    public const int AtieshWarlockFieldNumber = 2;
    private int atieshWarlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AtieshWarlock {
      get { return atieshWarlock_; }
      set {
        atieshWarlock_ = value;
      }
    }

    /// <summary>Field number for the "braided_eternium_chain" field.</summary>
    public const int BraidedEterniumChainFieldNumber = 3;
    private bool braidedEterniumChain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BraidedEterniumChain {
      get { return braidedEterniumChain_; }
      set {
        braidedEterniumChain_ = value;
      }
    }

    /// <summary>Field number for the "eye_of_the_night" field.</summary>
    public const int EyeOfTheNightFieldNumber = 4;
    private bool eyeOfTheNight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EyeOfTheNight {
      get { return eyeOfTheNight_; }
      set {
        eyeOfTheNight_ = value;
      }
    }

    /// <summary>Field number for the "chain_of_the_twilight_owl" field.</summary>
    public const int ChainOfTheTwilightOwlFieldNumber = 5;
    private bool chainOfTheTwilightOwl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ChainOfTheTwilightOwl {
      get { return chainOfTheTwilightOwl_; }
      set {
        chainOfTheTwilightOwl_ = value;
      }
    }

    /// <summary>Field number for the "mana_tide_totems" field.</summary>
    public const int ManaTideTotemsFieldNumber = 6;
    private int manaTideTotems_;
    /// <summary>
    /// Group buffs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ManaTideTotems {
      get { return manaTideTotems_; }
      set {
        manaTideTotems_ = value;
      }
    }

    /// <summary>Field number for the "heroic_presence" field.</summary>
    public const int HeroicPresenceFieldNumber = 7;
    private bool heroicPresence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HeroicPresence {
      get { return heroicPresence_; }
      set {
        heroicPresence_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PartyBuffs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PartyBuffs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AtieshMage != other.AtieshMage) return false;
      if (AtieshWarlock != other.AtieshWarlock) return false;
      if (BraidedEterniumChain != other.BraidedEterniumChain) return false;
      if (EyeOfTheNight != other.EyeOfTheNight) return false;
      if (ChainOfTheTwilightOwl != other.ChainOfTheTwilightOwl) return false;
      if (ManaTideTotems != other.ManaTideTotems) return false;
      if (HeroicPresence != other.HeroicPresence) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AtieshMage != 0) hash ^= AtieshMage.GetHashCode();
      if (AtieshWarlock != 0) hash ^= AtieshWarlock.GetHashCode();
      if (BraidedEterniumChain != false) hash ^= BraidedEterniumChain.GetHashCode();
      if (EyeOfTheNight != false) hash ^= EyeOfTheNight.GetHashCode();
      if (ChainOfTheTwilightOwl != false) hash ^= ChainOfTheTwilightOwl.GetHashCode();
      if (ManaTideTotems != 0) hash ^= ManaTideTotems.GetHashCode();
      if (HeroicPresence != false) hash ^= HeroicPresence.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AtieshMage != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AtieshMage);
      }
      if (AtieshWarlock != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AtieshWarlock);
      }
      if (BraidedEterniumChain != false) {
        output.WriteRawTag(24);
        output.WriteBool(BraidedEterniumChain);
      }
      if (EyeOfTheNight != false) {
        output.WriteRawTag(32);
        output.WriteBool(EyeOfTheNight);
      }
      if (ChainOfTheTwilightOwl != false) {
        output.WriteRawTag(40);
        output.WriteBool(ChainOfTheTwilightOwl);
      }
      if (ManaTideTotems != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ManaTideTotems);
      }
      if (HeroicPresence != false) {
        output.WriteRawTag(56);
        output.WriteBool(HeroicPresence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AtieshMage != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AtieshMage);
      }
      if (AtieshWarlock != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AtieshWarlock);
      }
      if (BraidedEterniumChain != false) {
        output.WriteRawTag(24);
        output.WriteBool(BraidedEterniumChain);
      }
      if (EyeOfTheNight != false) {
        output.WriteRawTag(32);
        output.WriteBool(EyeOfTheNight);
      }
      if (ChainOfTheTwilightOwl != false) {
        output.WriteRawTag(40);
        output.WriteBool(ChainOfTheTwilightOwl);
      }
      if (ManaTideTotems != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ManaTideTotems);
      }
      if (HeroicPresence != false) {
        output.WriteRawTag(56);
        output.WriteBool(HeroicPresence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AtieshMage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AtieshMage);
      }
      if (AtieshWarlock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AtieshWarlock);
      }
      if (BraidedEterniumChain != false) {
        size += 1 + 1;
      }
      if (EyeOfTheNight != false) {
        size += 1 + 1;
      }
      if (ChainOfTheTwilightOwl != false) {
        size += 1 + 1;
      }
      if (ManaTideTotems != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ManaTideTotems);
      }
      if (HeroicPresence != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PartyBuffs other) {
      if (other == null) {
        return;
      }
      if (other.AtieshMage != 0) {
        AtieshMage = other.AtieshMage;
      }
      if (other.AtieshWarlock != 0) {
        AtieshWarlock = other.AtieshWarlock;
      }
      if (other.BraidedEterniumChain != false) {
        BraidedEterniumChain = other.BraidedEterniumChain;
      }
      if (other.EyeOfTheNight != false) {
        EyeOfTheNight = other.EyeOfTheNight;
      }
      if (other.ChainOfTheTwilightOwl != false) {
        ChainOfTheTwilightOwl = other.ChainOfTheTwilightOwl;
      }
      if (other.ManaTideTotems != 0) {
        ManaTideTotems = other.ManaTideTotems;
      }
      if (other.HeroicPresence != false) {
        HeroicPresence = other.HeroicPresence;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AtieshMage = input.ReadInt32();
            break;
          }
          case 16: {
            AtieshWarlock = input.ReadInt32();
            break;
          }
          case 24: {
            BraidedEterniumChain = input.ReadBool();
            break;
          }
          case 32: {
            EyeOfTheNight = input.ReadBool();
            break;
          }
          case 40: {
            ChainOfTheTwilightOwl = input.ReadBool();
            break;
          }
          case 48: {
            ManaTideTotems = input.ReadInt32();
            break;
          }
          case 56: {
            HeroicPresence = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AtieshMage = input.ReadInt32();
            break;
          }
          case 16: {
            AtieshWarlock = input.ReadInt32();
            break;
          }
          case 24: {
            BraidedEterniumChain = input.ReadBool();
            break;
          }
          case 32: {
            EyeOfTheNight = input.ReadBool();
            break;
          }
          case 40: {
            ChainOfTheTwilightOwl = input.ReadBool();
            break;
          }
          case 48: {
            ManaTideTotems = input.ReadInt32();
            break;
          }
          case 56: {
            HeroicPresence = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// These are usually individual actions taken by other Characters.
  /// </summary>
  public sealed partial class IndividualBuffs : pb::IMessage<IndividualBuffs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IndividualBuffs> _parser = new pb::MessageParser<IndividualBuffs>(() => new IndividualBuffs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IndividualBuffs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IndividualBuffs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IndividualBuffs(IndividualBuffs other) : this() {
      blessingOfKings_ = other.blessingOfKings_;
      blessingOfWisdom_ = other.blessingOfWisdom_;
      blessingOfMight_ = other.blessingOfMight_;
      blessingOfSanctuary_ = other.blessingOfSanctuary_;
      vigilance_ = other.vigilance_;
      renewedHope_ = other.renewedHope_;
      hymnOfHope_ = other.hymnOfHope_;
      handOfSalvation_ = other.handOfSalvation_;
      rapture_ = other.rapture_;
      innervates_ = other.innervates_;
      powerInfusions_ = other.powerInfusions_;
      unholyFrenzy_ = other.unholyFrenzy_;
      revitalizeRejuvination_ = other.revitalizeRejuvination_;
      revitalizeWildGrowth_ = other.revitalizeWildGrowth_;
      tricksOfTheTrades_ = other.tricksOfTheTrades_;
      divineGuardians_ = other.divineGuardians_;
      painSuppressions_ = other.painSuppressions_;
      handOfSacrifices_ = other.handOfSacrifices_;
      guardianSpirits_ = other.guardianSpirits_;
      shatteringThrows_ = other.shatteringThrows_;
      vampiricTouch_ = other.vampiricTouch_;
      huntingParty_ = other.huntingParty_;
      judgementsOfTheWise_ = other.judgementsOfTheWise_;
      improvedSoulLeech_ = other.improvedSoulLeech_;
      enduringWinter_ = other.enduringWinter_;
      focusMagic_ = other.focusMagic_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IndividualBuffs Clone() {
      return new IndividualBuffs(this);
    }

    /// <summary>Field number for the "blessing_of_kings" field.</summary>
    public const int BlessingOfKingsFieldNumber = 1;
    private bool blessingOfKings_;
    /// <summary>
    /// 10% Stats
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BlessingOfKings {
      get { return blessingOfKings_; }
      set {
        blessingOfKings_ = value;
      }
    }

    /// <summary>Field number for the "blessing_of_wisdom" field.</summary>
    public const int BlessingOfWisdomFieldNumber = 2;
    private global::SirusDbScrapper.UIDatabase.TristateEffect blessingOfWisdom_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect BlessingOfWisdom {
      get { return blessingOfWisdom_; }
      set {
        blessingOfWisdom_ = value;
      }
    }

    /// <summary>Field number for the "blessing_of_might" field.</summary>
    public const int BlessingOfMightFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.TristateEffect blessingOfMight_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect BlessingOfMight {
      get { return blessingOfMight_; }
      set {
        blessingOfMight_ = value;
      }
    }

    /// <summary>Field number for the "blessing_of_sanctuary" field.</summary>
    public const int BlessingOfSanctuaryFieldNumber = 4;
    private bool blessingOfSanctuary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BlessingOfSanctuary {
      get { return blessingOfSanctuary_; }
      set {
        blessingOfSanctuary_ = value;
      }
    }

    /// <summary>Field number for the "vigilance" field.</summary>
    public const int VigilanceFieldNumber = 5;
    private bool vigilance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Vigilance {
      get { return vigilance_; }
      set {
        vigilance_ = value;
      }
    }

    /// <summary>Field number for the "renewed_hope" field.</summary>
    public const int RenewedHopeFieldNumber = 6;
    private bool renewedHope_;
    /// <summary>
    /// Only used in individual sims 
    ///   as the class that provides these would cast them in raid sim
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RenewedHope {
      get { return renewedHope_; }
      set {
        renewedHope_ = value;
      }
    }

    /// <summary>Field number for the "hymn_of_hope" field.</summary>
    public const int HymnOfHopeFieldNumber = 7;
    private int hymnOfHope_;
    /// <summary>
    /// How many of each of these buffs the player will be receiving.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HymnOfHope {
      get { return hymnOfHope_; }
      set {
        hymnOfHope_ = value;
      }
    }

    /// <summary>Field number for the "hand_of_salvation" field.</summary>
    public const int HandOfSalvationFieldNumber = 8;
    private int handOfSalvation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HandOfSalvation {
      get { return handOfSalvation_; }
      set {
        handOfSalvation_ = value;
      }
    }

    /// <summary>Field number for the "rapture" field.</summary>
    public const int RaptureFieldNumber = 9;
    private int rapture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rapture {
      get { return rapture_; }
      set {
        rapture_ = value;
      }
    }

    /// <summary>Field number for the "innervates" field.</summary>
    public const int InnervatesFieldNumber = 10;
    private int innervates_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Innervates {
      get { return innervates_; }
      set {
        innervates_ = value;
      }
    }

    /// <summary>Field number for the "power_infusions" field.</summary>
    public const int PowerInfusionsFieldNumber = 11;
    private int powerInfusions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PowerInfusions {
      get { return powerInfusions_; }
      set {
        powerInfusions_ = value;
      }
    }

    /// <summary>Field number for the "unholy_frenzy" field.</summary>
    public const int UnholyFrenzyFieldNumber = 12;
    private int unholyFrenzy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnholyFrenzy {
      get { return unholyFrenzy_; }
      set {
        unholyFrenzy_ = value;
      }
    }

    /// <summary>Field number for the "revitalize_rejuvination" field.</summary>
    public const int RevitalizeRejuvinationFieldNumber = 13;
    private int revitalizeRejuvination_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RevitalizeRejuvination {
      get { return revitalizeRejuvination_; }
      set {
        revitalizeRejuvination_ = value;
      }
    }

    /// <summary>Field number for the "revitalize_wild_growth" field.</summary>
    public const int RevitalizeWildGrowthFieldNumber = 21;
    private int revitalizeWildGrowth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RevitalizeWildGrowth {
      get { return revitalizeWildGrowth_; }
      set {
        revitalizeWildGrowth_ = value;
      }
    }

    /// <summary>Field number for the "tricks_of_the_trades" field.</summary>
    public const int TricksOfTheTradesFieldNumber = 19;
    private int tricksOfTheTrades_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TricksOfTheTrades {
      get { return tricksOfTheTrades_; }
      set {
        tricksOfTheTrades_ = value;
      }
    }

    /// <summary>Field number for the "divine_guardians" field.</summary>
    public const int DivineGuardiansFieldNumber = 23;
    private int divineGuardians_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DivineGuardians {
      get { return divineGuardians_; }
      set {
        divineGuardians_ = value;
      }
    }

    /// <summary>Field number for the "pain_suppressions" field.</summary>
    public const int PainSuppressionsFieldNumber = 24;
    private int painSuppressions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PainSuppressions {
      get { return painSuppressions_; }
      set {
        painSuppressions_ = value;
      }
    }

    /// <summary>Field number for the "hand_of_sacrifices" field.</summary>
    public const int HandOfSacrificesFieldNumber = 25;
    private int handOfSacrifices_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HandOfSacrifices {
      get { return handOfSacrifices_; }
      set {
        handOfSacrifices_ = value;
      }
    }

    /// <summary>Field number for the "guardian_spirits" field.</summary>
    public const int GuardianSpiritsFieldNumber = 26;
    private int guardianSpirits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GuardianSpirits {
      get { return guardianSpirits_; }
      set {
        guardianSpirits_ = value;
      }
    }

    /// <summary>Field number for the "shattering_throws" field.</summary>
    public const int ShatteringThrowsFieldNumber = 20;
    private int shatteringThrows_;
    /// <summary>
    /// Technically a debuff, but only used by individual sims.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ShatteringThrows {
      get { return shatteringThrows_; }
      set {
        shatteringThrows_ = value;
      }
    }

    /// <summary>Field number for the "vampiric_touch" field.</summary>
    public const int VampiricTouchFieldNumber = 14;
    private bool vampiricTouch_;
    /// <summary>
    /// Replenishment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool VampiricTouch {
      get { return vampiricTouch_; }
      set {
        vampiricTouch_ = value;
      }
    }

    /// <summary>Field number for the "hunting_party" field.</summary>
    public const int HuntingPartyFieldNumber = 15;
    private bool huntingParty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HuntingParty {
      get { return huntingParty_; }
      set {
        huntingParty_ = value;
      }
    }

    /// <summary>Field number for the "judgements_of_the_wise" field.</summary>
    public const int JudgementsOfTheWiseFieldNumber = 16;
    private bool judgementsOfTheWise_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool JudgementsOfTheWise {
      get { return judgementsOfTheWise_; }
      set {
        judgementsOfTheWise_ = value;
      }
    }

    /// <summary>Field number for the "improved_soul_leech" field.</summary>
    public const int ImprovedSoulLeechFieldNumber = 17;
    private bool improvedSoulLeech_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ImprovedSoulLeech {
      get { return improvedSoulLeech_; }
      set {
        improvedSoulLeech_ = value;
      }
    }

    /// <summary>Field number for the "enduring_winter" field.</summary>
    public const int EnduringWinterFieldNumber = 18;
    private bool enduringWinter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnduringWinter {
      get { return enduringWinter_; }
      set {
        enduringWinter_ = value;
      }
    }

    /// <summary>Field number for the "focus_magic" field.</summary>
    public const int FocusMagicFieldNumber = 22;
    private bool focusMagic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FocusMagic {
      get { return focusMagic_; }
      set {
        focusMagic_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IndividualBuffs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IndividualBuffs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlessingOfKings != other.BlessingOfKings) return false;
      if (BlessingOfWisdom != other.BlessingOfWisdom) return false;
      if (BlessingOfMight != other.BlessingOfMight) return false;
      if (BlessingOfSanctuary != other.BlessingOfSanctuary) return false;
      if (Vigilance != other.Vigilance) return false;
      if (RenewedHope != other.RenewedHope) return false;
      if (HymnOfHope != other.HymnOfHope) return false;
      if (HandOfSalvation != other.HandOfSalvation) return false;
      if (Rapture != other.Rapture) return false;
      if (Innervates != other.Innervates) return false;
      if (PowerInfusions != other.PowerInfusions) return false;
      if (UnholyFrenzy != other.UnholyFrenzy) return false;
      if (RevitalizeRejuvination != other.RevitalizeRejuvination) return false;
      if (RevitalizeWildGrowth != other.RevitalizeWildGrowth) return false;
      if (TricksOfTheTrades != other.TricksOfTheTrades) return false;
      if (DivineGuardians != other.DivineGuardians) return false;
      if (PainSuppressions != other.PainSuppressions) return false;
      if (HandOfSacrifices != other.HandOfSacrifices) return false;
      if (GuardianSpirits != other.GuardianSpirits) return false;
      if (ShatteringThrows != other.ShatteringThrows) return false;
      if (VampiricTouch != other.VampiricTouch) return false;
      if (HuntingParty != other.HuntingParty) return false;
      if (JudgementsOfTheWise != other.JudgementsOfTheWise) return false;
      if (ImprovedSoulLeech != other.ImprovedSoulLeech) return false;
      if (EnduringWinter != other.EnduringWinter) return false;
      if (FocusMagic != other.FocusMagic) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BlessingOfKings != false) hash ^= BlessingOfKings.GetHashCode();
      if (BlessingOfWisdom != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= BlessingOfWisdom.GetHashCode();
      if (BlessingOfMight != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= BlessingOfMight.GetHashCode();
      if (BlessingOfSanctuary != false) hash ^= BlessingOfSanctuary.GetHashCode();
      if (Vigilance != false) hash ^= Vigilance.GetHashCode();
      if (RenewedHope != false) hash ^= RenewedHope.GetHashCode();
      if (HymnOfHope != 0) hash ^= HymnOfHope.GetHashCode();
      if (HandOfSalvation != 0) hash ^= HandOfSalvation.GetHashCode();
      if (Rapture != 0) hash ^= Rapture.GetHashCode();
      if (Innervates != 0) hash ^= Innervates.GetHashCode();
      if (PowerInfusions != 0) hash ^= PowerInfusions.GetHashCode();
      if (UnholyFrenzy != 0) hash ^= UnholyFrenzy.GetHashCode();
      if (RevitalizeRejuvination != 0) hash ^= RevitalizeRejuvination.GetHashCode();
      if (RevitalizeWildGrowth != 0) hash ^= RevitalizeWildGrowth.GetHashCode();
      if (TricksOfTheTrades != 0) hash ^= TricksOfTheTrades.GetHashCode();
      if (DivineGuardians != 0) hash ^= DivineGuardians.GetHashCode();
      if (PainSuppressions != 0) hash ^= PainSuppressions.GetHashCode();
      if (HandOfSacrifices != 0) hash ^= HandOfSacrifices.GetHashCode();
      if (GuardianSpirits != 0) hash ^= GuardianSpirits.GetHashCode();
      if (ShatteringThrows != 0) hash ^= ShatteringThrows.GetHashCode();
      if (VampiricTouch != false) hash ^= VampiricTouch.GetHashCode();
      if (HuntingParty != false) hash ^= HuntingParty.GetHashCode();
      if (JudgementsOfTheWise != false) hash ^= JudgementsOfTheWise.GetHashCode();
      if (ImprovedSoulLeech != false) hash ^= ImprovedSoulLeech.GetHashCode();
      if (EnduringWinter != false) hash ^= EnduringWinter.GetHashCode();
      if (FocusMagic != false) hash ^= FocusMagic.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BlessingOfKings != false) {
        output.WriteRawTag(8);
        output.WriteBool(BlessingOfKings);
      }
      if (BlessingOfWisdom != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BlessingOfWisdom);
      }
      if (BlessingOfMight != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(24);
        output.WriteEnum((int) BlessingOfMight);
      }
      if (BlessingOfSanctuary != false) {
        output.WriteRawTag(32);
        output.WriteBool(BlessingOfSanctuary);
      }
      if (Vigilance != false) {
        output.WriteRawTag(40);
        output.WriteBool(Vigilance);
      }
      if (RenewedHope != false) {
        output.WriteRawTag(48);
        output.WriteBool(RenewedHope);
      }
      if (HymnOfHope != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HymnOfHope);
      }
      if (HandOfSalvation != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(HandOfSalvation);
      }
      if (Rapture != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Rapture);
      }
      if (Innervates != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Innervates);
      }
      if (PowerInfusions != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(PowerInfusions);
      }
      if (UnholyFrenzy != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(UnholyFrenzy);
      }
      if (RevitalizeRejuvination != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(RevitalizeRejuvination);
      }
      if (VampiricTouch != false) {
        output.WriteRawTag(112);
        output.WriteBool(VampiricTouch);
      }
      if (HuntingParty != false) {
        output.WriteRawTag(120);
        output.WriteBool(HuntingParty);
      }
      if (JudgementsOfTheWise != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(JudgementsOfTheWise);
      }
      if (ImprovedSoulLeech != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(ImprovedSoulLeech);
      }
      if (EnduringWinter != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(EnduringWinter);
      }
      if (TricksOfTheTrades != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(TricksOfTheTrades);
      }
      if (ShatteringThrows != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ShatteringThrows);
      }
      if (RevitalizeWildGrowth != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(RevitalizeWildGrowth);
      }
      if (FocusMagic != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(FocusMagic);
      }
      if (DivineGuardians != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(DivineGuardians);
      }
      if (PainSuppressions != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(PainSuppressions);
      }
      if (HandOfSacrifices != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(HandOfSacrifices);
      }
      if (GuardianSpirits != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(GuardianSpirits);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BlessingOfKings != false) {
        output.WriteRawTag(8);
        output.WriteBool(BlessingOfKings);
      }
      if (BlessingOfWisdom != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BlessingOfWisdom);
      }
      if (BlessingOfMight != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(24);
        output.WriteEnum((int) BlessingOfMight);
      }
      if (BlessingOfSanctuary != false) {
        output.WriteRawTag(32);
        output.WriteBool(BlessingOfSanctuary);
      }
      if (Vigilance != false) {
        output.WriteRawTag(40);
        output.WriteBool(Vigilance);
      }
      if (RenewedHope != false) {
        output.WriteRawTag(48);
        output.WriteBool(RenewedHope);
      }
      if (HymnOfHope != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HymnOfHope);
      }
      if (HandOfSalvation != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(HandOfSalvation);
      }
      if (Rapture != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Rapture);
      }
      if (Innervates != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Innervates);
      }
      if (PowerInfusions != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(PowerInfusions);
      }
      if (UnholyFrenzy != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(UnholyFrenzy);
      }
      if (RevitalizeRejuvination != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(RevitalizeRejuvination);
      }
      if (VampiricTouch != false) {
        output.WriteRawTag(112);
        output.WriteBool(VampiricTouch);
      }
      if (HuntingParty != false) {
        output.WriteRawTag(120);
        output.WriteBool(HuntingParty);
      }
      if (JudgementsOfTheWise != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(JudgementsOfTheWise);
      }
      if (ImprovedSoulLeech != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(ImprovedSoulLeech);
      }
      if (EnduringWinter != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(EnduringWinter);
      }
      if (TricksOfTheTrades != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(TricksOfTheTrades);
      }
      if (ShatteringThrows != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ShatteringThrows);
      }
      if (RevitalizeWildGrowth != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(RevitalizeWildGrowth);
      }
      if (FocusMagic != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(FocusMagic);
      }
      if (DivineGuardians != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(DivineGuardians);
      }
      if (PainSuppressions != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(PainSuppressions);
      }
      if (HandOfSacrifices != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(HandOfSacrifices);
      }
      if (GuardianSpirits != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(GuardianSpirits);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BlessingOfKings != false) {
        size += 1 + 1;
      }
      if (BlessingOfWisdom != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BlessingOfWisdom);
      }
      if (BlessingOfMight != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BlessingOfMight);
      }
      if (BlessingOfSanctuary != false) {
        size += 1 + 1;
      }
      if (Vigilance != false) {
        size += 1 + 1;
      }
      if (RenewedHope != false) {
        size += 1 + 1;
      }
      if (HymnOfHope != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HymnOfHope);
      }
      if (HandOfSalvation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HandOfSalvation);
      }
      if (Rapture != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rapture);
      }
      if (Innervates != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Innervates);
      }
      if (PowerInfusions != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PowerInfusions);
      }
      if (UnholyFrenzy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnholyFrenzy);
      }
      if (RevitalizeRejuvination != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RevitalizeRejuvination);
      }
      if (RevitalizeWildGrowth != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RevitalizeWildGrowth);
      }
      if (TricksOfTheTrades != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TricksOfTheTrades);
      }
      if (DivineGuardians != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DivineGuardians);
      }
      if (PainSuppressions != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PainSuppressions);
      }
      if (HandOfSacrifices != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HandOfSacrifices);
      }
      if (GuardianSpirits != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GuardianSpirits);
      }
      if (ShatteringThrows != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ShatteringThrows);
      }
      if (VampiricTouch != false) {
        size += 1 + 1;
      }
      if (HuntingParty != false) {
        size += 1 + 1;
      }
      if (JudgementsOfTheWise != false) {
        size += 2 + 1;
      }
      if (ImprovedSoulLeech != false) {
        size += 2 + 1;
      }
      if (EnduringWinter != false) {
        size += 2 + 1;
      }
      if (FocusMagic != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IndividualBuffs other) {
      if (other == null) {
        return;
      }
      if (other.BlessingOfKings != false) {
        BlessingOfKings = other.BlessingOfKings;
      }
      if (other.BlessingOfWisdom != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        BlessingOfWisdom = other.BlessingOfWisdom;
      }
      if (other.BlessingOfMight != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        BlessingOfMight = other.BlessingOfMight;
      }
      if (other.BlessingOfSanctuary != false) {
        BlessingOfSanctuary = other.BlessingOfSanctuary;
      }
      if (other.Vigilance != false) {
        Vigilance = other.Vigilance;
      }
      if (other.RenewedHope != false) {
        RenewedHope = other.RenewedHope;
      }
      if (other.HymnOfHope != 0) {
        HymnOfHope = other.HymnOfHope;
      }
      if (other.HandOfSalvation != 0) {
        HandOfSalvation = other.HandOfSalvation;
      }
      if (other.Rapture != 0) {
        Rapture = other.Rapture;
      }
      if (other.Innervates != 0) {
        Innervates = other.Innervates;
      }
      if (other.PowerInfusions != 0) {
        PowerInfusions = other.PowerInfusions;
      }
      if (other.UnholyFrenzy != 0) {
        UnholyFrenzy = other.UnholyFrenzy;
      }
      if (other.RevitalizeRejuvination != 0) {
        RevitalizeRejuvination = other.RevitalizeRejuvination;
      }
      if (other.RevitalizeWildGrowth != 0) {
        RevitalizeWildGrowth = other.RevitalizeWildGrowth;
      }
      if (other.TricksOfTheTrades != 0) {
        TricksOfTheTrades = other.TricksOfTheTrades;
      }
      if (other.DivineGuardians != 0) {
        DivineGuardians = other.DivineGuardians;
      }
      if (other.PainSuppressions != 0) {
        PainSuppressions = other.PainSuppressions;
      }
      if (other.HandOfSacrifices != 0) {
        HandOfSacrifices = other.HandOfSacrifices;
      }
      if (other.GuardianSpirits != 0) {
        GuardianSpirits = other.GuardianSpirits;
      }
      if (other.ShatteringThrows != 0) {
        ShatteringThrows = other.ShatteringThrows;
      }
      if (other.VampiricTouch != false) {
        VampiricTouch = other.VampiricTouch;
      }
      if (other.HuntingParty != false) {
        HuntingParty = other.HuntingParty;
      }
      if (other.JudgementsOfTheWise != false) {
        JudgementsOfTheWise = other.JudgementsOfTheWise;
      }
      if (other.ImprovedSoulLeech != false) {
        ImprovedSoulLeech = other.ImprovedSoulLeech;
      }
      if (other.EnduringWinter != false) {
        EnduringWinter = other.EnduringWinter;
      }
      if (other.FocusMagic != false) {
        FocusMagic = other.FocusMagic;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlessingOfKings = input.ReadBool();
            break;
          }
          case 16: {
            BlessingOfWisdom = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 24: {
            BlessingOfMight = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 32: {
            BlessingOfSanctuary = input.ReadBool();
            break;
          }
          case 40: {
            Vigilance = input.ReadBool();
            break;
          }
          case 48: {
            RenewedHope = input.ReadBool();
            break;
          }
          case 56: {
            HymnOfHope = input.ReadInt32();
            break;
          }
          case 64: {
            HandOfSalvation = input.ReadInt32();
            break;
          }
          case 72: {
            Rapture = input.ReadInt32();
            break;
          }
          case 80: {
            Innervates = input.ReadInt32();
            break;
          }
          case 88: {
            PowerInfusions = input.ReadInt32();
            break;
          }
          case 96: {
            UnholyFrenzy = input.ReadInt32();
            break;
          }
          case 104: {
            RevitalizeRejuvination = input.ReadInt32();
            break;
          }
          case 112: {
            VampiricTouch = input.ReadBool();
            break;
          }
          case 120: {
            HuntingParty = input.ReadBool();
            break;
          }
          case 128: {
            JudgementsOfTheWise = input.ReadBool();
            break;
          }
          case 136: {
            ImprovedSoulLeech = input.ReadBool();
            break;
          }
          case 144: {
            EnduringWinter = input.ReadBool();
            break;
          }
          case 152: {
            TricksOfTheTrades = input.ReadInt32();
            break;
          }
          case 160: {
            ShatteringThrows = input.ReadInt32();
            break;
          }
          case 168: {
            RevitalizeWildGrowth = input.ReadInt32();
            break;
          }
          case 176: {
            FocusMagic = input.ReadBool();
            break;
          }
          case 184: {
            DivineGuardians = input.ReadInt32();
            break;
          }
          case 192: {
            PainSuppressions = input.ReadInt32();
            break;
          }
          case 200: {
            HandOfSacrifices = input.ReadInt32();
            break;
          }
          case 208: {
            GuardianSpirits = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BlessingOfKings = input.ReadBool();
            break;
          }
          case 16: {
            BlessingOfWisdom = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 24: {
            BlessingOfMight = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 32: {
            BlessingOfSanctuary = input.ReadBool();
            break;
          }
          case 40: {
            Vigilance = input.ReadBool();
            break;
          }
          case 48: {
            RenewedHope = input.ReadBool();
            break;
          }
          case 56: {
            HymnOfHope = input.ReadInt32();
            break;
          }
          case 64: {
            HandOfSalvation = input.ReadInt32();
            break;
          }
          case 72: {
            Rapture = input.ReadInt32();
            break;
          }
          case 80: {
            Innervates = input.ReadInt32();
            break;
          }
          case 88: {
            PowerInfusions = input.ReadInt32();
            break;
          }
          case 96: {
            UnholyFrenzy = input.ReadInt32();
            break;
          }
          case 104: {
            RevitalizeRejuvination = input.ReadInt32();
            break;
          }
          case 112: {
            VampiricTouch = input.ReadBool();
            break;
          }
          case 120: {
            HuntingParty = input.ReadBool();
            break;
          }
          case 128: {
            JudgementsOfTheWise = input.ReadBool();
            break;
          }
          case 136: {
            ImprovedSoulLeech = input.ReadBool();
            break;
          }
          case 144: {
            EnduringWinter = input.ReadBool();
            break;
          }
          case 152: {
            TricksOfTheTrades = input.ReadInt32();
            break;
          }
          case 160: {
            ShatteringThrows = input.ReadInt32();
            break;
          }
          case 168: {
            RevitalizeWildGrowth = input.ReadInt32();
            break;
          }
          case 176: {
            FocusMagic = input.ReadBool();
            break;
          }
          case 184: {
            DivineGuardians = input.ReadInt32();
            break;
          }
          case 192: {
            PainSuppressions = input.ReadInt32();
            break;
          }
          case 200: {
            HandOfSacrifices = input.ReadInt32();
            break;
          }
          case 208: {
            GuardianSpirits = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Consumes : pb::IMessage<Consumes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Consumes> _parser = new pb::MessageParser<Consumes>(() => new Consumes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Consumes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Consumes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Consumes(Consumes other) : this() {
      flask_ = other.flask_;
      battleElixir_ = other.battleElixir_;
      guardianElixir_ = other.guardianElixir_;
      food_ = other.food_;
      petFood_ = other.petFood_;
      petScrollOfAgility_ = other.petScrollOfAgility_;
      petScrollOfStrength_ = other.petScrollOfStrength_;
      defaultPotion_ = other.defaultPotion_;
      prepopPotion_ = other.prepopPotion_;
      defaultConjured_ = other.defaultConjured_;
      thermalSapper_ = other.thermalSapper_;
      explosiveDecoy_ = other.explosiveDecoy_;
      fillerExplosive_ = other.fillerExplosive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Consumes Clone() {
      return new Consumes(this);
    }

    /// <summary>Field number for the "flask" field.</summary>
    public const int FlaskFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.Flask flask_ = global::SirusDbScrapper.UIDatabase.Flask.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Flask Flask {
      get { return flask_; }
      set {
        flask_ = value;
      }
    }

    /// <summary>Field number for the "battle_elixir" field.</summary>
    public const int BattleElixirFieldNumber = 2;
    private global::SirusDbScrapper.UIDatabase.BattleElixir battleElixir_ = global::SirusDbScrapper.UIDatabase.BattleElixir.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.BattleElixir BattleElixir {
      get { return battleElixir_; }
      set {
        battleElixir_ = value;
      }
    }

    /// <summary>Field number for the "guardian_elixir" field.</summary>
    public const int GuardianElixirFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.GuardianElixir guardianElixir_ = global::SirusDbScrapper.UIDatabase.GuardianElixir.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.GuardianElixir GuardianElixir {
      get { return guardianElixir_; }
      set {
        guardianElixir_ = value;
      }
    }

    /// <summary>Field number for the "food" field.</summary>
    public const int FoodFieldNumber = 6;
    private global::SirusDbScrapper.UIDatabase.Food food_ = global::SirusDbScrapper.UIDatabase.Food.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Food Food {
      get { return food_; }
      set {
        food_ = value;
      }
    }

    /// <summary>Field number for the "pet_food" field.</summary>
    public const int PetFoodFieldNumber = 7;
    private global::SirusDbScrapper.UIDatabase.PetFood petFood_ = global::SirusDbScrapper.UIDatabase.PetFood.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.PetFood PetFood {
      get { return petFood_; }
      set {
        petFood_ = value;
      }
    }

    /// <summary>Field number for the "pet_scroll_of_agility" field.</summary>
    public const int PetScrollOfAgilityFieldNumber = 8;
    private int petScrollOfAgility_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PetScrollOfAgility {
      get { return petScrollOfAgility_; }
      set {
        petScrollOfAgility_ = value;
      }
    }

    /// <summary>Field number for the "pet_scroll_of_strength" field.</summary>
    public const int PetScrollOfStrengthFieldNumber = 9;
    private int petScrollOfStrength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PetScrollOfStrength {
      get { return petScrollOfStrength_; }
      set {
        petScrollOfStrength_ = value;
      }
    }

    /// <summary>Field number for the "default_potion" field.</summary>
    public const int DefaultPotionFieldNumber = 10;
    private global::SirusDbScrapper.UIDatabase.Potions defaultPotion_ = global::SirusDbScrapper.UIDatabase.Potions.UnknownPotion;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Potions DefaultPotion {
      get { return defaultPotion_; }
      set {
        defaultPotion_ = value;
      }
    }

    /// <summary>Field number for the "prepop_potion" field.</summary>
    public const int PrepopPotionFieldNumber = 11;
    private global::SirusDbScrapper.UIDatabase.Potions prepopPotion_ = global::SirusDbScrapper.UIDatabase.Potions.UnknownPotion;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Potions PrepopPotion {
      get { return prepopPotion_; }
      set {
        prepopPotion_ = value;
      }
    }

    /// <summary>Field number for the "default_conjured" field.</summary>
    public const int DefaultConjuredFieldNumber = 12;
    private global::SirusDbScrapper.UIDatabase.Conjured defaultConjured_ = global::SirusDbScrapper.UIDatabase.Conjured.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Conjured DefaultConjured {
      get { return defaultConjured_; }
      set {
        defaultConjured_ = value;
      }
    }

    /// <summary>Field number for the "thermal_sapper" field.</summary>
    public const int ThermalSapperFieldNumber = 15;
    private bool thermalSapper_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ThermalSapper {
      get { return thermalSapper_; }
      set {
        thermalSapper_ = value;
      }
    }

    /// <summary>Field number for the "explosive_decoy" field.</summary>
    public const int ExplosiveDecoyFieldNumber = 16;
    private bool explosiveDecoy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ExplosiveDecoy {
      get { return explosiveDecoy_; }
      set {
        explosiveDecoy_ = value;
      }
    }

    /// <summary>Field number for the "filler_explosive" field.</summary>
    public const int FillerExplosiveFieldNumber = 17;
    private global::SirusDbScrapper.UIDatabase.Explosive fillerExplosive_ = global::SirusDbScrapper.UIDatabase.Explosive.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Explosive FillerExplosive {
      get { return fillerExplosive_; }
      set {
        fillerExplosive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Consumes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Consumes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Flask != other.Flask) return false;
      if (BattleElixir != other.BattleElixir) return false;
      if (GuardianElixir != other.GuardianElixir) return false;
      if (Food != other.Food) return false;
      if (PetFood != other.PetFood) return false;
      if (PetScrollOfAgility != other.PetScrollOfAgility) return false;
      if (PetScrollOfStrength != other.PetScrollOfStrength) return false;
      if (DefaultPotion != other.DefaultPotion) return false;
      if (PrepopPotion != other.PrepopPotion) return false;
      if (DefaultConjured != other.DefaultConjured) return false;
      if (ThermalSapper != other.ThermalSapper) return false;
      if (ExplosiveDecoy != other.ExplosiveDecoy) return false;
      if (FillerExplosive != other.FillerExplosive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Flask != global::SirusDbScrapper.UIDatabase.Flask.Unknown) hash ^= Flask.GetHashCode();
      if (BattleElixir != global::SirusDbScrapper.UIDatabase.BattleElixir.Unknown) hash ^= BattleElixir.GetHashCode();
      if (GuardianElixir != global::SirusDbScrapper.UIDatabase.GuardianElixir.Unknown) hash ^= GuardianElixir.GetHashCode();
      if (Food != global::SirusDbScrapper.UIDatabase.Food.Unknown) hash ^= Food.GetHashCode();
      if (PetFood != global::SirusDbScrapper.UIDatabase.PetFood.Unknown) hash ^= PetFood.GetHashCode();
      if (PetScrollOfAgility != 0) hash ^= PetScrollOfAgility.GetHashCode();
      if (PetScrollOfStrength != 0) hash ^= PetScrollOfStrength.GetHashCode();
      if (DefaultPotion != global::SirusDbScrapper.UIDatabase.Potions.UnknownPotion) hash ^= DefaultPotion.GetHashCode();
      if (PrepopPotion != global::SirusDbScrapper.UIDatabase.Potions.UnknownPotion) hash ^= PrepopPotion.GetHashCode();
      if (DefaultConjured != global::SirusDbScrapper.UIDatabase.Conjured.Unknown) hash ^= DefaultConjured.GetHashCode();
      if (ThermalSapper != false) hash ^= ThermalSapper.GetHashCode();
      if (ExplosiveDecoy != false) hash ^= ExplosiveDecoy.GetHashCode();
      if (FillerExplosive != global::SirusDbScrapper.UIDatabase.Explosive.Unknown) hash ^= FillerExplosive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Flask != global::SirusDbScrapper.UIDatabase.Flask.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Flask);
      }
      if (BattleElixir != global::SirusDbScrapper.UIDatabase.BattleElixir.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BattleElixir);
      }
      if (GuardianElixir != global::SirusDbScrapper.UIDatabase.GuardianElixir.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GuardianElixir);
      }
      if (Food != global::SirusDbScrapper.UIDatabase.Food.Unknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Food);
      }
      if (PetFood != global::SirusDbScrapper.UIDatabase.PetFood.Unknown) {
        output.WriteRawTag(56);
        output.WriteEnum((int) PetFood);
      }
      if (PetScrollOfAgility != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PetScrollOfAgility);
      }
      if (PetScrollOfStrength != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PetScrollOfStrength);
      }
      if (DefaultPotion != global::SirusDbScrapper.UIDatabase.Potions.UnknownPotion) {
        output.WriteRawTag(80);
        output.WriteEnum((int) DefaultPotion);
      }
      if (PrepopPotion != global::SirusDbScrapper.UIDatabase.Potions.UnknownPotion) {
        output.WriteRawTag(88);
        output.WriteEnum((int) PrepopPotion);
      }
      if (DefaultConjured != global::SirusDbScrapper.UIDatabase.Conjured.Unknown) {
        output.WriteRawTag(96);
        output.WriteEnum((int) DefaultConjured);
      }
      if (ThermalSapper != false) {
        output.WriteRawTag(120);
        output.WriteBool(ThermalSapper);
      }
      if (ExplosiveDecoy != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(ExplosiveDecoy);
      }
      if (FillerExplosive != global::SirusDbScrapper.UIDatabase.Explosive.Unknown) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) FillerExplosive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Flask != global::SirusDbScrapper.UIDatabase.Flask.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Flask);
      }
      if (BattleElixir != global::SirusDbScrapper.UIDatabase.BattleElixir.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BattleElixir);
      }
      if (GuardianElixir != global::SirusDbScrapper.UIDatabase.GuardianElixir.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GuardianElixir);
      }
      if (Food != global::SirusDbScrapper.UIDatabase.Food.Unknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Food);
      }
      if (PetFood != global::SirusDbScrapper.UIDatabase.PetFood.Unknown) {
        output.WriteRawTag(56);
        output.WriteEnum((int) PetFood);
      }
      if (PetScrollOfAgility != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PetScrollOfAgility);
      }
      if (PetScrollOfStrength != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PetScrollOfStrength);
      }
      if (DefaultPotion != global::SirusDbScrapper.UIDatabase.Potions.UnknownPotion) {
        output.WriteRawTag(80);
        output.WriteEnum((int) DefaultPotion);
      }
      if (PrepopPotion != global::SirusDbScrapper.UIDatabase.Potions.UnknownPotion) {
        output.WriteRawTag(88);
        output.WriteEnum((int) PrepopPotion);
      }
      if (DefaultConjured != global::SirusDbScrapper.UIDatabase.Conjured.Unknown) {
        output.WriteRawTag(96);
        output.WriteEnum((int) DefaultConjured);
      }
      if (ThermalSapper != false) {
        output.WriteRawTag(120);
        output.WriteBool(ThermalSapper);
      }
      if (ExplosiveDecoy != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(ExplosiveDecoy);
      }
      if (FillerExplosive != global::SirusDbScrapper.UIDatabase.Explosive.Unknown) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) FillerExplosive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Flask != global::SirusDbScrapper.UIDatabase.Flask.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Flask);
      }
      if (BattleElixir != global::SirusDbScrapper.UIDatabase.BattleElixir.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BattleElixir);
      }
      if (GuardianElixir != global::SirusDbScrapper.UIDatabase.GuardianElixir.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GuardianElixir);
      }
      if (Food != global::SirusDbScrapper.UIDatabase.Food.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Food);
      }
      if (PetFood != global::SirusDbScrapper.UIDatabase.PetFood.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PetFood);
      }
      if (PetScrollOfAgility != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PetScrollOfAgility);
      }
      if (PetScrollOfStrength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PetScrollOfStrength);
      }
      if (DefaultPotion != global::SirusDbScrapper.UIDatabase.Potions.UnknownPotion) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DefaultPotion);
      }
      if (PrepopPotion != global::SirusDbScrapper.UIDatabase.Potions.UnknownPotion) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PrepopPotion);
      }
      if (DefaultConjured != global::SirusDbScrapper.UIDatabase.Conjured.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DefaultConjured);
      }
      if (ThermalSapper != false) {
        size += 1 + 1;
      }
      if (ExplosiveDecoy != false) {
        size += 2 + 1;
      }
      if (FillerExplosive != global::SirusDbScrapper.UIDatabase.Explosive.Unknown) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FillerExplosive);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Consumes other) {
      if (other == null) {
        return;
      }
      if (other.Flask != global::SirusDbScrapper.UIDatabase.Flask.Unknown) {
        Flask = other.Flask;
      }
      if (other.BattleElixir != global::SirusDbScrapper.UIDatabase.BattleElixir.Unknown) {
        BattleElixir = other.BattleElixir;
      }
      if (other.GuardianElixir != global::SirusDbScrapper.UIDatabase.GuardianElixir.Unknown) {
        GuardianElixir = other.GuardianElixir;
      }
      if (other.Food != global::SirusDbScrapper.UIDatabase.Food.Unknown) {
        Food = other.Food;
      }
      if (other.PetFood != global::SirusDbScrapper.UIDatabase.PetFood.Unknown) {
        PetFood = other.PetFood;
      }
      if (other.PetScrollOfAgility != 0) {
        PetScrollOfAgility = other.PetScrollOfAgility;
      }
      if (other.PetScrollOfStrength != 0) {
        PetScrollOfStrength = other.PetScrollOfStrength;
      }
      if (other.DefaultPotion != global::SirusDbScrapper.UIDatabase.Potions.UnknownPotion) {
        DefaultPotion = other.DefaultPotion;
      }
      if (other.PrepopPotion != global::SirusDbScrapper.UIDatabase.Potions.UnknownPotion) {
        PrepopPotion = other.PrepopPotion;
      }
      if (other.DefaultConjured != global::SirusDbScrapper.UIDatabase.Conjured.Unknown) {
        DefaultConjured = other.DefaultConjured;
      }
      if (other.ThermalSapper != false) {
        ThermalSapper = other.ThermalSapper;
      }
      if (other.ExplosiveDecoy != false) {
        ExplosiveDecoy = other.ExplosiveDecoy;
      }
      if (other.FillerExplosive != global::SirusDbScrapper.UIDatabase.Explosive.Unknown) {
        FillerExplosive = other.FillerExplosive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Flask = (global::SirusDbScrapper.UIDatabase.Flask) input.ReadEnum();
            break;
          }
          case 16: {
            BattleElixir = (global::SirusDbScrapper.UIDatabase.BattleElixir) input.ReadEnum();
            break;
          }
          case 24: {
            GuardianElixir = (global::SirusDbScrapper.UIDatabase.GuardianElixir) input.ReadEnum();
            break;
          }
          case 48: {
            Food = (global::SirusDbScrapper.UIDatabase.Food) input.ReadEnum();
            break;
          }
          case 56: {
            PetFood = (global::SirusDbScrapper.UIDatabase.PetFood) input.ReadEnum();
            break;
          }
          case 64: {
            PetScrollOfAgility = input.ReadInt32();
            break;
          }
          case 72: {
            PetScrollOfStrength = input.ReadInt32();
            break;
          }
          case 80: {
            DefaultPotion = (global::SirusDbScrapper.UIDatabase.Potions) input.ReadEnum();
            break;
          }
          case 88: {
            PrepopPotion = (global::SirusDbScrapper.UIDatabase.Potions) input.ReadEnum();
            break;
          }
          case 96: {
            DefaultConjured = (global::SirusDbScrapper.UIDatabase.Conjured) input.ReadEnum();
            break;
          }
          case 120: {
            ThermalSapper = input.ReadBool();
            break;
          }
          case 128: {
            ExplosiveDecoy = input.ReadBool();
            break;
          }
          case 136: {
            FillerExplosive = (global::SirusDbScrapper.UIDatabase.Explosive) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Flask = (global::SirusDbScrapper.UIDatabase.Flask) input.ReadEnum();
            break;
          }
          case 16: {
            BattleElixir = (global::SirusDbScrapper.UIDatabase.BattleElixir) input.ReadEnum();
            break;
          }
          case 24: {
            GuardianElixir = (global::SirusDbScrapper.UIDatabase.GuardianElixir) input.ReadEnum();
            break;
          }
          case 48: {
            Food = (global::SirusDbScrapper.UIDatabase.Food) input.ReadEnum();
            break;
          }
          case 56: {
            PetFood = (global::SirusDbScrapper.UIDatabase.PetFood) input.ReadEnum();
            break;
          }
          case 64: {
            PetScrollOfAgility = input.ReadInt32();
            break;
          }
          case 72: {
            PetScrollOfStrength = input.ReadInt32();
            break;
          }
          case 80: {
            DefaultPotion = (global::SirusDbScrapper.UIDatabase.Potions) input.ReadEnum();
            break;
          }
          case 88: {
            PrepopPotion = (global::SirusDbScrapper.UIDatabase.Potions) input.ReadEnum();
            break;
          }
          case 96: {
            DefaultConjured = (global::SirusDbScrapper.UIDatabase.Conjured) input.ReadEnum();
            break;
          }
          case 120: {
            ThermalSapper = input.ReadBool();
            break;
          }
          case 128: {
            ExplosiveDecoy = input.ReadBool();
            break;
          }
          case 136: {
            FillerExplosive = (global::SirusDbScrapper.UIDatabase.Explosive) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Debuffs : pb::IMessage<Debuffs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Debuffs> _parser = new pb::MessageParser<Debuffs>(() => new Debuffs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Debuffs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Debuffs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Debuffs(Debuffs other) : this() {
      judgementOfWisdom_ = other.judgementOfWisdom_;
      judgementOfLight_ = other.judgementOfLight_;
      misery_ = other.misery_;
      faerieFire_ = other.faerieFire_;
      curseOfElements_ = other.curseOfElements_;
      ebonPlaguebringer_ = other.ebonPlaguebringer_;
      earthAndMoon_ = other.earthAndMoon_;
      heartOfTheCrusader_ = other.heartOfTheCrusader_;
      masterPoisoner_ = other.masterPoisoner_;
      totemOfWrath_ = other.totemOfWrath_;
      shadowMastery_ = other.shadowMastery_;
      improvedScorch_ = other.improvedScorch_;
      wintersChill_ = other.wintersChill_;
      bloodFrenzy_ = other.bloodFrenzy_;
      savageCombat_ = other.savageCombat_;
      giftOfArthas_ = other.giftOfArthas_;
      mangle_ = other.mangle_;
      trauma_ = other.trauma_;
      stampede_ = other.stampede_;
      exposeArmor_ = other.exposeArmor_;
      sunderArmor_ = other.sunderArmor_;
      acidSpit_ = other.acidSpit_;
      curseOfWeakness_ = other.curseOfWeakness_;
      sting_ = other.sting_;
      sporeCloud_ = other.sporeCloud_;
      demoralizingRoar_ = other.demoralizingRoar_;
      demoralizingShout_ = other.demoralizingShout_;
      vindication_ = other.vindication_;
      demoralizingScreech_ = other.demoralizingScreech_;
      thunderClap_ = other.thunderClap_;
      frostFever_ = other.frostFever_;
      infectedWounds_ = other.infectedWounds_;
      judgementsOfTheJust_ = other.judgementsOfTheJust_;
      insectSwarm_ = other.insectSwarm_;
      scorpidSting_ = other.scorpidSting_;
      shadowEmbrace_ = other.shadowEmbrace_;
      huntersMark_ = other.huntersMark_;
      crystalYield_ = other.crystalYield_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Debuffs Clone() {
      return new Debuffs(this);
    }

    /// <summary>Field number for the "judgement_of_wisdom" field.</summary>
    public const int JudgementOfWisdomFieldNumber = 1;
    private bool judgementOfWisdom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool JudgementOfWisdom {
      get { return judgementOfWisdom_; }
      set {
        judgementOfWisdom_ = value;
      }
    }

    /// <summary>Field number for the "judgement_of_light" field.</summary>
    public const int JudgementOfLightFieldNumber = 2;
    private bool judgementOfLight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool JudgementOfLight {
      get { return judgementOfLight_; }
      set {
        judgementOfLight_ = value;
      }
    }

    /// <summary>Field number for the "misery" field.</summary>
    public const int MiseryFieldNumber = 3;
    private bool misery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Misery {
      get { return misery_; }
      set {
        misery_ = value;
      }
    }

    /// <summary>Field number for the "faerie_fire" field.</summary>
    public const int FaerieFireFieldNumber = 4;
    private global::SirusDbScrapper.UIDatabase.TristateEffect faerieFire_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect FaerieFire {
      get { return faerieFire_; }
      set {
        faerieFire_ = value;
      }
    }

    /// <summary>Field number for the "curse_of_elements" field.</summary>
    public const int CurseOfElementsFieldNumber = 5;
    private bool curseOfElements_;
    /// <summary>
    /// 13% bonus spell damage
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CurseOfElements {
      get { return curseOfElements_; }
      set {
        curseOfElements_ = value;
      }
    }

    /// <summary>Field number for the "ebon_plaguebringer" field.</summary>
    public const int EbonPlaguebringerFieldNumber = 6;
    private bool ebonPlaguebringer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EbonPlaguebringer {
      get { return ebonPlaguebringer_; }
      set {
        ebonPlaguebringer_ = value;
      }
    }

    /// <summary>Field number for the "earth_and_moon" field.</summary>
    public const int EarthAndMoonFieldNumber = 7;
    private bool earthAndMoon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EarthAndMoon {
      get { return earthAndMoon_; }
      set {
        earthAndMoon_ = value;
      }
    }

    /// <summary>Field number for the "heart_of_the_crusader" field.</summary>
    public const int HeartOfTheCrusaderFieldNumber = 8;
    private bool heartOfTheCrusader_;
    /// <summary>
    /// +3% to crit against target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HeartOfTheCrusader {
      get { return heartOfTheCrusader_; }
      set {
        heartOfTheCrusader_ = value;
      }
    }

    /// <summary>Field number for the "master_poisoner" field.</summary>
    public const int MasterPoisonerFieldNumber = 9;
    private bool masterPoisoner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MasterPoisoner {
      get { return masterPoisoner_; }
      set {
        masterPoisoner_ = value;
      }
    }

    /// <summary>Field number for the "totem_of_wrath" field.</summary>
    public const int TotemOfWrathFieldNumber = 10;
    private bool totemOfWrath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TotemOfWrath {
      get { return totemOfWrath_; }
      set {
        totemOfWrath_ = value;
      }
    }

    /// <summary>Field number for the "shadow_mastery" field.</summary>
    public const int ShadowMasteryFieldNumber = 11;
    private bool shadowMastery_;
    /// <summary>
    /// 5% spell crit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShadowMastery {
      get { return shadowMastery_; }
      set {
        shadowMastery_ = value;
      }
    }

    /// <summary>Field number for the "improved_scorch" field.</summary>
    public const int ImprovedScorchFieldNumber = 12;
    private bool improvedScorch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ImprovedScorch {
      get { return improvedScorch_; }
      set {
        improvedScorch_ = value;
      }
    }

    /// <summary>Field number for the "winters_chill" field.</summary>
    public const int WintersChillFieldNumber = 13;
    private bool wintersChill_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WintersChill {
      get { return wintersChill_; }
      set {
        wintersChill_ = value;
      }
    }

    /// <summary>Field number for the "blood_frenzy" field.</summary>
    public const int BloodFrenzyFieldNumber = 14;
    private bool bloodFrenzy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BloodFrenzy {
      get { return bloodFrenzy_; }
      set {
        bloodFrenzy_ = value;
      }
    }

    /// <summary>Field number for the "savage_combat" field.</summary>
    public const int SavageCombatFieldNumber = 15;
    private bool savageCombat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SavageCombat {
      get { return savageCombat_; }
      set {
        savageCombat_ = value;
      }
    }

    /// <summary>Field number for the "gift_of_arthas" field.</summary>
    public const int GiftOfArthasFieldNumber = 16;
    private bool giftOfArthas_;
    /// <summary>
    /// TODO: validate these
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GiftOfArthas {
      get { return giftOfArthas_; }
      set {
        giftOfArthas_ = value;
      }
    }

    /// <summary>Field number for the "mangle" field.</summary>
    public const int MangleFieldNumber = 17;
    private bool mangle_;
    /// <summary>
    /// Bleed %
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Mangle {
      get { return mangle_; }
      set {
        mangle_ = value;
      }
    }

    /// <summary>Field number for the "trauma" field.</summary>
    public const int TraumaFieldNumber = 18;
    private bool trauma_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Trauma {
      get { return trauma_; }
      set {
        trauma_ = value;
      }
    }

    /// <summary>Field number for the "stampede" field.</summary>
    public const int StampedeFieldNumber = 19;
    private bool stampede_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Stampede {
      get { return stampede_; }
      set {
        stampede_ = value;
      }
    }

    /// <summary>Field number for the "expose_armor" field.</summary>
    public const int ExposeArmorFieldNumber = 20;
    private bool exposeArmor_;
    /// <summary>
    /// Major armor
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ExposeArmor {
      get { return exposeArmor_; }
      set {
        exposeArmor_ = value;
      }
    }

    /// <summary>Field number for the "sunder_armor" field.</summary>
    public const int SunderArmorFieldNumber = 21;
    private bool sunderArmor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SunderArmor {
      get { return sunderArmor_; }
      set {
        sunderArmor_ = value;
      }
    }

    /// <summary>Field number for the "acid_spit" field.</summary>
    public const int AcidSpitFieldNumber = 22;
    private bool acidSpit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AcidSpit {
      get { return acidSpit_; }
      set {
        acidSpit_ = value;
      }
    }

    /// <summary>Field number for the "curse_of_weakness" field.</summary>
    public const int CurseOfWeaknessFieldNumber = 23;
    private global::SirusDbScrapper.UIDatabase.TristateEffect curseOfWeakness_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect CurseOfWeakness {
      get { return curseOfWeakness_; }
      set {
        curseOfWeakness_ = value;
      }
    }

    /// <summary>Field number for the "sting" field.</summary>
    public const int StingFieldNumber = 24;
    private bool sting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Sting {
      get { return sting_; }
      set {
        sting_ = value;
      }
    }

    /// <summary>Field number for the "spore_cloud" field.</summary>
    public const int SporeCloudFieldNumber = 37;
    private bool sporeCloud_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SporeCloud {
      get { return sporeCloud_; }
      set {
        sporeCloud_ = value;
      }
    }

    /// <summary>Field number for the "demoralizing_roar" field.</summary>
    public const int DemoralizingRoarFieldNumber = 25;
    private global::SirusDbScrapper.UIDatabase.TristateEffect demoralizingRoar_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect DemoralizingRoar {
      get { return demoralizingRoar_; }
      set {
        demoralizingRoar_ = value;
      }
    }

    /// <summary>Field number for the "demoralizing_shout" field.</summary>
    public const int DemoralizingShoutFieldNumber = 26;
    private global::SirusDbScrapper.UIDatabase.TristateEffect demoralizingShout_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect DemoralizingShout {
      get { return demoralizingShout_; }
      set {
        demoralizingShout_ = value;
      }
    }

    /// <summary>Field number for the "vindication" field.</summary>
    public const int VindicationFieldNumber = 36;
    private bool vindication_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Vindication {
      get { return vindication_; }
      set {
        vindication_ = value;
      }
    }

    /// <summary>Field number for the "demoralizing_screech" field.</summary>
    public const int DemoralizingScreechFieldNumber = 34;
    private bool demoralizingScreech_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DemoralizingScreech {
      get { return demoralizingScreech_; }
      set {
        demoralizingScreech_ = value;
      }
    }

    /// <summary>Field number for the "thunder_clap" field.</summary>
    public const int ThunderClapFieldNumber = 27;
    private global::SirusDbScrapper.UIDatabase.TristateEffect thunderClap_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect ThunderClap {
      get { return thunderClap_; }
      set {
        thunderClap_ = value;
      }
    }

    /// <summary>Field number for the "frost_fever" field.</summary>
    public const int FrostFeverFieldNumber = 28;
    private global::SirusDbScrapper.UIDatabase.TristateEffect frostFever_ = global::SirusDbScrapper.UIDatabase.TristateEffect.Missing;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.TristateEffect FrostFever {
      get { return frostFever_; }
      set {
        frostFever_ = value;
      }
    }

    /// <summary>Field number for the "infected_wounds" field.</summary>
    public const int InfectedWoundsFieldNumber = 29;
    private bool infectedWounds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InfectedWounds {
      get { return infectedWounds_; }
      set {
        infectedWounds_ = value;
      }
    }

    /// <summary>Field number for the "judgements_of_the_just" field.</summary>
    public const int JudgementsOfTheJustFieldNumber = 30;
    private bool judgementsOfTheJust_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool JudgementsOfTheJust {
      get { return judgementsOfTheJust_; }
      set {
        judgementsOfTheJust_ = value;
      }
    }

    /// <summary>Field number for the "insect_swarm" field.</summary>
    public const int InsectSwarmFieldNumber = 31;
    private bool insectSwarm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InsectSwarm {
      get { return insectSwarm_; }
      set {
        insectSwarm_ = value;
      }
    }

    /// <summary>Field number for the "scorpid_sting" field.</summary>
    public const int ScorpidStingFieldNumber = 32;
    private bool scorpidSting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ScorpidSting {
      get { return scorpidSting_; }
      set {
        scorpidSting_ = value;
      }
    }

    /// <summary>Field number for the "shadow_embrace" field.</summary>
    public const int ShadowEmbraceFieldNumber = 33;
    private bool shadowEmbrace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShadowEmbrace {
      get { return shadowEmbrace_; }
      set {
        shadowEmbrace_ = value;
      }
    }

    /// <summary>Field number for the "hunters_mark" field.</summary>
    public const int HuntersMarkFieldNumber = 35;
    private int huntersMark_;
    /// <summary>
    /// 1 = normal, 2 = talented, 3 = talented+glyphed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HuntersMark {
      get { return huntersMark_; }
      set {
        huntersMark_ = value;
      }
    }

    /// <summary>Field number for the "crystal_yield" field.</summary>
    public const int CrystalYieldFieldNumber = 38;
    private bool crystalYield_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CrystalYield {
      get { return crystalYield_; }
      set {
        crystalYield_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Debuffs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Debuffs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JudgementOfWisdom != other.JudgementOfWisdom) return false;
      if (JudgementOfLight != other.JudgementOfLight) return false;
      if (Misery != other.Misery) return false;
      if (FaerieFire != other.FaerieFire) return false;
      if (CurseOfElements != other.CurseOfElements) return false;
      if (EbonPlaguebringer != other.EbonPlaguebringer) return false;
      if (EarthAndMoon != other.EarthAndMoon) return false;
      if (HeartOfTheCrusader != other.HeartOfTheCrusader) return false;
      if (MasterPoisoner != other.MasterPoisoner) return false;
      if (TotemOfWrath != other.TotemOfWrath) return false;
      if (ShadowMastery != other.ShadowMastery) return false;
      if (ImprovedScorch != other.ImprovedScorch) return false;
      if (WintersChill != other.WintersChill) return false;
      if (BloodFrenzy != other.BloodFrenzy) return false;
      if (SavageCombat != other.SavageCombat) return false;
      if (GiftOfArthas != other.GiftOfArthas) return false;
      if (Mangle != other.Mangle) return false;
      if (Trauma != other.Trauma) return false;
      if (Stampede != other.Stampede) return false;
      if (ExposeArmor != other.ExposeArmor) return false;
      if (SunderArmor != other.SunderArmor) return false;
      if (AcidSpit != other.AcidSpit) return false;
      if (CurseOfWeakness != other.CurseOfWeakness) return false;
      if (Sting != other.Sting) return false;
      if (SporeCloud != other.SporeCloud) return false;
      if (DemoralizingRoar != other.DemoralizingRoar) return false;
      if (DemoralizingShout != other.DemoralizingShout) return false;
      if (Vindication != other.Vindication) return false;
      if (DemoralizingScreech != other.DemoralizingScreech) return false;
      if (ThunderClap != other.ThunderClap) return false;
      if (FrostFever != other.FrostFever) return false;
      if (InfectedWounds != other.InfectedWounds) return false;
      if (JudgementsOfTheJust != other.JudgementsOfTheJust) return false;
      if (InsectSwarm != other.InsectSwarm) return false;
      if (ScorpidSting != other.ScorpidSting) return false;
      if (ShadowEmbrace != other.ShadowEmbrace) return false;
      if (HuntersMark != other.HuntersMark) return false;
      if (CrystalYield != other.CrystalYield) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (JudgementOfWisdom != false) hash ^= JudgementOfWisdom.GetHashCode();
      if (JudgementOfLight != false) hash ^= JudgementOfLight.GetHashCode();
      if (Misery != false) hash ^= Misery.GetHashCode();
      if (FaerieFire != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= FaerieFire.GetHashCode();
      if (CurseOfElements != false) hash ^= CurseOfElements.GetHashCode();
      if (EbonPlaguebringer != false) hash ^= EbonPlaguebringer.GetHashCode();
      if (EarthAndMoon != false) hash ^= EarthAndMoon.GetHashCode();
      if (HeartOfTheCrusader != false) hash ^= HeartOfTheCrusader.GetHashCode();
      if (MasterPoisoner != false) hash ^= MasterPoisoner.GetHashCode();
      if (TotemOfWrath != false) hash ^= TotemOfWrath.GetHashCode();
      if (ShadowMastery != false) hash ^= ShadowMastery.GetHashCode();
      if (ImprovedScorch != false) hash ^= ImprovedScorch.GetHashCode();
      if (WintersChill != false) hash ^= WintersChill.GetHashCode();
      if (BloodFrenzy != false) hash ^= BloodFrenzy.GetHashCode();
      if (SavageCombat != false) hash ^= SavageCombat.GetHashCode();
      if (GiftOfArthas != false) hash ^= GiftOfArthas.GetHashCode();
      if (Mangle != false) hash ^= Mangle.GetHashCode();
      if (Trauma != false) hash ^= Trauma.GetHashCode();
      if (Stampede != false) hash ^= Stampede.GetHashCode();
      if (ExposeArmor != false) hash ^= ExposeArmor.GetHashCode();
      if (SunderArmor != false) hash ^= SunderArmor.GetHashCode();
      if (AcidSpit != false) hash ^= AcidSpit.GetHashCode();
      if (CurseOfWeakness != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= CurseOfWeakness.GetHashCode();
      if (Sting != false) hash ^= Sting.GetHashCode();
      if (SporeCloud != false) hash ^= SporeCloud.GetHashCode();
      if (DemoralizingRoar != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= DemoralizingRoar.GetHashCode();
      if (DemoralizingShout != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= DemoralizingShout.GetHashCode();
      if (Vindication != false) hash ^= Vindication.GetHashCode();
      if (DemoralizingScreech != false) hash ^= DemoralizingScreech.GetHashCode();
      if (ThunderClap != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= ThunderClap.GetHashCode();
      if (FrostFever != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) hash ^= FrostFever.GetHashCode();
      if (InfectedWounds != false) hash ^= InfectedWounds.GetHashCode();
      if (JudgementsOfTheJust != false) hash ^= JudgementsOfTheJust.GetHashCode();
      if (InsectSwarm != false) hash ^= InsectSwarm.GetHashCode();
      if (ScorpidSting != false) hash ^= ScorpidSting.GetHashCode();
      if (ShadowEmbrace != false) hash ^= ShadowEmbrace.GetHashCode();
      if (HuntersMark != 0) hash ^= HuntersMark.GetHashCode();
      if (CrystalYield != false) hash ^= CrystalYield.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (JudgementOfWisdom != false) {
        output.WriteRawTag(8);
        output.WriteBool(JudgementOfWisdom);
      }
      if (JudgementOfLight != false) {
        output.WriteRawTag(16);
        output.WriteBool(JudgementOfLight);
      }
      if (Misery != false) {
        output.WriteRawTag(24);
        output.WriteBool(Misery);
      }
      if (FaerieFire != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(32);
        output.WriteEnum((int) FaerieFire);
      }
      if (CurseOfElements != false) {
        output.WriteRawTag(40);
        output.WriteBool(CurseOfElements);
      }
      if (EbonPlaguebringer != false) {
        output.WriteRawTag(48);
        output.WriteBool(EbonPlaguebringer);
      }
      if (EarthAndMoon != false) {
        output.WriteRawTag(56);
        output.WriteBool(EarthAndMoon);
      }
      if (HeartOfTheCrusader != false) {
        output.WriteRawTag(64);
        output.WriteBool(HeartOfTheCrusader);
      }
      if (MasterPoisoner != false) {
        output.WriteRawTag(72);
        output.WriteBool(MasterPoisoner);
      }
      if (TotemOfWrath != false) {
        output.WriteRawTag(80);
        output.WriteBool(TotemOfWrath);
      }
      if (ShadowMastery != false) {
        output.WriteRawTag(88);
        output.WriteBool(ShadowMastery);
      }
      if (ImprovedScorch != false) {
        output.WriteRawTag(96);
        output.WriteBool(ImprovedScorch);
      }
      if (WintersChill != false) {
        output.WriteRawTag(104);
        output.WriteBool(WintersChill);
      }
      if (BloodFrenzy != false) {
        output.WriteRawTag(112);
        output.WriteBool(BloodFrenzy);
      }
      if (SavageCombat != false) {
        output.WriteRawTag(120);
        output.WriteBool(SavageCombat);
      }
      if (GiftOfArthas != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(GiftOfArthas);
      }
      if (Mangle != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(Mangle);
      }
      if (Trauma != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(Trauma);
      }
      if (Stampede != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(Stampede);
      }
      if (ExposeArmor != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(ExposeArmor);
      }
      if (SunderArmor != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(SunderArmor);
      }
      if (AcidSpit != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(AcidSpit);
      }
      if (CurseOfWeakness != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) CurseOfWeakness);
      }
      if (Sting != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(Sting);
      }
      if (DemoralizingRoar != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) DemoralizingRoar);
      }
      if (DemoralizingShout != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) DemoralizingShout);
      }
      if (ThunderClap != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) ThunderClap);
      }
      if (FrostFever != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) FrostFever);
      }
      if (InfectedWounds != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(InfectedWounds);
      }
      if (JudgementsOfTheJust != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(JudgementsOfTheJust);
      }
      if (InsectSwarm != false) {
        output.WriteRawTag(248, 1);
        output.WriteBool(InsectSwarm);
      }
      if (ScorpidSting != false) {
        output.WriteRawTag(128, 2);
        output.WriteBool(ScorpidSting);
      }
      if (ShadowEmbrace != false) {
        output.WriteRawTag(136, 2);
        output.WriteBool(ShadowEmbrace);
      }
      if (DemoralizingScreech != false) {
        output.WriteRawTag(144, 2);
        output.WriteBool(DemoralizingScreech);
      }
      if (HuntersMark != 0) {
        output.WriteRawTag(152, 2);
        output.WriteInt32(HuntersMark);
      }
      if (Vindication != false) {
        output.WriteRawTag(160, 2);
        output.WriteBool(Vindication);
      }
      if (SporeCloud != false) {
        output.WriteRawTag(168, 2);
        output.WriteBool(SporeCloud);
      }
      if (CrystalYield != false) {
        output.WriteRawTag(176, 2);
        output.WriteBool(CrystalYield);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (JudgementOfWisdom != false) {
        output.WriteRawTag(8);
        output.WriteBool(JudgementOfWisdom);
      }
      if (JudgementOfLight != false) {
        output.WriteRawTag(16);
        output.WriteBool(JudgementOfLight);
      }
      if (Misery != false) {
        output.WriteRawTag(24);
        output.WriteBool(Misery);
      }
      if (FaerieFire != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(32);
        output.WriteEnum((int) FaerieFire);
      }
      if (CurseOfElements != false) {
        output.WriteRawTag(40);
        output.WriteBool(CurseOfElements);
      }
      if (EbonPlaguebringer != false) {
        output.WriteRawTag(48);
        output.WriteBool(EbonPlaguebringer);
      }
      if (EarthAndMoon != false) {
        output.WriteRawTag(56);
        output.WriteBool(EarthAndMoon);
      }
      if (HeartOfTheCrusader != false) {
        output.WriteRawTag(64);
        output.WriteBool(HeartOfTheCrusader);
      }
      if (MasterPoisoner != false) {
        output.WriteRawTag(72);
        output.WriteBool(MasterPoisoner);
      }
      if (TotemOfWrath != false) {
        output.WriteRawTag(80);
        output.WriteBool(TotemOfWrath);
      }
      if (ShadowMastery != false) {
        output.WriteRawTag(88);
        output.WriteBool(ShadowMastery);
      }
      if (ImprovedScorch != false) {
        output.WriteRawTag(96);
        output.WriteBool(ImprovedScorch);
      }
      if (WintersChill != false) {
        output.WriteRawTag(104);
        output.WriteBool(WintersChill);
      }
      if (BloodFrenzy != false) {
        output.WriteRawTag(112);
        output.WriteBool(BloodFrenzy);
      }
      if (SavageCombat != false) {
        output.WriteRawTag(120);
        output.WriteBool(SavageCombat);
      }
      if (GiftOfArthas != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(GiftOfArthas);
      }
      if (Mangle != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(Mangle);
      }
      if (Trauma != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(Trauma);
      }
      if (Stampede != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(Stampede);
      }
      if (ExposeArmor != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(ExposeArmor);
      }
      if (SunderArmor != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(SunderArmor);
      }
      if (AcidSpit != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(AcidSpit);
      }
      if (CurseOfWeakness != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) CurseOfWeakness);
      }
      if (Sting != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(Sting);
      }
      if (DemoralizingRoar != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) DemoralizingRoar);
      }
      if (DemoralizingShout != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) DemoralizingShout);
      }
      if (ThunderClap != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) ThunderClap);
      }
      if (FrostFever != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) FrostFever);
      }
      if (InfectedWounds != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(InfectedWounds);
      }
      if (JudgementsOfTheJust != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(JudgementsOfTheJust);
      }
      if (InsectSwarm != false) {
        output.WriteRawTag(248, 1);
        output.WriteBool(InsectSwarm);
      }
      if (ScorpidSting != false) {
        output.WriteRawTag(128, 2);
        output.WriteBool(ScorpidSting);
      }
      if (ShadowEmbrace != false) {
        output.WriteRawTag(136, 2);
        output.WriteBool(ShadowEmbrace);
      }
      if (DemoralizingScreech != false) {
        output.WriteRawTag(144, 2);
        output.WriteBool(DemoralizingScreech);
      }
      if (HuntersMark != 0) {
        output.WriteRawTag(152, 2);
        output.WriteInt32(HuntersMark);
      }
      if (Vindication != false) {
        output.WriteRawTag(160, 2);
        output.WriteBool(Vindication);
      }
      if (SporeCloud != false) {
        output.WriteRawTag(168, 2);
        output.WriteBool(SporeCloud);
      }
      if (CrystalYield != false) {
        output.WriteRawTag(176, 2);
        output.WriteBool(CrystalYield);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (JudgementOfWisdom != false) {
        size += 1 + 1;
      }
      if (JudgementOfLight != false) {
        size += 1 + 1;
      }
      if (Misery != false) {
        size += 1 + 1;
      }
      if (FaerieFire != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FaerieFire);
      }
      if (CurseOfElements != false) {
        size += 1 + 1;
      }
      if (EbonPlaguebringer != false) {
        size += 1 + 1;
      }
      if (EarthAndMoon != false) {
        size += 1 + 1;
      }
      if (HeartOfTheCrusader != false) {
        size += 1 + 1;
      }
      if (MasterPoisoner != false) {
        size += 1 + 1;
      }
      if (TotemOfWrath != false) {
        size += 1 + 1;
      }
      if (ShadowMastery != false) {
        size += 1 + 1;
      }
      if (ImprovedScorch != false) {
        size += 1 + 1;
      }
      if (WintersChill != false) {
        size += 1 + 1;
      }
      if (BloodFrenzy != false) {
        size += 1 + 1;
      }
      if (SavageCombat != false) {
        size += 1 + 1;
      }
      if (GiftOfArthas != false) {
        size += 2 + 1;
      }
      if (Mangle != false) {
        size += 2 + 1;
      }
      if (Trauma != false) {
        size += 2 + 1;
      }
      if (Stampede != false) {
        size += 2 + 1;
      }
      if (ExposeArmor != false) {
        size += 2 + 1;
      }
      if (SunderArmor != false) {
        size += 2 + 1;
      }
      if (AcidSpit != false) {
        size += 2 + 1;
      }
      if (CurseOfWeakness != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CurseOfWeakness);
      }
      if (Sting != false) {
        size += 2 + 1;
      }
      if (SporeCloud != false) {
        size += 2 + 1;
      }
      if (DemoralizingRoar != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) DemoralizingRoar);
      }
      if (DemoralizingShout != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) DemoralizingShout);
      }
      if (Vindication != false) {
        size += 2 + 1;
      }
      if (DemoralizingScreech != false) {
        size += 2 + 1;
      }
      if (ThunderClap != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ThunderClap);
      }
      if (FrostFever != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FrostFever);
      }
      if (InfectedWounds != false) {
        size += 2 + 1;
      }
      if (JudgementsOfTheJust != false) {
        size += 2 + 1;
      }
      if (InsectSwarm != false) {
        size += 2 + 1;
      }
      if (ScorpidSting != false) {
        size += 2 + 1;
      }
      if (ShadowEmbrace != false) {
        size += 2 + 1;
      }
      if (HuntersMark != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HuntersMark);
      }
      if (CrystalYield != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Debuffs other) {
      if (other == null) {
        return;
      }
      if (other.JudgementOfWisdom != false) {
        JudgementOfWisdom = other.JudgementOfWisdom;
      }
      if (other.JudgementOfLight != false) {
        JudgementOfLight = other.JudgementOfLight;
      }
      if (other.Misery != false) {
        Misery = other.Misery;
      }
      if (other.FaerieFire != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        FaerieFire = other.FaerieFire;
      }
      if (other.CurseOfElements != false) {
        CurseOfElements = other.CurseOfElements;
      }
      if (other.EbonPlaguebringer != false) {
        EbonPlaguebringer = other.EbonPlaguebringer;
      }
      if (other.EarthAndMoon != false) {
        EarthAndMoon = other.EarthAndMoon;
      }
      if (other.HeartOfTheCrusader != false) {
        HeartOfTheCrusader = other.HeartOfTheCrusader;
      }
      if (other.MasterPoisoner != false) {
        MasterPoisoner = other.MasterPoisoner;
      }
      if (other.TotemOfWrath != false) {
        TotemOfWrath = other.TotemOfWrath;
      }
      if (other.ShadowMastery != false) {
        ShadowMastery = other.ShadowMastery;
      }
      if (other.ImprovedScorch != false) {
        ImprovedScorch = other.ImprovedScorch;
      }
      if (other.WintersChill != false) {
        WintersChill = other.WintersChill;
      }
      if (other.BloodFrenzy != false) {
        BloodFrenzy = other.BloodFrenzy;
      }
      if (other.SavageCombat != false) {
        SavageCombat = other.SavageCombat;
      }
      if (other.GiftOfArthas != false) {
        GiftOfArthas = other.GiftOfArthas;
      }
      if (other.Mangle != false) {
        Mangle = other.Mangle;
      }
      if (other.Trauma != false) {
        Trauma = other.Trauma;
      }
      if (other.Stampede != false) {
        Stampede = other.Stampede;
      }
      if (other.ExposeArmor != false) {
        ExposeArmor = other.ExposeArmor;
      }
      if (other.SunderArmor != false) {
        SunderArmor = other.SunderArmor;
      }
      if (other.AcidSpit != false) {
        AcidSpit = other.AcidSpit;
      }
      if (other.CurseOfWeakness != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        CurseOfWeakness = other.CurseOfWeakness;
      }
      if (other.Sting != false) {
        Sting = other.Sting;
      }
      if (other.SporeCloud != false) {
        SporeCloud = other.SporeCloud;
      }
      if (other.DemoralizingRoar != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        DemoralizingRoar = other.DemoralizingRoar;
      }
      if (other.DemoralizingShout != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        DemoralizingShout = other.DemoralizingShout;
      }
      if (other.Vindication != false) {
        Vindication = other.Vindication;
      }
      if (other.DemoralizingScreech != false) {
        DemoralizingScreech = other.DemoralizingScreech;
      }
      if (other.ThunderClap != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        ThunderClap = other.ThunderClap;
      }
      if (other.FrostFever != global::SirusDbScrapper.UIDatabase.TristateEffect.Missing) {
        FrostFever = other.FrostFever;
      }
      if (other.InfectedWounds != false) {
        InfectedWounds = other.InfectedWounds;
      }
      if (other.JudgementsOfTheJust != false) {
        JudgementsOfTheJust = other.JudgementsOfTheJust;
      }
      if (other.InsectSwarm != false) {
        InsectSwarm = other.InsectSwarm;
      }
      if (other.ScorpidSting != false) {
        ScorpidSting = other.ScorpidSting;
      }
      if (other.ShadowEmbrace != false) {
        ShadowEmbrace = other.ShadowEmbrace;
      }
      if (other.HuntersMark != 0) {
        HuntersMark = other.HuntersMark;
      }
      if (other.CrystalYield != false) {
        CrystalYield = other.CrystalYield;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            JudgementOfWisdom = input.ReadBool();
            break;
          }
          case 16: {
            JudgementOfLight = input.ReadBool();
            break;
          }
          case 24: {
            Misery = input.ReadBool();
            break;
          }
          case 32: {
            FaerieFire = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 40: {
            CurseOfElements = input.ReadBool();
            break;
          }
          case 48: {
            EbonPlaguebringer = input.ReadBool();
            break;
          }
          case 56: {
            EarthAndMoon = input.ReadBool();
            break;
          }
          case 64: {
            HeartOfTheCrusader = input.ReadBool();
            break;
          }
          case 72: {
            MasterPoisoner = input.ReadBool();
            break;
          }
          case 80: {
            TotemOfWrath = input.ReadBool();
            break;
          }
          case 88: {
            ShadowMastery = input.ReadBool();
            break;
          }
          case 96: {
            ImprovedScorch = input.ReadBool();
            break;
          }
          case 104: {
            WintersChill = input.ReadBool();
            break;
          }
          case 112: {
            BloodFrenzy = input.ReadBool();
            break;
          }
          case 120: {
            SavageCombat = input.ReadBool();
            break;
          }
          case 128: {
            GiftOfArthas = input.ReadBool();
            break;
          }
          case 136: {
            Mangle = input.ReadBool();
            break;
          }
          case 144: {
            Trauma = input.ReadBool();
            break;
          }
          case 152: {
            Stampede = input.ReadBool();
            break;
          }
          case 160: {
            ExposeArmor = input.ReadBool();
            break;
          }
          case 168: {
            SunderArmor = input.ReadBool();
            break;
          }
          case 176: {
            AcidSpit = input.ReadBool();
            break;
          }
          case 184: {
            CurseOfWeakness = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 192: {
            Sting = input.ReadBool();
            break;
          }
          case 200: {
            DemoralizingRoar = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 208: {
            DemoralizingShout = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 216: {
            ThunderClap = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 224: {
            FrostFever = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 232: {
            InfectedWounds = input.ReadBool();
            break;
          }
          case 240: {
            JudgementsOfTheJust = input.ReadBool();
            break;
          }
          case 248: {
            InsectSwarm = input.ReadBool();
            break;
          }
          case 256: {
            ScorpidSting = input.ReadBool();
            break;
          }
          case 264: {
            ShadowEmbrace = input.ReadBool();
            break;
          }
          case 272: {
            DemoralizingScreech = input.ReadBool();
            break;
          }
          case 280: {
            HuntersMark = input.ReadInt32();
            break;
          }
          case 288: {
            Vindication = input.ReadBool();
            break;
          }
          case 296: {
            SporeCloud = input.ReadBool();
            break;
          }
          case 304: {
            CrystalYield = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            JudgementOfWisdom = input.ReadBool();
            break;
          }
          case 16: {
            JudgementOfLight = input.ReadBool();
            break;
          }
          case 24: {
            Misery = input.ReadBool();
            break;
          }
          case 32: {
            FaerieFire = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 40: {
            CurseOfElements = input.ReadBool();
            break;
          }
          case 48: {
            EbonPlaguebringer = input.ReadBool();
            break;
          }
          case 56: {
            EarthAndMoon = input.ReadBool();
            break;
          }
          case 64: {
            HeartOfTheCrusader = input.ReadBool();
            break;
          }
          case 72: {
            MasterPoisoner = input.ReadBool();
            break;
          }
          case 80: {
            TotemOfWrath = input.ReadBool();
            break;
          }
          case 88: {
            ShadowMastery = input.ReadBool();
            break;
          }
          case 96: {
            ImprovedScorch = input.ReadBool();
            break;
          }
          case 104: {
            WintersChill = input.ReadBool();
            break;
          }
          case 112: {
            BloodFrenzy = input.ReadBool();
            break;
          }
          case 120: {
            SavageCombat = input.ReadBool();
            break;
          }
          case 128: {
            GiftOfArthas = input.ReadBool();
            break;
          }
          case 136: {
            Mangle = input.ReadBool();
            break;
          }
          case 144: {
            Trauma = input.ReadBool();
            break;
          }
          case 152: {
            Stampede = input.ReadBool();
            break;
          }
          case 160: {
            ExposeArmor = input.ReadBool();
            break;
          }
          case 168: {
            SunderArmor = input.ReadBool();
            break;
          }
          case 176: {
            AcidSpit = input.ReadBool();
            break;
          }
          case 184: {
            CurseOfWeakness = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 192: {
            Sting = input.ReadBool();
            break;
          }
          case 200: {
            DemoralizingRoar = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 208: {
            DemoralizingShout = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 216: {
            ThunderClap = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 224: {
            FrostFever = (global::SirusDbScrapper.UIDatabase.TristateEffect) input.ReadEnum();
            break;
          }
          case 232: {
            InfectedWounds = input.ReadBool();
            break;
          }
          case 240: {
            JudgementsOfTheJust = input.ReadBool();
            break;
          }
          case 248: {
            InsectSwarm = input.ReadBool();
            break;
          }
          case 256: {
            ScorpidSting = input.ReadBool();
            break;
          }
          case 264: {
            ShadowEmbrace = input.ReadBool();
            break;
          }
          case 272: {
            DemoralizingScreech = input.ReadBool();
            break;
          }
          case 280: {
            HuntersMark = input.ReadInt32();
            break;
          }
          case 288: {
            Vindication = input.ReadBool();
            break;
          }
          case 296: {
            SporeCloud = input.ReadBool();
            break;
          }
          case 304: {
            CrystalYield = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TargetInput : pb::IMessage<TargetInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TargetInput> _parser = new pb::MessageParser<TargetInput>(() => new TargetInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TargetInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetInput(TargetInput other) : this() {
      inputType_ = other.inputType_;
      label_ = other.label_;
      tooltip_ = other.tooltip_;
      boolValue_ = other.boolValue_;
      numberValue_ = other.numberValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetInput Clone() {
      return new TargetInput(this);
    }

    /// <summary>Field number for the "input_type" field.</summary>
    public const int InputTypeFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.InputType inputType_ = global::SirusDbScrapper.UIDatabase.InputType.Bool;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.InputType InputType {
      get { return inputType_; }
      set {
        inputType_ = value;
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 2;
    private string label_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tooltip" field.</summary>
    public const int TooltipFieldNumber = 5;
    private string tooltip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tooltip {
      get { return tooltip_; }
      set {
        tooltip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bool_value" field.</summary>
    public const int BoolValueFieldNumber = 3;
    private bool boolValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BoolValue {
      get { return boolValue_; }
      set {
        boolValue_ = value;
      }
    }

    /// <summary>Field number for the "number_value" field.</summary>
    public const int NumberValueFieldNumber = 4;
    private double numberValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double NumberValue {
      get { return numberValue_; }
      set {
        numberValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TargetInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TargetInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputType != other.InputType) return false;
      if (Label != other.Label) return false;
      if (Tooltip != other.Tooltip) return false;
      if (BoolValue != other.BoolValue) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NumberValue, other.NumberValue)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (InputType != global::SirusDbScrapper.UIDatabase.InputType.Bool) hash ^= InputType.GetHashCode();
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (Tooltip.Length != 0) hash ^= Tooltip.GetHashCode();
      if (BoolValue != false) hash ^= BoolValue.GetHashCode();
      if (NumberValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NumberValue);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InputType != global::SirusDbScrapper.UIDatabase.InputType.Bool) {
        output.WriteRawTag(8);
        output.WriteEnum((int) InputType);
      }
      if (Label.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Label);
      }
      if (BoolValue != false) {
        output.WriteRawTag(24);
        output.WriteBool(BoolValue);
      }
      if (NumberValue != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(NumberValue);
      }
      if (Tooltip.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Tooltip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InputType != global::SirusDbScrapper.UIDatabase.InputType.Bool) {
        output.WriteRawTag(8);
        output.WriteEnum((int) InputType);
      }
      if (Label.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Label);
      }
      if (BoolValue != false) {
        output.WriteRawTag(24);
        output.WriteBool(BoolValue);
      }
      if (NumberValue != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(NumberValue);
      }
      if (Tooltip.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Tooltip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (InputType != global::SirusDbScrapper.UIDatabase.InputType.Bool) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InputType);
      }
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (Tooltip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tooltip);
      }
      if (BoolValue != false) {
        size += 1 + 1;
      }
      if (NumberValue != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TargetInput other) {
      if (other == null) {
        return;
      }
      if (other.InputType != global::SirusDbScrapper.UIDatabase.InputType.Bool) {
        InputType = other.InputType;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      if (other.Tooltip.Length != 0) {
        Tooltip = other.Tooltip;
      }
      if (other.BoolValue != false) {
        BoolValue = other.BoolValue;
      }
      if (other.NumberValue != 0D) {
        NumberValue = other.NumberValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputType = (global::SirusDbScrapper.UIDatabase.InputType) input.ReadEnum();
            break;
          }
          case 18: {
            Label = input.ReadString();
            break;
          }
          case 24: {
            BoolValue = input.ReadBool();
            break;
          }
          case 33: {
            NumberValue = input.ReadDouble();
            break;
          }
          case 42: {
            Tooltip = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InputType = (global::SirusDbScrapper.UIDatabase.InputType) input.ReadEnum();
            break;
          }
          case 18: {
            Label = input.ReadString();
            break;
          }
          case 24: {
            BoolValue = input.ReadBool();
            break;
          }
          case 33: {
            NumberValue = input.ReadDouble();
            break;
          }
          case 42: {
            Tooltip = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Target : pb::IMessage<Target>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Target> _parser = new pb::MessageParser<Target>(() => new Target());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Target> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Target() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Target(Target other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      level_ = other.level_;
      mobType_ = other.mobType_;
      stats_ = other.stats_.Clone();
      minBaseDamage_ = other.minBaseDamage_;
      damageSpread_ = other.damageSpread_;
      swingSpeed_ = other.swingSpeed_;
      dualWield_ = other.dualWield_;
      dualWieldPenalty_ = other.dualWieldPenalty_;
      parryHaste_ = other.parryHaste_;
      suppressDodge_ = other.suppressDodge_;
      spellSchool_ = other.spellSchool_;
      tankIndex_ = other.tankIndex_;
      targetInputs_ = other.targetInputs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Target Clone() {
      return new Target(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 14;
    private int id_;
    /// <summary>
    /// The in-game NPC ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 15;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 4;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "mob_type" field.</summary>
    public const int MobTypeFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.MobType mobType_ = global::SirusDbScrapper.UIDatabase.MobType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.MobType MobType {
      get { return mobType_; }
      set {
        mobType_ = value;
      }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 5;
    private static readonly pb::FieldCodec<double> _repeated_stats_codec
        = pb::FieldCodec.ForDouble(42);
    private readonly pbc::RepeatedField<double> stats_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Stats {
      get { return stats_; }
    }

    /// <summary>Field number for the "min_base_damage" field.</summary>
    public const int MinBaseDamageFieldNumber = 7;
    private double minBaseDamage_;
    /// <summary>
    /// Auto attack parameters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MinBaseDamage {
      get { return minBaseDamage_; }
      set {
        minBaseDamage_ = value;
      }
    }

    /// <summary>Field number for the "damage_spread" field.</summary>
    public const int DamageSpreadFieldNumber = 19;
    private double damageSpread_;
    /// <summary>
    /// replaces tight_enemy_damage
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DamageSpread {
      get { return damageSpread_; }
      set {
        damageSpread_ = value;
      }
    }

    /// <summary>Field number for the "swing_speed" field.</summary>
    public const int SwingSpeedFieldNumber = 8;
    private double swingSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SwingSpeed {
      get { return swingSpeed_; }
      set {
        swingSpeed_ = value;
      }
    }

    /// <summary>Field number for the "dual_wield" field.</summary>
    public const int DualWieldFieldNumber = 9;
    private bool dualWield_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DualWield {
      get { return dualWield_; }
      set {
        dualWield_ = value;
      }
    }

    /// <summary>Field number for the "dual_wield_penalty" field.</summary>
    public const int DualWieldPenaltyFieldNumber = 10;
    private bool dualWieldPenalty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DualWieldPenalty {
      get { return dualWieldPenalty_; }
      set {
        dualWieldPenalty_ = value;
      }
    }

    /// <summary>Field number for the "parry_haste" field.</summary>
    public const int ParryHasteFieldNumber = 12;
    private bool parryHaste_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ParryHaste {
      get { return parryHaste_; }
      set {
        parryHaste_ = value;
      }
    }

    /// <summary>Field number for the "suppress_dodge" field.</summary>
    public const int SuppressDodgeFieldNumber = 16;
    private bool suppressDodge_;
    /// <summary>
    /// Sunwell Radiance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SuppressDodge {
      get { return suppressDodge_; }
      set {
        suppressDodge_ = value;
      }
    }

    /// <summary>Field number for the "spell_school" field.</summary>
    public const int SpellSchoolFieldNumber = 13;
    private global::SirusDbScrapper.UIDatabase.SpellSchool spellSchool_ = global::SirusDbScrapper.UIDatabase.SpellSchool.Physical;
    /// <summary>
    /// Allows elemental attacks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.SpellSchool SpellSchool {
      get { return spellSchool_; }
      set {
        spellSchool_ = value;
      }
    }

    /// <summary>Field number for the "tank_index" field.</summary>
    public const int TankIndexFieldNumber = 6;
    private int tankIndex_;
    /// <summary>
    /// Index in Raid.tanks indicating the player tanking this mob.
    /// -1 or invalid index indicates not being tanked.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TankIndex {
      get { return tankIndex_; }
      set {
        tankIndex_ = value;
      }
    }

    /// <summary>Field number for the "target_inputs" field.</summary>
    public const int TargetInputsFieldNumber = 18;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.TargetInput> _repeated_targetInputs_codec
        = pb::FieldCodec.ForMessage(146, global::SirusDbScrapper.UIDatabase.TargetInput.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.TargetInput> targetInputs_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.TargetInput>();
    /// <summary>
    /// Custom Target AI parameters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.TargetInput> TargetInputs {
      get { return targetInputs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Target);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Target other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Level != other.Level) return false;
      if (MobType != other.MobType) return false;
      if(!stats_.Equals(other.stats_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinBaseDamage, other.MinBaseDamage)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DamageSpread, other.DamageSpread)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SwingSpeed, other.SwingSpeed)) return false;
      if (DualWield != other.DualWield) return false;
      if (DualWieldPenalty != other.DualWieldPenalty) return false;
      if (ParryHaste != other.ParryHaste) return false;
      if (SuppressDodge != other.SuppressDodge) return false;
      if (SpellSchool != other.SpellSchool) return false;
      if (TankIndex != other.TankIndex) return false;
      if(!targetInputs_.Equals(other.targetInputs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (MobType != global::SirusDbScrapper.UIDatabase.MobType.Unknown) hash ^= MobType.GetHashCode();
      hash ^= stats_.GetHashCode();
      if (MinBaseDamage != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinBaseDamage);
      if (DamageSpread != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DamageSpread);
      if (SwingSpeed != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SwingSpeed);
      if (DualWield != false) hash ^= DualWield.GetHashCode();
      if (DualWieldPenalty != false) hash ^= DualWieldPenalty.GetHashCode();
      if (ParryHaste != false) hash ^= ParryHaste.GetHashCode();
      if (SuppressDodge != false) hash ^= SuppressDodge.GetHashCode();
      if (SpellSchool != global::SirusDbScrapper.UIDatabase.SpellSchool.Physical) hash ^= SpellSchool.GetHashCode();
      if (TankIndex != 0) hash ^= TankIndex.GetHashCode();
      hash ^= targetInputs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MobType != global::SirusDbScrapper.UIDatabase.MobType.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MobType);
      }
      if (Level != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Level);
      }
      stats_.WriteTo(output, _repeated_stats_codec);
      if (TankIndex != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TankIndex);
      }
      if (MinBaseDamage != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(MinBaseDamage);
      }
      if (SwingSpeed != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(SwingSpeed);
      }
      if (DualWield != false) {
        output.WriteRawTag(72);
        output.WriteBool(DualWield);
      }
      if (DualWieldPenalty != false) {
        output.WriteRawTag(80);
        output.WriteBool(DualWieldPenalty);
      }
      if (ParryHaste != false) {
        output.WriteRawTag(96);
        output.WriteBool(ParryHaste);
      }
      if (SpellSchool != global::SirusDbScrapper.UIDatabase.SpellSchool.Physical) {
        output.WriteRawTag(104);
        output.WriteEnum((int) SpellSchool);
      }
      if (Id != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Name);
      }
      if (SuppressDodge != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(SuppressDodge);
      }
      targetInputs_.WriteTo(output, _repeated_targetInputs_codec);
      if (DamageSpread != 0D) {
        output.WriteRawTag(153, 1);
        output.WriteDouble(DamageSpread);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MobType != global::SirusDbScrapper.UIDatabase.MobType.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MobType);
      }
      if (Level != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Level);
      }
      stats_.WriteTo(ref output, _repeated_stats_codec);
      if (TankIndex != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TankIndex);
      }
      if (MinBaseDamage != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(MinBaseDamage);
      }
      if (SwingSpeed != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(SwingSpeed);
      }
      if (DualWield != false) {
        output.WriteRawTag(72);
        output.WriteBool(DualWield);
      }
      if (DualWieldPenalty != false) {
        output.WriteRawTag(80);
        output.WriteBool(DualWieldPenalty);
      }
      if (ParryHaste != false) {
        output.WriteRawTag(96);
        output.WriteBool(ParryHaste);
      }
      if (SpellSchool != global::SirusDbScrapper.UIDatabase.SpellSchool.Physical) {
        output.WriteRawTag(104);
        output.WriteEnum((int) SpellSchool);
      }
      if (Id != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Name);
      }
      if (SuppressDodge != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(SuppressDodge);
      }
      targetInputs_.WriteTo(ref output, _repeated_targetInputs_codec);
      if (DamageSpread != 0D) {
        output.WriteRawTag(153, 1);
        output.WriteDouble(DamageSpread);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (MobType != global::SirusDbScrapper.UIDatabase.MobType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MobType);
      }
      size += stats_.CalculateSize(_repeated_stats_codec);
      if (MinBaseDamage != 0D) {
        size += 1 + 8;
      }
      if (DamageSpread != 0D) {
        size += 2 + 8;
      }
      if (SwingSpeed != 0D) {
        size += 1 + 8;
      }
      if (DualWield != false) {
        size += 1 + 1;
      }
      if (DualWieldPenalty != false) {
        size += 1 + 1;
      }
      if (ParryHaste != false) {
        size += 1 + 1;
      }
      if (SuppressDodge != false) {
        size += 2 + 1;
      }
      if (SpellSchool != global::SirusDbScrapper.UIDatabase.SpellSchool.Physical) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SpellSchool);
      }
      if (TankIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TankIndex);
      }
      size += targetInputs_.CalculateSize(_repeated_targetInputs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Target other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.MobType != global::SirusDbScrapper.UIDatabase.MobType.Unknown) {
        MobType = other.MobType;
      }
      stats_.Add(other.stats_);
      if (other.MinBaseDamage != 0D) {
        MinBaseDamage = other.MinBaseDamage;
      }
      if (other.DamageSpread != 0D) {
        DamageSpread = other.DamageSpread;
      }
      if (other.SwingSpeed != 0D) {
        SwingSpeed = other.SwingSpeed;
      }
      if (other.DualWield != false) {
        DualWield = other.DualWield;
      }
      if (other.DualWieldPenalty != false) {
        DualWieldPenalty = other.DualWieldPenalty;
      }
      if (other.ParryHaste != false) {
        ParryHaste = other.ParryHaste;
      }
      if (other.SuppressDodge != false) {
        SuppressDodge = other.SuppressDodge;
      }
      if (other.SpellSchool != global::SirusDbScrapper.UIDatabase.SpellSchool.Physical) {
        SpellSchool = other.SpellSchool;
      }
      if (other.TankIndex != 0) {
        TankIndex = other.TankIndex;
      }
      targetInputs_.Add(other.targetInputs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            MobType = (global::SirusDbScrapper.UIDatabase.MobType) input.ReadEnum();
            break;
          }
          case 32: {
            Level = input.ReadInt32();
            break;
          }
          case 42:
          case 41: {
            stats_.AddEntriesFrom(input, _repeated_stats_codec);
            break;
          }
          case 48: {
            TankIndex = input.ReadInt32();
            break;
          }
          case 57: {
            MinBaseDamage = input.ReadDouble();
            break;
          }
          case 65: {
            SwingSpeed = input.ReadDouble();
            break;
          }
          case 72: {
            DualWield = input.ReadBool();
            break;
          }
          case 80: {
            DualWieldPenalty = input.ReadBool();
            break;
          }
          case 96: {
            ParryHaste = input.ReadBool();
            break;
          }
          case 104: {
            SpellSchool = (global::SirusDbScrapper.UIDatabase.SpellSchool) input.ReadEnum();
            break;
          }
          case 112: {
            Id = input.ReadInt32();
            break;
          }
          case 122: {
            Name = input.ReadString();
            break;
          }
          case 128: {
            SuppressDodge = input.ReadBool();
            break;
          }
          case 146: {
            targetInputs_.AddEntriesFrom(input, _repeated_targetInputs_codec);
            break;
          }
          case 153: {
            DamageSpread = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            MobType = (global::SirusDbScrapper.UIDatabase.MobType) input.ReadEnum();
            break;
          }
          case 32: {
            Level = input.ReadInt32();
            break;
          }
          case 42:
          case 41: {
            stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
            break;
          }
          case 48: {
            TankIndex = input.ReadInt32();
            break;
          }
          case 57: {
            MinBaseDamage = input.ReadDouble();
            break;
          }
          case 65: {
            SwingSpeed = input.ReadDouble();
            break;
          }
          case 72: {
            DualWield = input.ReadBool();
            break;
          }
          case 80: {
            DualWieldPenalty = input.ReadBool();
            break;
          }
          case 96: {
            ParryHaste = input.ReadBool();
            break;
          }
          case 104: {
            SpellSchool = (global::SirusDbScrapper.UIDatabase.SpellSchool) input.ReadEnum();
            break;
          }
          case 112: {
            Id = input.ReadInt32();
            break;
          }
          case 122: {
            Name = input.ReadString();
            break;
          }
          case 128: {
            SuppressDodge = input.ReadBool();
            break;
          }
          case 146: {
            targetInputs_.AddEntriesFrom(ref input, _repeated_targetInputs_codec);
            break;
          }
          case 153: {
            DamageSpread = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Encounter : pb::IMessage<Encounter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Encounter> _parser = new pb::MessageParser<Encounter>(() => new Encounter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Encounter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Encounter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Encounter(Encounter other) : this() {
      duration_ = other.duration_;
      durationVariation_ = other.durationVariation_;
      executeProportion20_ = other.executeProportion20_;
      executeProportion25_ = other.executeProportion25_;
      executeProportion35_ = other.executeProportion35_;
      useHealth_ = other.useHealth_;
      targets_ = other.targets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Encounter Clone() {
      return new Encounter(this);
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 1;
    private double duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "duration_variation" field.</summary>
    public const int DurationVariationFieldNumber = 2;
    private double durationVariation_;
    /// <summary>
    /// Variation in the duration
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DurationVariation {
      get { return durationVariation_; }
      set {
        durationVariation_ = value;
      }
    }

    /// <summary>Field number for the "execute_proportion_20" field.</summary>
    public const int ExecuteProportion20FieldNumber = 3;
    private double executeProportion20_;
    /// <summary>
    /// The ratio of the encounter duration, between 0 and 1, for which the targets
    /// will be in execute range (&lt;= 20%) for the purposes of Warrior Execute, Mage Molten
    /// Fury, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ExecuteProportion20 {
      get { return executeProportion20_; }
      set {
        executeProportion20_ = value;
      }
    }

    /// <summary>Field number for the "execute_proportion_25" field.</summary>
    public const int ExecuteProportion25FieldNumber = 7;
    private double executeProportion25_;
    /// <summary>
    /// Key for Affliction warlock Drain Soul
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ExecuteProportion25 {
      get { return executeProportion25_; }
      set {
        executeProportion25_ = value;
      }
    }

    /// <summary>Field number for the "execute_proportion_35" field.</summary>
    public const int ExecuteProportion35FieldNumber = 4;
    private double executeProportion35_;
    /// <summary>
    /// Same as execute_proportion but for 35%.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ExecuteProportion35 {
      get { return executeProportion35_; }
      set {
        executeProportion35_ = value;
      }
    }

    /// <summary>Field number for the "use_health" field.</summary>
    public const int UseHealthFieldNumber = 5;
    private bool useHealth_;
    /// <summary>
    /// If set, will use the targets health value instead of a duration for fight length.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseHealth {
      get { return useHealth_; }
      set {
        useHealth_ = value;
      }
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.Target> _repeated_targets_codec
        = pb::FieldCodec.ForMessage(50, global::SirusDbScrapper.UIDatabase.Target.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Target> targets_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Target>();
    /// <summary>
    /// If type != Simple or Custom, then this may be empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Target> Targets {
      get { return targets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Encounter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Encounter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Duration, other.Duration)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DurationVariation, other.DurationVariation)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ExecuteProportion20, other.ExecuteProportion20)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ExecuteProportion25, other.ExecuteProportion25)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ExecuteProportion35, other.ExecuteProportion35)) return false;
      if (UseHealth != other.UseHealth) return false;
      if(!targets_.Equals(other.targets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Duration != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Duration);
      if (DurationVariation != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DurationVariation);
      if (ExecuteProportion20 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ExecuteProportion20);
      if (ExecuteProportion25 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ExecuteProportion25);
      if (ExecuteProportion35 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ExecuteProportion35);
      if (UseHealth != false) hash ^= UseHealth.GetHashCode();
      hash ^= targets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Duration != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Duration);
      }
      if (DurationVariation != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(DurationVariation);
      }
      if (ExecuteProportion20 != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(ExecuteProportion20);
      }
      if (ExecuteProportion35 != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(ExecuteProportion35);
      }
      if (UseHealth != false) {
        output.WriteRawTag(40);
        output.WriteBool(UseHealth);
      }
      targets_.WriteTo(output, _repeated_targets_codec);
      if (ExecuteProportion25 != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(ExecuteProportion25);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Duration != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Duration);
      }
      if (DurationVariation != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(DurationVariation);
      }
      if (ExecuteProportion20 != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(ExecuteProportion20);
      }
      if (ExecuteProportion35 != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(ExecuteProportion35);
      }
      if (UseHealth != false) {
        output.WriteRawTag(40);
        output.WriteBool(UseHealth);
      }
      targets_.WriteTo(ref output, _repeated_targets_codec);
      if (ExecuteProportion25 != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(ExecuteProportion25);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Duration != 0D) {
        size += 1 + 8;
      }
      if (DurationVariation != 0D) {
        size += 1 + 8;
      }
      if (ExecuteProportion20 != 0D) {
        size += 1 + 8;
      }
      if (ExecuteProportion25 != 0D) {
        size += 1 + 8;
      }
      if (ExecuteProportion35 != 0D) {
        size += 1 + 8;
      }
      if (UseHealth != false) {
        size += 1 + 1;
      }
      size += targets_.CalculateSize(_repeated_targets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Encounter other) {
      if (other == null) {
        return;
      }
      if (other.Duration != 0D) {
        Duration = other.Duration;
      }
      if (other.DurationVariation != 0D) {
        DurationVariation = other.DurationVariation;
      }
      if (other.ExecuteProportion20 != 0D) {
        ExecuteProportion20 = other.ExecuteProportion20;
      }
      if (other.ExecuteProportion25 != 0D) {
        ExecuteProportion25 = other.ExecuteProportion25;
      }
      if (other.ExecuteProportion35 != 0D) {
        ExecuteProportion35 = other.ExecuteProportion35;
      }
      if (other.UseHealth != false) {
        UseHealth = other.UseHealth;
      }
      targets_.Add(other.targets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Duration = input.ReadDouble();
            break;
          }
          case 17: {
            DurationVariation = input.ReadDouble();
            break;
          }
          case 25: {
            ExecuteProportion20 = input.ReadDouble();
            break;
          }
          case 33: {
            ExecuteProportion35 = input.ReadDouble();
            break;
          }
          case 40: {
            UseHealth = input.ReadBool();
            break;
          }
          case 50: {
            targets_.AddEntriesFrom(input, _repeated_targets_codec);
            break;
          }
          case 57: {
            ExecuteProportion25 = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Duration = input.ReadDouble();
            break;
          }
          case 17: {
            DurationVariation = input.ReadDouble();
            break;
          }
          case 25: {
            ExecuteProportion20 = input.ReadDouble();
            break;
          }
          case 33: {
            ExecuteProportion35 = input.ReadDouble();
            break;
          }
          case 40: {
            UseHealth = input.ReadBool();
            break;
          }
          case 50: {
            targets_.AddEntriesFrom(ref input, _repeated_targets_codec);
            break;
          }
          case 57: {
            ExecuteProportion25 = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PresetTarget : pb::IMessage<PresetTarget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PresetTarget> _parser = new pb::MessageParser<PresetTarget>(() => new PresetTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PresetTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PresetTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PresetTarget(PresetTarget other) : this() {
      path_ = other.path_;
      target_ = other.target_ != null ? other.target_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PresetTarget Clone() {
      return new PresetTarget(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 2;
    private global::SirusDbScrapper.UIDatabase.Target target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Target Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PresetTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PresetTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (!object.Equals(Target, other.Target)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (target_ != null) hash ^= Target.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (target_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (target_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PresetTarget other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.target_ != null) {
        if (target_ == null) {
          Target = new global::SirusDbScrapper.UIDatabase.Target();
        }
        Target.MergeFrom(other.Target);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            if (target_ == null) {
              Target = new global::SirusDbScrapper.UIDatabase.Target();
            }
            input.ReadMessage(Target);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            if (target_ == null) {
              Target = new global::SirusDbScrapper.UIDatabase.Target();
            }
            input.ReadMessage(Target);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PresetEncounter : pb::IMessage<PresetEncounter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PresetEncounter> _parser = new pb::MessageParser<PresetEncounter>(() => new PresetEncounter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PresetEncounter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PresetEncounter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PresetEncounter(PresetEncounter other) : this() {
      path_ = other.path_;
      targets_ = other.targets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PresetEncounter Clone() {
      return new PresetEncounter(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.PresetTarget> _repeated_targets_codec
        = pb::FieldCodec.ForMessage(18, global::SirusDbScrapper.UIDatabase.PresetTarget.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.PresetTarget> targets_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.PresetTarget>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.PresetTarget> Targets {
      get { return targets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PresetEncounter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PresetEncounter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if(!targets_.Equals(other.targets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      hash ^= targets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      targets_.WriteTo(output, _repeated_targets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      targets_.WriteTo(ref output, _repeated_targets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      size += targets_.CalculateSize(_repeated_targets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PresetEncounter other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      targets_.Add(other.targets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            targets_.AddEntriesFrom(input, _repeated_targets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            targets_.AddEntriesFrom(ref input, _repeated_targets_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ItemSpec : pb::IMessage<ItemSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemSpec> _parser = new pb::MessageParser<ItemSpec>(() => new ItemSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ItemSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemSpec(ItemSpec other) : this() {
      id_ = other.id_;
      enchant_ = other.enchant_;
      gems_ = other.gems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemSpec Clone() {
      return new ItemSpec(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "enchant" field.</summary>
    public const int EnchantFieldNumber = 3;
    private int enchant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Enchant {
      get { return enchant_; }
      set {
        enchant_ = value;
      }
    }

    /// <summary>Field number for the "gems" field.</summary>
    public const int GemsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_gems_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> gems_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Gems {
      get { return gems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ItemSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ItemSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Enchant != other.Enchant) return false;
      if(!gems_.Equals(other.gems_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Enchant != 0) hash ^= Enchant.GetHashCode();
      hash ^= gems_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (Enchant != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Enchant);
      }
      gems_.WriteTo(output, _repeated_gems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (Enchant != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Enchant);
      }
      gems_.WriteTo(ref output, _repeated_gems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Enchant != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Enchant);
      }
      size += gems_.CalculateSize(_repeated_gems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ItemSpec other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Enchant != 0) {
        Enchant = other.Enchant;
      }
      gems_.Add(other.gems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            Enchant = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            gems_.AddEntriesFrom(input, _repeated_gems_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            Enchant = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            gems_.AddEntriesFrom(ref input, _repeated_gems_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EquipmentSpec : pb::IMessage<EquipmentSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EquipmentSpec> _parser = new pb::MessageParser<EquipmentSpec>(() => new EquipmentSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EquipmentSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EquipmentSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EquipmentSpec(EquipmentSpec other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EquipmentSpec Clone() {
      return new EquipmentSpec(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.ItemSpec> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::SirusDbScrapper.UIDatabase.ItemSpec.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.ItemSpec> items_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.ItemSpec>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.ItemSpec> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EquipmentSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EquipmentSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EquipmentSpec other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SimDatabase : pb::IMessage<SimDatabase>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SimDatabase> _parser = new pb::MessageParser<SimDatabase>(() => new SimDatabase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SimDatabase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimDatabase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimDatabase(SimDatabase other) : this() {
      items_ = other.items_.Clone();
      enchants_ = other.enchants_.Clone();
      gems_ = other.gems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimDatabase Clone() {
      return new SimDatabase(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.SimItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::SirusDbScrapper.UIDatabase.SimItem.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.SimItem> items_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.SimItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.SimItem> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "enchants" field.</summary>
    public const int EnchantsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.SimEnchant> _repeated_enchants_codec
        = pb::FieldCodec.ForMessage(18, global::SirusDbScrapper.UIDatabase.SimEnchant.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.SimEnchant> enchants_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.SimEnchant>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.SimEnchant> Enchants {
      get { return enchants_; }
    }

    /// <summary>Field number for the "gems" field.</summary>
    public const int GemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.SimGem> _repeated_gems_codec
        = pb::FieldCodec.ForMessage(26, global::SirusDbScrapper.UIDatabase.SimGem.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.SimGem> gems_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.SimGem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.SimGem> Gems {
      get { return gems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SimDatabase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SimDatabase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      if(!enchants_.Equals(other.enchants_)) return false;
      if(!gems_.Equals(other.gems_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      hash ^= enchants_.GetHashCode();
      hash ^= gems_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      enchants_.WriteTo(output, _repeated_enchants_codec);
      gems_.WriteTo(output, _repeated_gems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      enchants_.WriteTo(ref output, _repeated_enchants_codec);
      gems_.WriteTo(ref output, _repeated_gems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      size += enchants_.CalculateSize(_repeated_enchants_codec);
      size += gems_.CalculateSize(_repeated_gems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SimDatabase other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      enchants_.Add(other.enchants_);
      gems_.Add(other.gems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 18: {
            enchants_.AddEntriesFrom(input, _repeated_enchants_codec);
            break;
          }
          case 26: {
            gems_.AddEntriesFrom(input, _repeated_gems_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
          case 18: {
            enchants_.AddEntriesFrom(ref input, _repeated_enchants_codec);
            break;
          }
          case 26: {
            gems_.AddEntriesFrom(ref input, _repeated_gems_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains only the Item info needed by the sim.
  /// </summary>
  public sealed partial class SimItem : pb::IMessage<SimItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SimItem> _parser = new pb::MessageParser<SimItem>(() => new SimItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SimItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimItem(SimItem other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      type_ = other.type_;
      armorType_ = other.armorType_;
      weaponType_ = other.weaponType_;
      handType_ = other.handType_;
      rangedWeaponType_ = other.rangedWeaponType_;
      stats_ = other.stats_.Clone();
      gemSockets_ = other.gemSockets_.Clone();
      socketBonus_ = other.socketBonus_.Clone();
      weaponDamageMin_ = other.weaponDamageMin_;
      weaponDamageMax_ = other.weaponDamageMax_;
      weaponSpeed_ = other.weaponSpeed_;
      setName_ = other.setName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimItem Clone() {
      return new SimItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.ItemType type_ = global::SirusDbScrapper.UIDatabase.ItemType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.ItemType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "armor_type" field.</summary>
    public const int ArmorTypeFieldNumber = 4;
    private global::SirusDbScrapper.UIDatabase.ArmorType armorType_ = global::SirusDbScrapper.UIDatabase.ArmorType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.ArmorType ArmorType {
      get { return armorType_; }
      set {
        armorType_ = value;
      }
    }

    /// <summary>Field number for the "weapon_type" field.</summary>
    public const int WeaponTypeFieldNumber = 5;
    private global::SirusDbScrapper.UIDatabase.WeaponType weaponType_ = global::SirusDbScrapper.UIDatabase.WeaponType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.WeaponType WeaponType {
      get { return weaponType_; }
      set {
        weaponType_ = value;
      }
    }

    /// <summary>Field number for the "hand_type" field.</summary>
    public const int HandTypeFieldNumber = 6;
    private global::SirusDbScrapper.UIDatabase.HandType handType_ = global::SirusDbScrapper.UIDatabase.HandType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.HandType HandType {
      get { return handType_; }
      set {
        handType_ = value;
      }
    }

    /// <summary>Field number for the "ranged_weapon_type" field.</summary>
    public const int RangedWeaponTypeFieldNumber = 7;
    private global::SirusDbScrapper.UIDatabase.RangedWeaponType rangedWeaponType_ = global::SirusDbScrapper.UIDatabase.RangedWeaponType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.RangedWeaponType RangedWeaponType {
      get { return rangedWeaponType_; }
      set {
        rangedWeaponType_ = value;
      }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 8;
    private static readonly pb::FieldCodec<double> _repeated_stats_codec
        = pb::FieldCodec.ForDouble(66);
    private readonly pbc::RepeatedField<double> stats_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Stats {
      get { return stats_; }
    }

    /// <summary>Field number for the "gem_sockets" field.</summary>
    public const int GemSocketsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.GemColor> _repeated_gemSockets_codec
        = pb::FieldCodec.ForEnum(74, x => (int) x, x => (global::SirusDbScrapper.UIDatabase.GemColor) x);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.GemColor> gemSockets_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.GemColor>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.GemColor> GemSockets {
      get { return gemSockets_; }
    }

    /// <summary>Field number for the "socketBonus" field.</summary>
    public const int SocketBonusFieldNumber = 10;
    private static readonly pb::FieldCodec<double> _repeated_socketBonus_codec
        = pb::FieldCodec.ForDouble(82);
    private readonly pbc::RepeatedField<double> socketBonus_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> SocketBonus {
      get { return socketBonus_; }
    }

    /// <summary>Field number for the "weapon_damage_min" field.</summary>
    public const int WeaponDamageMinFieldNumber = 11;
    private double weaponDamageMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double WeaponDamageMin {
      get { return weaponDamageMin_; }
      set {
        weaponDamageMin_ = value;
      }
    }

    /// <summary>Field number for the "weapon_damage_max" field.</summary>
    public const int WeaponDamageMaxFieldNumber = 12;
    private double weaponDamageMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double WeaponDamageMax {
      get { return weaponDamageMax_; }
      set {
        weaponDamageMax_ = value;
      }
    }

    /// <summary>Field number for the "weapon_speed" field.</summary>
    public const int WeaponSpeedFieldNumber = 13;
    private double weaponSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double WeaponSpeed {
      get { return weaponSpeed_; }
      set {
        weaponSpeed_ = value;
      }
    }

    /// <summary>Field number for the "set_name" field.</summary>
    public const int SetNameFieldNumber = 14;
    private string setName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SetName {
      get { return setName_; }
      set {
        setName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SimItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SimItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (ArmorType != other.ArmorType) return false;
      if (WeaponType != other.WeaponType) return false;
      if (HandType != other.HandType) return false;
      if (RangedWeaponType != other.RangedWeaponType) return false;
      if(!stats_.Equals(other.stats_)) return false;
      if(!gemSockets_.Equals(other.gemSockets_)) return false;
      if(!socketBonus_.Equals(other.socketBonus_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(WeaponDamageMin, other.WeaponDamageMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(WeaponDamageMax, other.WeaponDamageMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(WeaponSpeed, other.WeaponSpeed)) return false;
      if (SetName != other.SetName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::SirusDbScrapper.UIDatabase.ItemType.Unknown) hash ^= Type.GetHashCode();
      if (ArmorType != global::SirusDbScrapper.UIDatabase.ArmorType.Unknown) hash ^= ArmorType.GetHashCode();
      if (WeaponType != global::SirusDbScrapper.UIDatabase.WeaponType.Unknown) hash ^= WeaponType.GetHashCode();
      if (HandType != global::SirusDbScrapper.UIDatabase.HandType.Unknown) hash ^= HandType.GetHashCode();
      if (RangedWeaponType != global::SirusDbScrapper.UIDatabase.RangedWeaponType.Unknown) hash ^= RangedWeaponType.GetHashCode();
      hash ^= stats_.GetHashCode();
      hash ^= gemSockets_.GetHashCode();
      hash ^= socketBonus_.GetHashCode();
      if (WeaponDamageMin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(WeaponDamageMin);
      if (WeaponDamageMax != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(WeaponDamageMax);
      if (WeaponSpeed != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(WeaponSpeed);
      if (SetName.Length != 0) hash ^= SetName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::SirusDbScrapper.UIDatabase.ItemType.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (ArmorType != global::SirusDbScrapper.UIDatabase.ArmorType.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ArmorType);
      }
      if (WeaponType != global::SirusDbScrapper.UIDatabase.WeaponType.Unknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) WeaponType);
      }
      if (HandType != global::SirusDbScrapper.UIDatabase.HandType.Unknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) HandType);
      }
      if (RangedWeaponType != global::SirusDbScrapper.UIDatabase.RangedWeaponType.Unknown) {
        output.WriteRawTag(56);
        output.WriteEnum((int) RangedWeaponType);
      }
      stats_.WriteTo(output, _repeated_stats_codec);
      gemSockets_.WriteTo(output, _repeated_gemSockets_codec);
      socketBonus_.WriteTo(output, _repeated_socketBonus_codec);
      if (WeaponDamageMin != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(WeaponDamageMin);
      }
      if (WeaponDamageMax != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(WeaponDamageMax);
      }
      if (WeaponSpeed != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(WeaponSpeed);
      }
      if (SetName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(SetName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::SirusDbScrapper.UIDatabase.ItemType.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (ArmorType != global::SirusDbScrapper.UIDatabase.ArmorType.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ArmorType);
      }
      if (WeaponType != global::SirusDbScrapper.UIDatabase.WeaponType.Unknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) WeaponType);
      }
      if (HandType != global::SirusDbScrapper.UIDatabase.HandType.Unknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) HandType);
      }
      if (RangedWeaponType != global::SirusDbScrapper.UIDatabase.RangedWeaponType.Unknown) {
        output.WriteRawTag(56);
        output.WriteEnum((int) RangedWeaponType);
      }
      stats_.WriteTo(ref output, _repeated_stats_codec);
      gemSockets_.WriteTo(ref output, _repeated_gemSockets_codec);
      socketBonus_.WriteTo(ref output, _repeated_socketBonus_codec);
      if (WeaponDamageMin != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(WeaponDamageMin);
      }
      if (WeaponDamageMax != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(WeaponDamageMax);
      }
      if (WeaponSpeed != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(WeaponSpeed);
      }
      if (SetName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(SetName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::SirusDbScrapper.UIDatabase.ItemType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (ArmorType != global::SirusDbScrapper.UIDatabase.ArmorType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ArmorType);
      }
      if (WeaponType != global::SirusDbScrapper.UIDatabase.WeaponType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WeaponType);
      }
      if (HandType != global::SirusDbScrapper.UIDatabase.HandType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HandType);
      }
      if (RangedWeaponType != global::SirusDbScrapper.UIDatabase.RangedWeaponType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RangedWeaponType);
      }
      size += stats_.CalculateSize(_repeated_stats_codec);
      size += gemSockets_.CalculateSize(_repeated_gemSockets_codec);
      size += socketBonus_.CalculateSize(_repeated_socketBonus_codec);
      if (WeaponDamageMin != 0D) {
        size += 1 + 8;
      }
      if (WeaponDamageMax != 0D) {
        size += 1 + 8;
      }
      if (WeaponSpeed != 0D) {
        size += 1 + 8;
      }
      if (SetName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SetName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SimItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::SirusDbScrapper.UIDatabase.ItemType.Unknown) {
        Type = other.Type;
      }
      if (other.ArmorType != global::SirusDbScrapper.UIDatabase.ArmorType.Unknown) {
        ArmorType = other.ArmorType;
      }
      if (other.WeaponType != global::SirusDbScrapper.UIDatabase.WeaponType.Unknown) {
        WeaponType = other.WeaponType;
      }
      if (other.HandType != global::SirusDbScrapper.UIDatabase.HandType.Unknown) {
        HandType = other.HandType;
      }
      if (other.RangedWeaponType != global::SirusDbScrapper.UIDatabase.RangedWeaponType.Unknown) {
        RangedWeaponType = other.RangedWeaponType;
      }
      stats_.Add(other.stats_);
      gemSockets_.Add(other.gemSockets_);
      socketBonus_.Add(other.socketBonus_);
      if (other.WeaponDamageMin != 0D) {
        WeaponDamageMin = other.WeaponDamageMin;
      }
      if (other.WeaponDamageMax != 0D) {
        WeaponDamageMax = other.WeaponDamageMax;
      }
      if (other.WeaponSpeed != 0D) {
        WeaponSpeed = other.WeaponSpeed;
      }
      if (other.SetName.Length != 0) {
        SetName = other.SetName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::SirusDbScrapper.UIDatabase.ItemType) input.ReadEnum();
            break;
          }
          case 32: {
            ArmorType = (global::SirusDbScrapper.UIDatabase.ArmorType) input.ReadEnum();
            break;
          }
          case 40: {
            WeaponType = (global::SirusDbScrapper.UIDatabase.WeaponType) input.ReadEnum();
            break;
          }
          case 48: {
            HandType = (global::SirusDbScrapper.UIDatabase.HandType) input.ReadEnum();
            break;
          }
          case 56: {
            RangedWeaponType = (global::SirusDbScrapper.UIDatabase.RangedWeaponType) input.ReadEnum();
            break;
          }
          case 66:
          case 65: {
            stats_.AddEntriesFrom(input, _repeated_stats_codec);
            break;
          }
          case 74:
          case 72: {
            gemSockets_.AddEntriesFrom(input, _repeated_gemSockets_codec);
            break;
          }
          case 82:
          case 81: {
            socketBonus_.AddEntriesFrom(input, _repeated_socketBonus_codec);
            break;
          }
          case 89: {
            WeaponDamageMin = input.ReadDouble();
            break;
          }
          case 97: {
            WeaponDamageMax = input.ReadDouble();
            break;
          }
          case 105: {
            WeaponSpeed = input.ReadDouble();
            break;
          }
          case 114: {
            SetName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::SirusDbScrapper.UIDatabase.ItemType) input.ReadEnum();
            break;
          }
          case 32: {
            ArmorType = (global::SirusDbScrapper.UIDatabase.ArmorType) input.ReadEnum();
            break;
          }
          case 40: {
            WeaponType = (global::SirusDbScrapper.UIDatabase.WeaponType) input.ReadEnum();
            break;
          }
          case 48: {
            HandType = (global::SirusDbScrapper.UIDatabase.HandType) input.ReadEnum();
            break;
          }
          case 56: {
            RangedWeaponType = (global::SirusDbScrapper.UIDatabase.RangedWeaponType) input.ReadEnum();
            break;
          }
          case 66:
          case 65: {
            stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
            break;
          }
          case 74:
          case 72: {
            gemSockets_.AddEntriesFrom(ref input, _repeated_gemSockets_codec);
            break;
          }
          case 82:
          case 81: {
            socketBonus_.AddEntriesFrom(ref input, _repeated_socketBonus_codec);
            break;
          }
          case 89: {
            WeaponDamageMin = input.ReadDouble();
            break;
          }
          case 97: {
            WeaponDamageMax = input.ReadDouble();
            break;
          }
          case 105: {
            WeaponSpeed = input.ReadDouble();
            break;
          }
          case 114: {
            SetName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains only the Enchant info needed by the sim.
  /// </summary>
  public sealed partial class SimEnchant : pb::IMessage<SimEnchant>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SimEnchant> _parser = new pb::MessageParser<SimEnchant>(() => new SimEnchant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SimEnchant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimEnchant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimEnchant(SimEnchant other) : this() {
      effectId_ = other.effectId_;
      stats_ = other.stats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimEnchant Clone() {
      return new SimEnchant(this);
    }

    /// <summary>Field number for the "effect_id" field.</summary>
    public const int EffectIdFieldNumber = 1;
    private int effectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectId {
      get { return effectId_; }
      set {
        effectId_ = value;
      }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 2;
    private static readonly pb::FieldCodec<double> _repeated_stats_codec
        = pb::FieldCodec.ForDouble(18);
    private readonly pbc::RepeatedField<double> stats_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Stats {
      get { return stats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SimEnchant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SimEnchant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EffectId != other.EffectId) return false;
      if(!stats_.Equals(other.stats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EffectId != 0) hash ^= EffectId.GetHashCode();
      hash ^= stats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EffectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EffectId);
      }
      stats_.WriteTo(output, _repeated_stats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EffectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EffectId);
      }
      stats_.WriteTo(ref output, _repeated_stats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EffectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectId);
      }
      size += stats_.CalculateSize(_repeated_stats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SimEnchant other) {
      if (other == null) {
        return;
      }
      if (other.EffectId != 0) {
        EffectId = other.EffectId;
      }
      stats_.Add(other.stats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EffectId = input.ReadInt32();
            break;
          }
          case 18:
          case 17: {
            stats_.AddEntriesFrom(input, _repeated_stats_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EffectId = input.ReadInt32();
            break;
          }
          case 18:
          case 17: {
            stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains only the Gem info needed by the sim.
  /// </summary>
  public sealed partial class SimGem : pb::IMessage<SimGem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SimGem> _parser = new pb::MessageParser<SimGem>(() => new SimGem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SimGem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimGem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimGem(SimGem other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      color_ = other.color_;
      stats_ = other.stats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimGem Clone() {
      return new SimGem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.GemColor color_ = global::SirusDbScrapper.UIDatabase.GemColor.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.GemColor Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 4;
    private static readonly pb::FieldCodec<double> _repeated_stats_codec
        = pb::FieldCodec.ForDouble(34);
    private readonly pbc::RepeatedField<double> stats_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Stats {
      get { return stats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SimGem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SimGem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Color != other.Color) return false;
      if(!stats_.Equals(other.stats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Color != global::SirusDbScrapper.UIDatabase.GemColor.Unknown) hash ^= Color.GetHashCode();
      hash ^= stats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Color != global::SirusDbScrapper.UIDatabase.GemColor.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Color);
      }
      stats_.WriteTo(output, _repeated_stats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Color != global::SirusDbScrapper.UIDatabase.GemColor.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Color);
      }
      stats_.WriteTo(ref output, _repeated_stats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Color != global::SirusDbScrapper.UIDatabase.GemColor.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Color);
      }
      size += stats_.CalculateSize(_repeated_stats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SimGem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Color != global::SirusDbScrapper.UIDatabase.GemColor.Unknown) {
        Color = other.Color;
      }
      stats_.Add(other.stats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Color = (global::SirusDbScrapper.UIDatabase.GemColor) input.ReadEnum();
            break;
          }
          case 34:
          case 33: {
            stats_.AddEntriesFrom(input, _repeated_stats_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Color = (global::SirusDbScrapper.UIDatabase.GemColor) input.ReadEnum();
            break;
          }
          case 34:
          case 33: {
            stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnitReference : pb::IMessage<UnitReference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnitReference> _parser = new pb::MessageParser<UnitReference>(() => new UnitReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnitReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitReference(UnitReference other) : this() {
      type_ = other.type_;
      index_ = other.index_;
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitReference Clone() {
      return new UnitReference(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::SirusDbScrapper.UIDatabase.UnitReference.Types.Type type_ = global::SirusDbScrapper.UIDatabase.UnitReference.Types.Type.Unknown;
    /// <summary>
    /// The type of unit being referenced.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.UnitReference.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private int index_;
    /// <summary>
    /// Index of the player/target/pet/etc depending on value of type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 4;
    private global::SirusDbScrapper.UIDatabase.UnitReference owner_;
    /// <summary>
    /// Reference to the owner, only used iff this is a pet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.UnitReference Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnitReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnitReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Index != other.Index) return false;
      if (!object.Equals(Owner, other.Owner)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::SirusDbScrapper.UIDatabase.UnitReference.Types.Type.Unknown) hash ^= Type.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::SirusDbScrapper.UIDatabase.UnitReference.Types.Type.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Index);
      }
      if (owner_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::SirusDbScrapper.UIDatabase.UnitReference.Types.Type.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Index);
      }
      if (owner_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::SirusDbScrapper.UIDatabase.UnitReference.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnitReference other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::SirusDbScrapper.UIDatabase.UnitReference.Types.Type.Unknown) {
        Type = other.Type;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          Owner = new global::SirusDbScrapper.UIDatabase.UnitReference();
        }
        Owner.MergeFrom(other.Owner);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Type = (global::SirusDbScrapper.UIDatabase.UnitReference.Types.Type) input.ReadEnum();
            break;
          }
          case 24: {
            Index = input.ReadInt32();
            break;
          }
          case 34: {
            if (owner_ == null) {
              Owner = new global::SirusDbScrapper.UIDatabase.UnitReference();
            }
            input.ReadMessage(Owner);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            Type = (global::SirusDbScrapper.UIDatabase.UnitReference.Types.Type) input.ReadEnum();
            break;
          }
          case 24: {
            Index = input.ReadInt32();
            break;
          }
          case 34: {
            if (owner_ == null) {
              Owner = new global::SirusDbScrapper.UIDatabase.UnitReference();
            }
            input.ReadMessage(Owner);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UnitReference message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Unknown")] Unknown = 0,
        [pbr::OriginalName("Player")] Player = 1,
        [pbr::OriginalName("Target")] Target = 2,
        [pbr::OriginalName("Pet")] Pet = 3,
        [pbr::OriginalName("Self")] Self = 4,
        [pbr::OriginalName("CurrentTarget")] CurrentTarget = 5,
        [pbr::OriginalName("AllPlayers")] AllPlayers = 6,
        [pbr::OriginalName("AllTargets")] AllTargets = 7,
      }

    }
    #endregion

  }

  public sealed partial class ActionID : pb::IMessage<ActionID>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActionID> _parser = new pb::MessageParser<ActionID>(() => new ActionID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActionID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionID(ActionID other) : this() {
      tag_ = other.tag_;
      switch (other.RawIdCase) {
        case RawIdOneofCase.SpellId:
          SpellId = other.SpellId;
          break;
        case RawIdOneofCase.ItemId:
          ItemId = other.ItemId;
          break;
        case RawIdOneofCase.OtherId:
          OtherId = other.OtherId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionID Clone() {
      return new ActionID(this);
    }

    /// <summary>Field number for the "spell_id" field.</summary>
    public const int SpellIdFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpellId {
      get { return rawIdCase_ == RawIdOneofCase.SpellId ? (int) rawId_ : 0; }
      set {
        rawId_ = value;
        rawIdCase_ = RawIdOneofCase.SpellId;
      }
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemId {
      get { return rawIdCase_ == RawIdOneofCase.ItemId ? (int) rawId_ : 0; }
      set {
        rawId_ = value;
        rawIdCase_ = RawIdOneofCase.ItemId;
      }
    }

    /// <summary>Field number for the "other_id" field.</summary>
    public const int OtherIdFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.OtherAction OtherId {
      get { return rawIdCase_ == RawIdOneofCase.OtherId ? (global::SirusDbScrapper.UIDatabase.OtherAction) rawId_ : global::SirusDbScrapper.UIDatabase.OtherAction.None; }
      set {
        rawId_ = value;
        rawIdCase_ = RawIdOneofCase.OtherId;
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 4;
    private int tag_;
    /// <summary>
    /// Distinguishes between different versions of the same action.
    /// Currently the only use for this is Shaman Lightning Overload.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    private object rawId_;
    /// <summary>Enum of possible cases for the "raw_id" oneof.</summary>
    public enum RawIdOneofCase {
      None = 0,
      SpellId = 1,
      ItemId = 2,
      OtherId = 3,
    }
    private RawIdOneofCase rawIdCase_ = RawIdOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RawIdOneofCase RawIdCase {
      get { return rawIdCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRawId() {
      rawIdCase_ = RawIdOneofCase.None;
      rawId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActionID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActionID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SpellId != other.SpellId) return false;
      if (ItemId != other.ItemId) return false;
      if (OtherId != other.OtherId) return false;
      if (Tag != other.Tag) return false;
      if (RawIdCase != other.RawIdCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (rawIdCase_ == RawIdOneofCase.SpellId) hash ^= SpellId.GetHashCode();
      if (rawIdCase_ == RawIdOneofCase.ItemId) hash ^= ItemId.GetHashCode();
      if (rawIdCase_ == RawIdOneofCase.OtherId) hash ^= OtherId.GetHashCode();
      if (Tag != 0) hash ^= Tag.GetHashCode();
      hash ^= (int) rawIdCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (rawIdCase_ == RawIdOneofCase.SpellId) {
        output.WriteRawTag(8);
        output.WriteInt32(SpellId);
      }
      if (rawIdCase_ == RawIdOneofCase.ItemId) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (rawIdCase_ == RawIdOneofCase.OtherId) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OtherId);
      }
      if (Tag != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (rawIdCase_ == RawIdOneofCase.SpellId) {
        output.WriteRawTag(8);
        output.WriteInt32(SpellId);
      }
      if (rawIdCase_ == RawIdOneofCase.ItemId) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (rawIdCase_ == RawIdOneofCase.OtherId) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OtherId);
      }
      if (Tag != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (rawIdCase_ == RawIdOneofCase.SpellId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpellId);
      }
      if (rawIdCase_ == RawIdOneofCase.ItemId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (rawIdCase_ == RawIdOneofCase.OtherId) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OtherId);
      }
      if (Tag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActionID other) {
      if (other == null) {
        return;
      }
      if (other.Tag != 0) {
        Tag = other.Tag;
      }
      switch (other.RawIdCase) {
        case RawIdOneofCase.SpellId:
          SpellId = other.SpellId;
          break;
        case RawIdOneofCase.ItemId:
          ItemId = other.ItemId;
          break;
        case RawIdOneofCase.OtherId:
          OtherId = other.OtherId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SpellId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
          case 24: {
            rawId_ = input.ReadEnum();
            rawIdCase_ = RawIdOneofCase.OtherId;
            break;
          }
          case 32: {
            Tag = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SpellId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
          case 24: {
            rawId_ = input.ReadEnum();
            rawIdCase_ = RawIdOneofCase.OtherId;
            break;
          }
          case 32: {
            Tag = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Glyphs : pb::IMessage<Glyphs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Glyphs> _parser = new pb::MessageParser<Glyphs>(() => new Glyphs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Glyphs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Glyphs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Glyphs(Glyphs other) : this() {
      major1_ = other.major1_;
      major2_ = other.major2_;
      major3_ = other.major3_;
      minor1_ = other.minor1_;
      minor2_ = other.minor2_;
      minor3_ = other.minor3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Glyphs Clone() {
      return new Glyphs(this);
    }

    /// <summary>Field number for the "major1" field.</summary>
    public const int Major1FieldNumber = 1;
    private int major1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Major1 {
      get { return major1_; }
      set {
        major1_ = value;
      }
    }

    /// <summary>Field number for the "major2" field.</summary>
    public const int Major2FieldNumber = 2;
    private int major2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Major2 {
      get { return major2_; }
      set {
        major2_ = value;
      }
    }

    /// <summary>Field number for the "major3" field.</summary>
    public const int Major3FieldNumber = 3;
    private int major3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Major3 {
      get { return major3_; }
      set {
        major3_ = value;
      }
    }

    /// <summary>Field number for the "minor1" field.</summary>
    public const int Minor1FieldNumber = 4;
    private int minor1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Minor1 {
      get { return minor1_; }
      set {
        minor1_ = value;
      }
    }

    /// <summary>Field number for the "minor2" field.</summary>
    public const int Minor2FieldNumber = 5;
    private int minor2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Minor2 {
      get { return minor2_; }
      set {
        minor2_ = value;
      }
    }

    /// <summary>Field number for the "minor3" field.</summary>
    public const int Minor3FieldNumber = 6;
    private int minor3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Minor3 {
      get { return minor3_; }
      set {
        minor3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Glyphs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Glyphs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Major1 != other.Major1) return false;
      if (Major2 != other.Major2) return false;
      if (Major3 != other.Major3) return false;
      if (Minor1 != other.Minor1) return false;
      if (Minor2 != other.Minor2) return false;
      if (Minor3 != other.Minor3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Major1 != 0) hash ^= Major1.GetHashCode();
      if (Major2 != 0) hash ^= Major2.GetHashCode();
      if (Major3 != 0) hash ^= Major3.GetHashCode();
      if (Minor1 != 0) hash ^= Minor1.GetHashCode();
      if (Minor2 != 0) hash ^= Minor2.GetHashCode();
      if (Minor3 != 0) hash ^= Minor3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Major1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Major1);
      }
      if (Major2 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Major2);
      }
      if (Major3 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Major3);
      }
      if (Minor1 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Minor1);
      }
      if (Minor2 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Minor2);
      }
      if (Minor3 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Minor3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Major1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Major1);
      }
      if (Major2 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Major2);
      }
      if (Major3 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Major3);
      }
      if (Minor1 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Minor1);
      }
      if (Minor2 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Minor2);
      }
      if (Minor3 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Minor3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Major1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Major1);
      }
      if (Major2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Major2);
      }
      if (Major3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Major3);
      }
      if (Minor1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minor1);
      }
      if (Minor2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minor2);
      }
      if (Minor3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minor3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Glyphs other) {
      if (other == null) {
        return;
      }
      if (other.Major1 != 0) {
        Major1 = other.Major1;
      }
      if (other.Major2 != 0) {
        Major2 = other.Major2;
      }
      if (other.Major3 != 0) {
        Major3 = other.Major3;
      }
      if (other.Minor1 != 0) {
        Minor1 = other.Minor1;
      }
      if (other.Minor2 != 0) {
        Minor2 = other.Minor2;
      }
      if (other.Minor3 != 0) {
        Minor3 = other.Minor3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Major1 = input.ReadInt32();
            break;
          }
          case 16: {
            Major2 = input.ReadInt32();
            break;
          }
          case 24: {
            Major3 = input.ReadInt32();
            break;
          }
          case 32: {
            Minor1 = input.ReadInt32();
            break;
          }
          case 40: {
            Minor2 = input.ReadInt32();
            break;
          }
          case 48: {
            Minor3 = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Major1 = input.ReadInt32();
            break;
          }
          case 16: {
            Major2 = input.ReadInt32();
            break;
          }
          case 24: {
            Major3 = input.ReadInt32();
            break;
          }
          case 32: {
            Minor1 = input.ReadInt32();
            break;
          }
          case 40: {
            Minor2 = input.ReadInt32();
            break;
          }
          case 48: {
            Minor3 = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Custom options for a particular cooldown.
  /// </summary>
  public sealed partial class Cooldown : pb::IMessage<Cooldown>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Cooldown> _parser = new pb::MessageParser<Cooldown>(() => new Cooldown());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Cooldown> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cooldown() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cooldown(Cooldown other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      timings_ = other.timings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cooldown Clone() {
      return new Cooldown(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.ActionID id_;
    /// <summary>
    /// Identifies the cooldown to which these settings will apply.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.ActionID Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "timings" field.</summary>
    public const int TimingsFieldNumber = 2;
    private static readonly pb::FieldCodec<double> _repeated_timings_codec
        = pb::FieldCodec.ForDouble(18);
    private readonly pbc::RepeatedField<double> timings_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// Fixed times at which to use this cooldown. Each value corresponds to a usage,
    /// e.g. first value is the first usage, second value is the second usage.
    /// Any usages after the specified timings will occur as soon as possible, subject
    /// to the ShouldActivate() condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Timings {
      get { return timings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Cooldown);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Cooldown other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if(!timings_.Equals(other.timings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      hash ^= timings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      timings_.WriteTo(output, _repeated_timings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      timings_.WriteTo(ref output, _repeated_timings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      size += timings_.CalculateSize(_repeated_timings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Cooldown other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::SirusDbScrapper.UIDatabase.ActionID();
        }
        Id.MergeFrom(other.Id);
      }
      timings_.Add(other.timings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::SirusDbScrapper.UIDatabase.ActionID();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18:
          case 17: {
            timings_.AddEntriesFrom(input, _repeated_timings_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::SirusDbScrapper.UIDatabase.ActionID();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18:
          case 17: {
            timings_.AddEntriesFrom(ref input, _repeated_timings_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Cooldowns : pb::IMessage<Cooldowns>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Cooldowns> _parser = new pb::MessageParser<Cooldowns>(() => new Cooldowns());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Cooldowns> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cooldowns() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cooldowns(Cooldowns other) : this() {
      cooldowns_ = other.cooldowns_.Clone();
      hpPercentForDefensives_ = other.hpPercentForDefensives_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cooldowns Clone() {
      return new Cooldowns(this);
    }

    /// <summary>Field number for the "cooldowns" field.</summary>
    public const int Cooldowns_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.Cooldown> _repeated_cooldowns_codec
        = pb::FieldCodec.ForMessage(10, global::SirusDbScrapper.UIDatabase.Cooldown.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Cooldown> cooldowns_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Cooldown>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Cooldown> Cooldowns_ {
      get { return cooldowns_; }
    }

    /// <summary>Field number for the "hp_percent_for_defensives" field.</summary>
    public const int HpPercentForDefensivesFieldNumber = 2;
    private double hpPercentForDefensives_;
    /// <summary>
    /// % HP threshold, below which defensive cooldowns can be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double HpPercentForDefensives {
      get { return hpPercentForDefensives_; }
      set {
        hpPercentForDefensives_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Cooldowns);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Cooldowns other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cooldowns_.Equals(other.cooldowns_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HpPercentForDefensives, other.HpPercentForDefensives)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cooldowns_.GetHashCode();
      if (HpPercentForDefensives != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HpPercentForDefensives);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      cooldowns_.WriteTo(output, _repeated_cooldowns_codec);
      if (HpPercentForDefensives != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(HpPercentForDefensives);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      cooldowns_.WriteTo(ref output, _repeated_cooldowns_codec);
      if (HpPercentForDefensives != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(HpPercentForDefensives);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += cooldowns_.CalculateSize(_repeated_cooldowns_codec);
      if (HpPercentForDefensives != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Cooldowns other) {
      if (other == null) {
        return;
      }
      cooldowns_.Add(other.cooldowns_);
      if (other.HpPercentForDefensives != 0D) {
        HpPercentForDefensives = other.HpPercentForDefensives;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cooldowns_.AddEntriesFrom(input, _repeated_cooldowns_codec);
            break;
          }
          case 17: {
            HpPercentForDefensives = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            cooldowns_.AddEntriesFrom(ref input, _repeated_cooldowns_codec);
            break;
          }
          case 17: {
            HpPercentForDefensives = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HealingModel : pb::IMessage<HealingModel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HealingModel> _parser = new pb::MessageParser<HealingModel>(() => new HealingModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HealingModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HealingModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HealingModel(HealingModel other) : this() {
      hps_ = other.hps_;
      cadenceSeconds_ = other.cadenceSeconds_;
      cadenceVariation_ = other.cadenceVariation_;
      inspirationUptime_ = other.inspirationUptime_;
      burstWindow_ = other.burstWindow_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HealingModel Clone() {
      return new HealingModel(this);
    }

    /// <summary>Field number for the "hps" field.</summary>
    public const int HpsFieldNumber = 1;
    private double hps_;
    /// <summary>
    /// Healing per second to apply.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Hps {
      get { return hps_; }
      set {
        hps_ = value;
      }
    }

    /// <summary>Field number for the "cadence_seconds" field.</summary>
    public const int CadenceSecondsFieldNumber = 2;
    private double cadenceSeconds_;
    /// <summary>
    /// How often healing is applied.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CadenceSeconds {
      get { return cadenceSeconds_; }
      set {
        cadenceSeconds_ = value;
      }
    }

    /// <summary>Field number for the "cadence_variation" field.</summary>
    public const int CadenceVariationFieldNumber = 5;
    private double cadenceVariation_;
    /// <summary>
    /// Variation in the cadence.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CadenceVariation {
      get { return cadenceVariation_; }
      set {
        cadenceVariation_ = value;
      }
    }

    /// <summary>Field number for the "inspiration_uptime" field.</summary>
    public const int InspirationUptimeFieldNumber = 3;
    private double inspirationUptime_;
    /// <summary>
    /// % Inspiration buff uptime
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double InspirationUptime {
      get { return inspirationUptime_; }
      set {
        inspirationUptime_ = value;
      }
    }

    /// <summary>Field number for the "burst_window" field.</summary>
    public const int BurstWindowFieldNumber = 4;
    private int burstWindow_;
    /// <summary>
    /// TMI burst window bin size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BurstWindow {
      get { return burstWindow_; }
      set {
        burstWindow_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HealingModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HealingModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Hps, other.Hps)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CadenceSeconds, other.CadenceSeconds)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CadenceVariation, other.CadenceVariation)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InspirationUptime, other.InspirationUptime)) return false;
      if (BurstWindow != other.BurstWindow) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Hps != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Hps);
      if (CadenceSeconds != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CadenceSeconds);
      if (CadenceVariation != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CadenceVariation);
      if (InspirationUptime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InspirationUptime);
      if (BurstWindow != 0) hash ^= BurstWindow.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Hps != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Hps);
      }
      if (CadenceSeconds != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(CadenceSeconds);
      }
      if (InspirationUptime != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(InspirationUptime);
      }
      if (BurstWindow != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BurstWindow);
      }
      if (CadenceVariation != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(CadenceVariation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Hps != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Hps);
      }
      if (CadenceSeconds != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(CadenceSeconds);
      }
      if (InspirationUptime != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(InspirationUptime);
      }
      if (BurstWindow != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BurstWindow);
      }
      if (CadenceVariation != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(CadenceVariation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Hps != 0D) {
        size += 1 + 8;
      }
      if (CadenceSeconds != 0D) {
        size += 1 + 8;
      }
      if (CadenceVariation != 0D) {
        size += 1 + 8;
      }
      if (InspirationUptime != 0D) {
        size += 1 + 8;
      }
      if (BurstWindow != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BurstWindow);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HealingModel other) {
      if (other == null) {
        return;
      }
      if (other.Hps != 0D) {
        Hps = other.Hps;
      }
      if (other.CadenceSeconds != 0D) {
        CadenceSeconds = other.CadenceSeconds;
      }
      if (other.CadenceVariation != 0D) {
        CadenceVariation = other.CadenceVariation;
      }
      if (other.InspirationUptime != 0D) {
        InspirationUptime = other.InspirationUptime;
      }
      if (other.BurstWindow != 0) {
        BurstWindow = other.BurstWindow;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Hps = input.ReadDouble();
            break;
          }
          case 17: {
            CadenceSeconds = input.ReadDouble();
            break;
          }
          case 25: {
            InspirationUptime = input.ReadDouble();
            break;
          }
          case 32: {
            BurstWindow = input.ReadInt32();
            break;
          }
          case 41: {
            CadenceVariation = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Hps = input.ReadDouble();
            break;
          }
          case 17: {
            CadenceSeconds = input.ReadDouble();
            break;
          }
          case 25: {
            InspirationUptime = input.ReadDouble();
            break;
          }
          case 32: {
            BurstWindow = input.ReadInt32();
            break;
          }
          case 41: {
            CadenceVariation = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CustomRotation : pb::IMessage<CustomRotation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CustomRotation> _parser = new pb::MessageParser<CustomRotation>(() => new CustomRotation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CustomRotation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomRotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomRotation(CustomRotation other) : this() {
      spells_ = other.spells_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomRotation Clone() {
      return new CustomRotation(this);
    }

    /// <summary>Field number for the "spells" field.</summary>
    public const int SpellsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.CustomSpell> _repeated_spells_codec
        = pb::FieldCodec.ForMessage(10, global::SirusDbScrapper.UIDatabase.CustomSpell.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.CustomSpell> spells_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.CustomSpell>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.CustomSpell> Spells {
      get { return spells_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CustomRotation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CustomRotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!spells_.Equals(other.spells_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= spells_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      spells_.WriteTo(output, _repeated_spells_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      spells_.WriteTo(ref output, _repeated_spells_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += spells_.CalculateSize(_repeated_spells_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CustomRotation other) {
      if (other == null) {
        return;
      }
      spells_.Add(other.spells_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            spells_.AddEntriesFrom(input, _repeated_spells_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            spells_.AddEntriesFrom(ref input, _repeated_spells_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CustomSpell : pb::IMessage<CustomSpell>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CustomSpell> _parser = new pb::MessageParser<CustomSpell>(() => new CustomSpell());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CustomSpell> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomSpell() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomSpell(CustomSpell other) : this() {
      spell_ = other.spell_;
      castsPerMinute_ = other.castsPerMinute_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomSpell Clone() {
      return new CustomSpell(this);
    }

    /// <summary>Field number for the "spell" field.</summary>
    public const int SpellFieldNumber = 1;
    private int spell_;
    /// <summary>
    /// This should usually be a spec-specific enum value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Spell {
      get { return spell_; }
      set {
        spell_ = value;
      }
    }

    /// <summary>Field number for the "casts_per_minute" field.</summary>
    public const int CastsPerMinuteFieldNumber = 2;
    private double castsPerMinute_;
    /// <summary>
    /// Desired cast rate for this spell. Not used by most custom rotations, this is
    /// primarily for healers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CastsPerMinute {
      get { return castsPerMinute_; }
      set {
        castsPerMinute_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CustomSpell);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CustomSpell other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Spell != other.Spell) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CastsPerMinute, other.CastsPerMinute)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Spell != 0) hash ^= Spell.GetHashCode();
      if (CastsPerMinute != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CastsPerMinute);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Spell != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Spell);
      }
      if (CastsPerMinute != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(CastsPerMinute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Spell != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Spell);
      }
      if (CastsPerMinute != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(CastsPerMinute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Spell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Spell);
      }
      if (CastsPerMinute != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CustomSpell other) {
      if (other == null) {
        return;
      }
      if (other.Spell != 0) {
        Spell = other.Spell;
      }
      if (other.CastsPerMinute != 0D) {
        CastsPerMinute = other.CastsPerMinute;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Spell = input.ReadInt32();
            break;
          }
          case 17: {
            CastsPerMinute = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Spell = input.ReadInt32();
            break;
          }
          case 17: {
            CastsPerMinute = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ItemSwap : pb::IMessage<ItemSwap>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemSwap> _parser = new pb::MessageParser<ItemSwap>(() => new ItemSwap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ItemSwap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemSwap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemSwap(ItemSwap other) : this() {
      mhItem_ = other.mhItem_ != null ? other.mhItem_.Clone() : null;
      ohItem_ = other.ohItem_ != null ? other.ohItem_.Clone() : null;
      rangedItem_ = other.rangedItem_ != null ? other.rangedItem_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemSwap Clone() {
      return new ItemSwap(this);
    }

    /// <summary>Field number for the "mh_item" field.</summary>
    public const int MhItemFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.ItemSpec mhItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.ItemSpec MhItem {
      get { return mhItem_; }
      set {
        mhItem_ = value;
      }
    }

    /// <summary>Field number for the "oh_item" field.</summary>
    public const int OhItemFieldNumber = 2;
    private global::SirusDbScrapper.UIDatabase.ItemSpec ohItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.ItemSpec OhItem {
      get { return ohItem_; }
      set {
        ohItem_ = value;
      }
    }

    /// <summary>Field number for the "ranged_item" field.</summary>
    public const int RangedItemFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.ItemSpec rangedItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.ItemSpec RangedItem {
      get { return rangedItem_; }
      set {
        rangedItem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ItemSwap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ItemSwap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MhItem, other.MhItem)) return false;
      if (!object.Equals(OhItem, other.OhItem)) return false;
      if (!object.Equals(RangedItem, other.RangedItem)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (mhItem_ != null) hash ^= MhItem.GetHashCode();
      if (ohItem_ != null) hash ^= OhItem.GetHashCode();
      if (rangedItem_ != null) hash ^= RangedItem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (mhItem_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MhItem);
      }
      if (ohItem_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OhItem);
      }
      if (rangedItem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RangedItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (mhItem_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MhItem);
      }
      if (ohItem_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OhItem);
      }
      if (rangedItem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RangedItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (mhItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MhItem);
      }
      if (ohItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OhItem);
      }
      if (rangedItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RangedItem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ItemSwap other) {
      if (other == null) {
        return;
      }
      if (other.mhItem_ != null) {
        if (mhItem_ == null) {
          MhItem = new global::SirusDbScrapper.UIDatabase.ItemSpec();
        }
        MhItem.MergeFrom(other.MhItem);
      }
      if (other.ohItem_ != null) {
        if (ohItem_ == null) {
          OhItem = new global::SirusDbScrapper.UIDatabase.ItemSpec();
        }
        OhItem.MergeFrom(other.OhItem);
      }
      if (other.rangedItem_ != null) {
        if (rangedItem_ == null) {
          RangedItem = new global::SirusDbScrapper.UIDatabase.ItemSpec();
        }
        RangedItem.MergeFrom(other.RangedItem);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (mhItem_ == null) {
              MhItem = new global::SirusDbScrapper.UIDatabase.ItemSpec();
            }
            input.ReadMessage(MhItem);
            break;
          }
          case 18: {
            if (ohItem_ == null) {
              OhItem = new global::SirusDbScrapper.UIDatabase.ItemSpec();
            }
            input.ReadMessage(OhItem);
            break;
          }
          case 26: {
            if (rangedItem_ == null) {
              RangedItem = new global::SirusDbScrapper.UIDatabase.ItemSpec();
            }
            input.ReadMessage(RangedItem);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (mhItem_ == null) {
              MhItem = new global::SirusDbScrapper.UIDatabase.ItemSpec();
            }
            input.ReadMessage(MhItem);
            break;
          }
          case 18: {
            if (ohItem_ == null) {
              OhItem = new global::SirusDbScrapper.UIDatabase.ItemSpec();
            }
            input.ReadMessage(OhItem);
            break;
          }
          case 26: {
            if (rangedItem_ == null) {
              RangedItem = new global::SirusDbScrapper.UIDatabase.ItemSpec();
            }
            input.ReadMessage(RangedItem);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Duration : pb::IMessage<Duration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Duration> _parser = new pb::MessageParser<Duration>(() => new Duration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Duration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Duration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Duration(Duration other) : this() {
      ms_ = other.ms_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Duration Clone() {
      return new Duration(this);
    }

    /// <summary>Field number for the "ms" field.</summary>
    public const int MsFieldNumber = 1;
    private double ms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Ms {
      get { return ms_; }
      set {
        ms_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Duration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Duration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Ms, other.Ms)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Ms != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Ms);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ms != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Ms);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ms != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Ms);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Ms != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Duration other) {
      if (other == null) {
        return;
      }
      if (other.Ms != 0D) {
        Ms = other.Ms;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Ms = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Ms = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
