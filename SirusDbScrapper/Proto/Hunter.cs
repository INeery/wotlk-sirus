// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: hunter.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SirusDbScrapper.UIDatabase {

  /// <summary>Holder for reflection information generated from hunter.proto</summary>
  public static partial class HunterReflection {

    #region Descriptor
    /// <summary>File descriptor for hunter.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HunterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxodW50ZXIucHJvdG8SBXByb3RvIsgPCg1IdW50ZXJUYWxlbnRzEiMKG2lt",
            "cHJvdmVkX2FzcGVjdF9vZl90aGVfaGF3axgBIAEoBRIaChJlbmR1cmFuY2Vf",
            "dHJhaW5pbmcYAiABKAUSFAoMZm9jdXNlZF9maXJlGAMgASgFEiUKHWltcHJv",
            "dmVkX2FzcGVjdF9vZl90aGVfbW9ua2V5GAQgASgFEhIKCnRoaWNrX2hpZGUY",
            "BSABKAUSGwoTaW1wcm92ZWRfcmV2aXZlX3BldBgGIAEoBRITCgtwYXRoZmlu",
            "ZGluZxgHIAEoBRIWCg5hc3BlY3RfbWFzdGVyeRgIIAEoCBIWCg51bmxlYXNo",
            "ZWRfZnVyeRgJIAEoBRIZChFpbXByb3ZlZF9tZW5kX3BldBgKIAEoBRIQCghm",
            "ZXJvY2l0eRgLIAEoBRITCgtzcGlyaXRfYm9uZBgMIAEoBRIUCgxpbnRpbWlk",
            "YXRpb24YDSABKAgSGgoSYmVzdGlhbF9kaXNjaXBsaW5lGA4gASgFEhYKDmFu",
            "aW1hbF9oYW5kbGVyGA8gASgFEg4KBmZyZW56eRgQIAEoBRIdChVmZXJvY2lv",
            "dXNfaW5zcGlyYXRpb24YESABKAUSFQoNYmVzdGlhbF93cmF0aBgSIAEoCBIY",
            "ChBjYXRsaWtlX3JlZmxleGVzGBMgASgFEhQKDGludmlnb3JhdGlvbhgUIAEo",
            "BRIaChJzZXJwZW50c19zd2lmdG5lc3MYFSABKAUSEQoJbG9uZ2V2aXR5GBYg",
            "ASgFEhgKEHRoZV9iZWFzdF93aXRoaW4YFyABKAgSFQoNY29icmFfc3RyaWtl",
            "cxgYIAEoBRIXCg9raW5kcmVkX3NwaXJpdHMYGSABKAUSFQoNYmVhc3RfbWFz",
            "dGVyeRgaIAEoCBIgChhpbXByb3ZlZF9jb25jdXNzaXZlX3Nob3QYGyABKAUS",
            "EwoLZm9jdXNlZF9haW0YHCABKAUSFAoMbGV0aGFsX3Nob3RzGB0gASgFEhMK",
            "C2NhcmVmdWxfYWltGB4gASgFEh0KFWltcHJvdmVkX2h1bnRlcnNfbWFyaxgf",
            "IAEoBRIUCgxtb3J0YWxfc2hvdHMYICABKAUSGQoRZ29fZm9yX3RoZV90aHJv",
            "YXQYISABKAUSHAoUaW1wcm92ZWRfYXJjYW5lX3Nob3QYIiABKAUSEgoKYWlt",
            "ZWRfc2hvdBgjIAEoCBIVCg1yYXBpZF9raWxsaW5nGCQgASgFEhcKD2ltcHJv",
            "dmVkX3N0aW5ncxglIAEoBRISCgplZmZpY2llbmN5GCYgASgFEhoKEmNvbmN1",
            "c3NpdmVfYmFycmFnZRgnIAEoBRIRCglyZWFkaW5lc3MYKCABKAgSDwoHYmFy",
            "cmFnZRgpIAEoBRIZChFjb21iYXRfZXhwZXJpZW5jZRgqIAEoBRIkChxyYW5n",
            "ZWRfd2VhcG9uX3NwZWNpYWxpemF0aW9uGCsgASgFEhYKDnBpZXJjaW5nX3No",
            "b3RzGCwgASgFEhUKDXRydWVzaG90X2F1cmEYLSABKAgSGAoQaW1wcm92ZWRf",
            "YmFycmFnZRguIAEoBRIXCg9tYXN0ZXJfbWFya3NtYW4YLyABKAUSGgoScmFw",
            "aWRfcmVjdXBlcmF0aW9uGDAgASgFEhMKC3dpbGRfcXVpdmVyGDEgASgFEhYK",
            "DnNpbGVuY2luZ19zaG90GDIgASgIEhwKFGltcHJvdmVkX3N0ZWFkeV9zaG90",
            "GDMgASgFEhgKEG1hcmtlZF9mb3JfZGVhdGgYNCABKAUSFAoMY2hpbWVyYV9z",
            "aG90GDUgASgIEhkKEWltcHJvdmVkX3RyYWNraW5nGDYgASgFEhAKCGhhd2tf",
            "ZXllGDcgASgFEhYKDnNhdmFnZV9zdHJpa2VzGDggASgFEhIKCnN1cmVmb290",
            "ZWQYOSABKAUSEgoKZW50cmFwbWVudBg6IAEoBRIUCgx0cmFwX21hc3RlcnkY",
            "OyABKAUSGgoSc3Vydml2YWxfaW5zdGluY3RzGDwgASgFEhMKC3N1cnZpdmFs",
            "aXN0GD0gASgFEhQKDHNjYXR0ZXJfc2hvdBg+IAEoCBISCgpkZWZsZWN0aW9u",
            "GD8gASgFEhgKEHN1cnZpdmFsX3RhY3RpY3MYQCABKAUSDQoFdF9uX3QYQSAB",
            "KAUSFQoNbG9ja19hbmRfbG9hZBhCIAEoBRIWCg5odW50ZXJfdnNfd2lsZBhD",
            "IAEoBRIXCg9raWxsZXJfaW5zdGluY3QYRCABKAUSFQoNY291bnRlcmF0dGFj",
            "axhFIAEoCBIaChJsaWdodG5pbmdfcmVmbGV4ZXMYRiABKAUSFwoPcmVzb3Vy",
            "Y2VmdWxuZXNzGEcgASgFEhcKD2V4cG9zZV93ZWFrbmVzcxhIIAEoBRIUCgx3",
            "eXZlcm5fc3RpbmcYSSABKAgSGgoSdGhyaWxsX29mX3RoZV9odW50GEogASgF",
            "EhgKEG1hc3Rlcl90YWN0aWNpYW4YSyABKAUSFgoObm94aW91c19zdGluZ3MY",
            "TCABKAUSGgoScG9pbnRfb2Zfbm9fZXNjYXBlGE0gASgFEhMKC2JsYWNrX2Fy",
            "cm93GE4gASgIEhcKD3NuaXBlcl90cmFpbmluZxhPIAEoBRIVCg1odW50aW5n",
            "X3BhcnR5GFAgASgFEhYKDmV4cGxvc2l2ZV9zaG90GFEgASgIIsMGChBIdW50",
            "ZXJQZXRUYWxlbnRzEhYKDmNvYnJhX3JlZmxleGVzGAEgASgFEgwKBGRpdmUY",
            "AiABKAgSFQoNZ3JlYXRfc3RhbWluYRgDIAEoBRIVCg1uYXR1cmFsX2FybW9y",
            "GAQgASgFEhMKC2JvYXJzX3NwZWVkGAUgASgIEhAKCG1vYmlsaXR5GAYgASgF",
            "EhIKCm93bHNfZm9jdXMYByABKAUSFQoNc3Bpa2VkX2NvbGxhchgIIAEoBRIY",
            "ChBjdWxsaW5nX3RoZV9oZXJkGAkgASgFEhMKC2xpb25oZWFydGVkGAogASgF",
            "EhYKDmNhcnJpb25fZmVlZGVyGAsgASgIEhgKEGdyZWF0X3Jlc2lzdGFuY2UY",
            "DCABKAUSEAoIY29ybmVyZWQYDSABKAUSFgoOZmVlZGluZ19mcmVuenkYDiAB",
            "KAUSFgoOd29sdmVyaW5lX2JpdGUYDyABKAgSGAoQcm9hcl9vZl9yZWNvdmVy",
            "eRgQIAEoCBISCgpidWxsaGVhZGVkGBEgASgIEhsKE2dyYWNlX29mX3RoZV9t",
            "YW50aXMYEiABKAUSEQoJd2lsZF9odW50GBMgASgFEhkKEXJvYXJfb2Zfc2Fj",
            "cmlmaWNlGBQgASgIEhYKDmltcHJvdmVkX2Nvd2VyGBUgASgFEhQKDGJsb29k",
            "dGhpcnN0eRgWIAEoBRIcChRoZWFydF9vZl90aGVfcGhlb25peBgXIAEoCBIU",
            "CgxzcGlkZXJzX2JpdGUYGCABKAUSDQoFcmFiaWQYGSABKAgSGAoQbGlja195",
            "b3VyX3dvdW5kcxgaIAEoCBIYChBjYWxsX29mX3RoZV93aWxkGBsgASgIEhQK",
            "DHNoYXJrX2F0dGFjaxgcIAEoBRIOCgZjaGFyZ2UYHSABKAgSGgoSYmxvb2Rf",
            "b2ZfdGhlX3JoaW5vGB4gASgFEhMKC3BldF9iYXJkaW5nGB8gASgFEhEKCWd1",
            "YXJkX2RvZxggIAEoBRIUCgx0aHVuZGVyc3RvbXAYISABKAgSEgoKbGFzdF9z",
            "dGFuZBgiIAEoCBINCgV0YXVudBgjIAEoCBIRCglpbnRlcnZlbmUYJCABKAgS",
            "EgoKc2lsdmVyYmFjaxglIAEoBSKvCgoGSHVudGVyEiYKB29wdGlvbnMYAyAB",
            "KAsyFS5wcm90by5IdW50ZXIuT3B0aW9ucxqTAwoIUm90YXRpb24SMQoEdHlw",
            "ZRgJIAEoDjIjLnByb3RvLkh1bnRlci5Sb3RhdGlvbi5Sb3RhdGlvblR5cGUS",
            "LwoFc3RpbmcYBSABKA4yIC5wcm90by5IdW50ZXIuUm90YXRpb24uU3RpbmdU",
            "eXBlEhIKCnRyYXBfd2VhdmUYASABKAgSIAoYdmlwZXJfc3RhcnRfbWFuYV9w",
            "ZXJjZW50GAYgASgBEh8KF3ZpcGVyX3N0b3BfbWFuYV9wZXJjZW50GAcgASgB",
            "EiUKHWFsbG93X2V4cGxvc2l2ZV9zaG90X2Rvd25yYW5rGAogASgIEh8KF211",
            "bHRpX2RvdF9zZXJwZW50X3N0aW5nGAsgASgIIkYKDFJvdGF0aW9uVHlwZRIP",
            "CgtVbmtub3duVHlwZRAAEhAKDFNpbmdsZVRhcmdldBABEgcKA0FvZRADEgoK",
            "BkN1c3RvbRACIjwKCVN0aW5nVHlwZRILCgdOb1N0aW5nEAASEAoMU2NvcnBp",
            "ZFN0aW5nEAESEAoMU2VycGVudFN0aW5nEAIa5gYKB09wdGlvbnMSKAoEYW1t",
            "bxgBIAEoDjIaLnByb3RvLkh1bnRlci5PcHRpb25zLkFtbW8SLwoIcGV0X3R5",
            "cGUYAiABKA4yHS5wcm90by5IdW50ZXIuT3B0aW9ucy5QZXRUeXBlEiwKC3Bl",
            "dF90YWxlbnRzGAMgASgLMhcucHJvdG8uSHVudGVyUGV0VGFsZW50cxISCgpw",
            "ZXRfdXB0aW1lGAQgASgBEh4KFnNuaXBlcl90cmFpbmluZ191cHRpbWUYByAB",
            "KAESHQoVdGltZV90b190cmFwX3dlYXZlX21zGAggASgBEhgKEHVzZV9odW50",
            "ZXJzX21hcmsYBSABKAgiqgEKBEFtbW8SDAoIQW1tb05vbmUQABIRCg1JY2Vi",
            "bGFkZUFycm93EAESFgoSU2Fyb25pdGVSYXpvcmhlYWRzEAISFAoQVGVycm9y",
            "c2hhZnRBcnJvdxADEhEKDVRpbWVsZXNzQXJyb3cQBBITCg9NeXN0ZXJpb3Vz",
            "QXJyb3cQBRIVChFBZGFtYW50aXRlU3RpbmdlchAGEhQKEEJsYWNrZmxpZ2h0",
            "QXJyb3cQByK3AwoHUGV0VHlwZRILCgdQZXROb25lEAASBwoDQmF0EAESCAoE",
            "QmVhchACEg4KCkJpcmRPZlByZXkQAxIICgRCb2FyEAQSDwoLQ2FycmlvbkJp",
            "cmQQBRIHCgNDYXQQBhIMCghDaGltYWVyYRAHEg0KCUNvcmVIb3VuZBAIEggK",
            "BENyYWIQCRINCglDcm9jb2xpc2sQChINCglEZXZpbHNhdXIQCxIOCgpEcmFn",
            "b25oYXdrEAwSCwoHR29yaWxsYRANEgkKBUh5ZW5hEA4SCAoETW90aBAPEg0K",
            "CU5ldGhlclJheRAQEgoKBlJhcHRvchAREgsKB1JhdmFnZXIQEhIJCgVSaGlu",
            "bxATEgsKB1Njb3JwaWQQFBILCgdTZXJwZW50EBUSDAoIU2lsaXRoaWQQFhIK",
            "CgZTcGlkZXIQFxIPCgtTcGlyaXRCZWFzdBAYEgwKCFNwb3JlQmF0EBkSDwoL",
            "VGFsbHN0cmlkZXIQGhIKCgZUdXJ0bGUQGxIPCgtXYXJwU3RhbGtlchAcEggK",
            "BFdhc3AQHRIPCgtXaW5kU2VycGVudBAeEggKBFdvbGYQHxIICgRXb3JtECAq",
            "2QUKEEh1bnRlck1ham9yR2x5cGgSGAoUSHVudGVyTWFqb3JHbHlwaE5vbmUQ",
            "ABIWChBHbHlwaE9mQWltZWRTaG90EJHPAhIXChFHbHlwaE9mQXJjYW5lU2hv",
            "dBCSzwISHQoXR2x5cGhPZkFzcGVjdE9mVGhlVmlwZXIQlc8CEhkKE0dseXBo",
            "T2ZCZXN0aWFsV3JhdGgQls8CEhgKEkdseXBoT2ZDaGltZXJhU2hvdBC55AIS",
            "FwoRR2x5cGhPZkRldGVycmVuY2UQl88CEhYKEEdseXBoT2ZEaXNlbmdhZ2UQ",
            "mM8CEhoKFEdseXBoT2ZFeHBsb3NpdmVTaG90EKPlAhIaChRHbHlwaE9mRXhw",
            "bG9zaXZlVHJhcBCl5QISGQoTR2x5cGhPZkZyZWV6aW5nVHJhcBCZzwISFgoQ",
            "R2x5cGhPZkZyb3N0VHJhcBCazwISGAoSR2x5cGhPZkh1bnRlcnNNYXJrEJvP",
            "AhIbChVHbHlwaE9mSW1tb2xhdGlvblRyYXAQnM8CEhUKD0dseXBoT2ZLaWxs",
            "U2hvdBCk5QISFAoOR2x5cGhPZk1lbmRpbmcQlM8CEhYKEEdseXBoT2ZNdWx0",
            "aVNob3QQns8CEhYKEEdseXBoT2ZSYXBpZEZpcmUQn88CEhkKE0dseXBoT2ZS",
            "YXB0b3JTdHJpa2UQp+UCEhgKEkdseXBoT2ZTY2F0dGVyU2hvdBCm5QISGQoT",
            "R2x5cGhPZlNlcnBlbnRTdGluZxCgzwISFgoQR2x5cGhPZlNuYWtlVHJhcBCh",
            "zwISFwoRR2x5cGhPZlN0ZWFkeVNob3QQos8CEhUKD0dseXBoT2ZUaGVCZWFz",
            "dBCTzwISFAoOR2x5cGhPZlRoZUhhd2sQnc8CEhkKE0dseXBoT2ZUcnVlc2hv",
            "dEF1cmEQo88CEhMKDUdseXBoT2ZWb2xsZXkQpM8CEhgKEkdseXBoT2ZXeXZl",
            "cm5TdGluZxClzwIqwgEKEEh1bnRlck1pbm9yR2x5cGgSGAoUSHVudGVyTWlu",
            "b3JHbHlwaE5vbmUQABIXChFHbHlwaE9mRmVpZ25EZWF0aBDX0gISFAoOR2x5",
            "cGhPZk1lbmRQZXQQ1tICEh4KGEdseXBoT2ZQb3NzZXNzZWRTdHJlbmd0aBDa",
            "0gISFgoQR2x5cGhPZlJldml2ZVBldBDK0gISFwoRR2x5cGhPZlNjYXJlQmVh",
            "c3QQ3NICEhQKDkdseXBoT2ZUaGVQYWNrENvSAkIdqgIaU2lydXNEYlNjcmFw",
            "cGVyLlVJRGF0YWJhc2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SirusDbScrapper.UIDatabase.HunterMajorGlyph), typeof(global::SirusDbScrapper.UIDatabase.HunterMinorGlyph), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.HunterTalents), global::SirusDbScrapper.UIDatabase.HunterTalents.Parser, new[]{ "ImprovedAspectOfTheHawk", "EnduranceTraining", "FocusedFire", "ImprovedAspectOfTheMonkey", "ThickHide", "ImprovedRevivePet", "Pathfinding", "AspectMastery", "UnleashedFury", "ImprovedMendPet", "Ferocity", "SpiritBond", "Intimidation", "BestialDiscipline", "AnimalHandler", "Frenzy", "FerociousInspiration", "BestialWrath", "CatlikeReflexes", "Invigoration", "SerpentsSwiftness", "Longevity", "TheBeastWithin", "CobraStrikes", "KindredSpirits", "BeastMastery", "ImprovedConcussiveShot", "FocusedAim", "LethalShots", "CarefulAim", "ImprovedHuntersMark", "MortalShots", "GoForTheThroat", "ImprovedArcaneShot", "AimedShot", "RapidKilling", "ImprovedStings", "Efficiency", "ConcussiveBarrage", "Readiness", "Barrage", "CombatExperience", "RangedWeaponSpecialization", "PiercingShots", "TrueshotAura", "ImprovedBarrage", "MasterMarksman", "RapidRecuperation", "WildQuiver", "SilencingShot", "ImprovedSteadyShot", "MarkedForDeath", "ChimeraShot", "ImprovedTracking", "HawkEye", "SavageStrikes", "Surefooted", "Entrapment", "TrapMastery", "SurvivalInstincts", "Survivalist", "ScatterShot", "Deflection", "SurvivalTactics", "TNT", "LockAndLoad", "HunterVsWild", "KillerInstinct", "Counterattack", "LightningReflexes", "Resourcefulness", "ExposeWeakness", "WyvernSting", "ThrillOfTheHunt", "MasterTactician", "NoxiousStings", "PointOfNoEscape", "BlackArrow", "SniperTraining", "HuntingParty", "ExplosiveShot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.HunterPetTalents), global::SirusDbScrapper.UIDatabase.HunterPetTalents.Parser, new[]{ "CobraReflexes", "Dive", "GreatStamina", "NaturalArmor", "BoarsSpeed", "Mobility", "OwlsFocus", "SpikedCollar", "CullingTheHerd", "Lionhearted", "CarrionFeeder", "GreatResistance", "Cornered", "FeedingFrenzy", "WolverineBite", "RoarOfRecovery", "Bullheaded", "GraceOfTheMantis", "WildHunt", "RoarOfSacrifice", "ImprovedCower", "Bloodthirsty", "HeartOfThePheonix", "SpidersBite", "Rabid", "LickYourWounds", "CallOfTheWild", "SharkAttack", "Charge", "BloodOfTheRhino", "PetBarding", "GuardDog", "Thunderstomp", "LastStand", "Taunt", "Intervene", "Silverback" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.Hunter), global::SirusDbScrapper.UIDatabase.Hunter.Parser, new[]{ "Options" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation), global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Parser, new[]{ "Type", "Sting", "TrapWeave", "ViperStartManaPercent", "ViperStopManaPercent", "AllowExplosiveShotDownrank", "MultiDotSerpentSting" }, null, new[]{ typeof(global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.RotationType), typeof(global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.StingType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.Hunter.Types.Options), global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Parser, new[]{ "Ammo", "PetType", "PetTalents", "PetUptime", "SniperTrainingUptime", "TimeToTrapWeaveMs", "UseHuntersMark" }, null, new[]{ typeof(global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.Ammo), typeof(global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.PetType) }, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  public enum HunterMajorGlyph {
    [pbr::OriginalName("HunterMajorGlyphNone")] None = 0,
    [pbr::OriginalName("GlyphOfAimedShot")] GlyphOfAimedShot = 42897,
    [pbr::OriginalName("GlyphOfArcaneShot")] GlyphOfArcaneShot = 42898,
    [pbr::OriginalName("GlyphOfAspectOfTheViper")] GlyphOfAspectOfTheViper = 42901,
    [pbr::OriginalName("GlyphOfBestialWrath")] GlyphOfBestialWrath = 42902,
    [pbr::OriginalName("GlyphOfChimeraShot")] GlyphOfChimeraShot = 45625,
    [pbr::OriginalName("GlyphOfDeterrence")] GlyphOfDeterrence = 42903,
    [pbr::OriginalName("GlyphOfDisengage")] GlyphOfDisengage = 42904,
    [pbr::OriginalName("GlyphOfExplosiveShot")] GlyphOfExplosiveShot = 45731,
    [pbr::OriginalName("GlyphOfExplosiveTrap")] GlyphOfExplosiveTrap = 45733,
    [pbr::OriginalName("GlyphOfFreezingTrap")] GlyphOfFreezingTrap = 42905,
    [pbr::OriginalName("GlyphOfFrostTrap")] GlyphOfFrostTrap = 42906,
    [pbr::OriginalName("GlyphOfHuntersMark")] GlyphOfHuntersMark = 42907,
    [pbr::OriginalName("GlyphOfImmolationTrap")] GlyphOfImmolationTrap = 42908,
    [pbr::OriginalName("GlyphOfKillShot")] GlyphOfKillShot = 45732,
    [pbr::OriginalName("GlyphOfMending")] GlyphOfMending = 42900,
    [pbr::OriginalName("GlyphOfMultiShot")] GlyphOfMultiShot = 42910,
    [pbr::OriginalName("GlyphOfRapidFire")] GlyphOfRapidFire = 42911,
    [pbr::OriginalName("GlyphOfRaptorStrike")] GlyphOfRaptorStrike = 45735,
    [pbr::OriginalName("GlyphOfScatterShot")] GlyphOfScatterShot = 45734,
    [pbr::OriginalName("GlyphOfSerpentSting")] GlyphOfSerpentSting = 42912,
    [pbr::OriginalName("GlyphOfSnakeTrap")] GlyphOfSnakeTrap = 42913,
    [pbr::OriginalName("GlyphOfSteadyShot")] GlyphOfSteadyShot = 42914,
    [pbr::OriginalName("GlyphOfTheBeast")] GlyphOfTheBeast = 42899,
    [pbr::OriginalName("GlyphOfTheHawk")] GlyphOfTheHawk = 42909,
    [pbr::OriginalName("GlyphOfTrueshotAura")] GlyphOfTrueshotAura = 42915,
    [pbr::OriginalName("GlyphOfVolley")] GlyphOfVolley = 42916,
    [pbr::OriginalName("GlyphOfWyvernSting")] GlyphOfWyvernSting = 42917,
  }

  public enum HunterMinorGlyph {
    [pbr::OriginalName("HunterMinorGlyphNone")] None = 0,
    [pbr::OriginalName("GlyphOfFeignDeath")] GlyphOfFeignDeath = 43351,
    [pbr::OriginalName("GlyphOfMendPet")] GlyphOfMendPet = 43350,
    [pbr::OriginalName("GlyphOfPossessedStrength")] GlyphOfPossessedStrength = 43354,
    [pbr::OriginalName("GlyphOfRevivePet")] GlyphOfRevivePet = 43338,
    [pbr::OriginalName("GlyphOfScareBeast")] GlyphOfScareBeast = 43356,
    [pbr::OriginalName("GlyphOfThePack")] GlyphOfThePack = 43355,
  }

  #endregion

  #region Messages
  public sealed partial class HunterTalents : pb::IMessage<HunterTalents>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HunterTalents> _parser = new pb::MessageParser<HunterTalents>(() => new HunterTalents());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HunterTalents> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.HunterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HunterTalents() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HunterTalents(HunterTalents other) : this() {
      improvedAspectOfTheHawk_ = other.improvedAspectOfTheHawk_;
      enduranceTraining_ = other.enduranceTraining_;
      focusedFire_ = other.focusedFire_;
      improvedAspectOfTheMonkey_ = other.improvedAspectOfTheMonkey_;
      thickHide_ = other.thickHide_;
      improvedRevivePet_ = other.improvedRevivePet_;
      pathfinding_ = other.pathfinding_;
      aspectMastery_ = other.aspectMastery_;
      unleashedFury_ = other.unleashedFury_;
      improvedMendPet_ = other.improvedMendPet_;
      ferocity_ = other.ferocity_;
      spiritBond_ = other.spiritBond_;
      intimidation_ = other.intimidation_;
      bestialDiscipline_ = other.bestialDiscipline_;
      animalHandler_ = other.animalHandler_;
      frenzy_ = other.frenzy_;
      ferociousInspiration_ = other.ferociousInspiration_;
      bestialWrath_ = other.bestialWrath_;
      catlikeReflexes_ = other.catlikeReflexes_;
      invigoration_ = other.invigoration_;
      serpentsSwiftness_ = other.serpentsSwiftness_;
      longevity_ = other.longevity_;
      theBeastWithin_ = other.theBeastWithin_;
      cobraStrikes_ = other.cobraStrikes_;
      kindredSpirits_ = other.kindredSpirits_;
      beastMastery_ = other.beastMastery_;
      improvedConcussiveShot_ = other.improvedConcussiveShot_;
      focusedAim_ = other.focusedAim_;
      lethalShots_ = other.lethalShots_;
      carefulAim_ = other.carefulAim_;
      improvedHuntersMark_ = other.improvedHuntersMark_;
      mortalShots_ = other.mortalShots_;
      goForTheThroat_ = other.goForTheThroat_;
      improvedArcaneShot_ = other.improvedArcaneShot_;
      aimedShot_ = other.aimedShot_;
      rapidKilling_ = other.rapidKilling_;
      improvedStings_ = other.improvedStings_;
      efficiency_ = other.efficiency_;
      concussiveBarrage_ = other.concussiveBarrage_;
      readiness_ = other.readiness_;
      barrage_ = other.barrage_;
      combatExperience_ = other.combatExperience_;
      rangedWeaponSpecialization_ = other.rangedWeaponSpecialization_;
      piercingShots_ = other.piercingShots_;
      trueshotAura_ = other.trueshotAura_;
      improvedBarrage_ = other.improvedBarrage_;
      masterMarksman_ = other.masterMarksman_;
      rapidRecuperation_ = other.rapidRecuperation_;
      wildQuiver_ = other.wildQuiver_;
      silencingShot_ = other.silencingShot_;
      improvedSteadyShot_ = other.improvedSteadyShot_;
      markedForDeath_ = other.markedForDeath_;
      chimeraShot_ = other.chimeraShot_;
      improvedTracking_ = other.improvedTracking_;
      hawkEye_ = other.hawkEye_;
      savageStrikes_ = other.savageStrikes_;
      surefooted_ = other.surefooted_;
      entrapment_ = other.entrapment_;
      trapMastery_ = other.trapMastery_;
      survivalInstincts_ = other.survivalInstincts_;
      survivalist_ = other.survivalist_;
      scatterShot_ = other.scatterShot_;
      deflection_ = other.deflection_;
      survivalTactics_ = other.survivalTactics_;
      tNT_ = other.tNT_;
      lockAndLoad_ = other.lockAndLoad_;
      hunterVsWild_ = other.hunterVsWild_;
      killerInstinct_ = other.killerInstinct_;
      counterattack_ = other.counterattack_;
      lightningReflexes_ = other.lightningReflexes_;
      resourcefulness_ = other.resourcefulness_;
      exposeWeakness_ = other.exposeWeakness_;
      wyvernSting_ = other.wyvernSting_;
      thrillOfTheHunt_ = other.thrillOfTheHunt_;
      masterTactician_ = other.masterTactician_;
      noxiousStings_ = other.noxiousStings_;
      pointOfNoEscape_ = other.pointOfNoEscape_;
      blackArrow_ = other.blackArrow_;
      sniperTraining_ = other.sniperTraining_;
      huntingParty_ = other.huntingParty_;
      explosiveShot_ = other.explosiveShot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HunterTalents Clone() {
      return new HunterTalents(this);
    }

    /// <summary>Field number for the "improved_aspect_of_the_hawk" field.</summary>
    public const int ImprovedAspectOfTheHawkFieldNumber = 1;
    private int improvedAspectOfTheHawk_;
    /// <summary>
    /// Beast Mastery
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedAspectOfTheHawk {
      get { return improvedAspectOfTheHawk_; }
      set {
        improvedAspectOfTheHawk_ = value;
      }
    }

    /// <summary>Field number for the "endurance_training" field.</summary>
    public const int EnduranceTrainingFieldNumber = 2;
    private int enduranceTraining_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EnduranceTraining {
      get { return enduranceTraining_; }
      set {
        enduranceTraining_ = value;
      }
    }

    /// <summary>Field number for the "focused_fire" field.</summary>
    public const int FocusedFireFieldNumber = 3;
    private int focusedFire_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FocusedFire {
      get { return focusedFire_; }
      set {
        focusedFire_ = value;
      }
    }

    /// <summary>Field number for the "improved_aspect_of_the_monkey" field.</summary>
    public const int ImprovedAspectOfTheMonkeyFieldNumber = 4;
    private int improvedAspectOfTheMonkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedAspectOfTheMonkey {
      get { return improvedAspectOfTheMonkey_; }
      set {
        improvedAspectOfTheMonkey_ = value;
      }
    }

    /// <summary>Field number for the "thick_hide" field.</summary>
    public const int ThickHideFieldNumber = 5;
    private int thickHide_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThickHide {
      get { return thickHide_; }
      set {
        thickHide_ = value;
      }
    }

    /// <summary>Field number for the "improved_revive_pet" field.</summary>
    public const int ImprovedRevivePetFieldNumber = 6;
    private int improvedRevivePet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedRevivePet {
      get { return improvedRevivePet_; }
      set {
        improvedRevivePet_ = value;
      }
    }

    /// <summary>Field number for the "pathfinding" field.</summary>
    public const int PathfindingFieldNumber = 7;
    private int pathfinding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Pathfinding {
      get { return pathfinding_; }
      set {
        pathfinding_ = value;
      }
    }

    /// <summary>Field number for the "aspect_mastery" field.</summary>
    public const int AspectMasteryFieldNumber = 8;
    private bool aspectMastery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AspectMastery {
      get { return aspectMastery_; }
      set {
        aspectMastery_ = value;
      }
    }

    /// <summary>Field number for the "unleashed_fury" field.</summary>
    public const int UnleashedFuryFieldNumber = 9;
    private int unleashedFury_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnleashedFury {
      get { return unleashedFury_; }
      set {
        unleashedFury_ = value;
      }
    }

    /// <summary>Field number for the "improved_mend_pet" field.</summary>
    public const int ImprovedMendPetFieldNumber = 10;
    private int improvedMendPet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedMendPet {
      get { return improvedMendPet_; }
      set {
        improvedMendPet_ = value;
      }
    }

    /// <summary>Field number for the "ferocity" field.</summary>
    public const int FerocityFieldNumber = 11;
    private int ferocity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ferocity {
      get { return ferocity_; }
      set {
        ferocity_ = value;
      }
    }

    /// <summary>Field number for the "spirit_bond" field.</summary>
    public const int SpiritBondFieldNumber = 12;
    private int spiritBond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpiritBond {
      get { return spiritBond_; }
      set {
        spiritBond_ = value;
      }
    }

    /// <summary>Field number for the "intimidation" field.</summary>
    public const int IntimidationFieldNumber = 13;
    private bool intimidation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Intimidation {
      get { return intimidation_; }
      set {
        intimidation_ = value;
      }
    }

    /// <summary>Field number for the "bestial_discipline" field.</summary>
    public const int BestialDisciplineFieldNumber = 14;
    private int bestialDiscipline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BestialDiscipline {
      get { return bestialDiscipline_; }
      set {
        bestialDiscipline_ = value;
      }
    }

    /// <summary>Field number for the "animal_handler" field.</summary>
    public const int AnimalHandlerFieldNumber = 15;
    private int animalHandler_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AnimalHandler {
      get { return animalHandler_; }
      set {
        animalHandler_ = value;
      }
    }

    /// <summary>Field number for the "frenzy" field.</summary>
    public const int FrenzyFieldNumber = 16;
    private int frenzy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Frenzy {
      get { return frenzy_; }
      set {
        frenzy_ = value;
      }
    }

    /// <summary>Field number for the "ferocious_inspiration" field.</summary>
    public const int FerociousInspirationFieldNumber = 17;
    private int ferociousInspiration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FerociousInspiration {
      get { return ferociousInspiration_; }
      set {
        ferociousInspiration_ = value;
      }
    }

    /// <summary>Field number for the "bestial_wrath" field.</summary>
    public const int BestialWrathFieldNumber = 18;
    private bool bestialWrath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BestialWrath {
      get { return bestialWrath_; }
      set {
        bestialWrath_ = value;
      }
    }

    /// <summary>Field number for the "catlike_reflexes" field.</summary>
    public const int CatlikeReflexesFieldNumber = 19;
    private int catlikeReflexes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CatlikeReflexes {
      get { return catlikeReflexes_; }
      set {
        catlikeReflexes_ = value;
      }
    }

    /// <summary>Field number for the "invigoration" field.</summary>
    public const int InvigorationFieldNumber = 20;
    private int invigoration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Invigoration {
      get { return invigoration_; }
      set {
        invigoration_ = value;
      }
    }

    /// <summary>Field number for the "serpents_swiftness" field.</summary>
    public const int SerpentsSwiftnessFieldNumber = 21;
    private int serpentsSwiftness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SerpentsSwiftness {
      get { return serpentsSwiftness_; }
      set {
        serpentsSwiftness_ = value;
      }
    }

    /// <summary>Field number for the "longevity" field.</summary>
    public const int LongevityFieldNumber = 22;
    private int longevity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Longevity {
      get { return longevity_; }
      set {
        longevity_ = value;
      }
    }

    /// <summary>Field number for the "the_beast_within" field.</summary>
    public const int TheBeastWithinFieldNumber = 23;
    private bool theBeastWithin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TheBeastWithin {
      get { return theBeastWithin_; }
      set {
        theBeastWithin_ = value;
      }
    }

    /// <summary>Field number for the "cobra_strikes" field.</summary>
    public const int CobraStrikesFieldNumber = 24;
    private int cobraStrikes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CobraStrikes {
      get { return cobraStrikes_; }
      set {
        cobraStrikes_ = value;
      }
    }

    /// <summary>Field number for the "kindred_spirits" field.</summary>
    public const int KindredSpiritsFieldNumber = 25;
    private int kindredSpirits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int KindredSpirits {
      get { return kindredSpirits_; }
      set {
        kindredSpirits_ = value;
      }
    }

    /// <summary>Field number for the "beast_mastery" field.</summary>
    public const int BeastMasteryFieldNumber = 26;
    private bool beastMastery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BeastMastery {
      get { return beastMastery_; }
      set {
        beastMastery_ = value;
      }
    }

    /// <summary>Field number for the "improved_concussive_shot" field.</summary>
    public const int ImprovedConcussiveShotFieldNumber = 27;
    private int improvedConcussiveShot_;
    /// <summary>
    /// Marksmanship
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedConcussiveShot {
      get { return improvedConcussiveShot_; }
      set {
        improvedConcussiveShot_ = value;
      }
    }

    /// <summary>Field number for the "focused_aim" field.</summary>
    public const int FocusedAimFieldNumber = 28;
    private int focusedAim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FocusedAim {
      get { return focusedAim_; }
      set {
        focusedAim_ = value;
      }
    }

    /// <summary>Field number for the "lethal_shots" field.</summary>
    public const int LethalShotsFieldNumber = 29;
    private int lethalShots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LethalShots {
      get { return lethalShots_; }
      set {
        lethalShots_ = value;
      }
    }

    /// <summary>Field number for the "careful_aim" field.</summary>
    public const int CarefulAimFieldNumber = 30;
    private int carefulAim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CarefulAim {
      get { return carefulAim_; }
      set {
        carefulAim_ = value;
      }
    }

    /// <summary>Field number for the "improved_hunters_mark" field.</summary>
    public const int ImprovedHuntersMarkFieldNumber = 31;
    private int improvedHuntersMark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedHuntersMark {
      get { return improvedHuntersMark_; }
      set {
        improvedHuntersMark_ = value;
      }
    }

    /// <summary>Field number for the "mortal_shots" field.</summary>
    public const int MortalShotsFieldNumber = 32;
    private int mortalShots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MortalShots {
      get { return mortalShots_; }
      set {
        mortalShots_ = value;
      }
    }

    /// <summary>Field number for the "go_for_the_throat" field.</summary>
    public const int GoForTheThroatFieldNumber = 33;
    private int goForTheThroat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GoForTheThroat {
      get { return goForTheThroat_; }
      set {
        goForTheThroat_ = value;
      }
    }

    /// <summary>Field number for the "improved_arcane_shot" field.</summary>
    public const int ImprovedArcaneShotFieldNumber = 34;
    private int improvedArcaneShot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedArcaneShot {
      get { return improvedArcaneShot_; }
      set {
        improvedArcaneShot_ = value;
      }
    }

    /// <summary>Field number for the "aimed_shot" field.</summary>
    public const int AimedShotFieldNumber = 35;
    private bool aimedShot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AimedShot {
      get { return aimedShot_; }
      set {
        aimedShot_ = value;
      }
    }

    /// <summary>Field number for the "rapid_killing" field.</summary>
    public const int RapidKillingFieldNumber = 36;
    private int rapidKilling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RapidKilling {
      get { return rapidKilling_; }
      set {
        rapidKilling_ = value;
      }
    }

    /// <summary>Field number for the "improved_stings" field.</summary>
    public const int ImprovedStingsFieldNumber = 37;
    private int improvedStings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedStings {
      get { return improvedStings_; }
      set {
        improvedStings_ = value;
      }
    }

    /// <summary>Field number for the "efficiency" field.</summary>
    public const int EfficiencyFieldNumber = 38;
    private int efficiency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Efficiency {
      get { return efficiency_; }
      set {
        efficiency_ = value;
      }
    }

    /// <summary>Field number for the "concussive_barrage" field.</summary>
    public const int ConcussiveBarrageFieldNumber = 39;
    private int concussiveBarrage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ConcussiveBarrage {
      get { return concussiveBarrage_; }
      set {
        concussiveBarrage_ = value;
      }
    }

    /// <summary>Field number for the "readiness" field.</summary>
    public const int ReadinessFieldNumber = 40;
    private bool readiness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Readiness {
      get { return readiness_; }
      set {
        readiness_ = value;
      }
    }

    /// <summary>Field number for the "barrage" field.</summary>
    public const int BarrageFieldNumber = 41;
    private int barrage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Barrage {
      get { return barrage_; }
      set {
        barrage_ = value;
      }
    }

    /// <summary>Field number for the "combat_experience" field.</summary>
    public const int CombatExperienceFieldNumber = 42;
    private int combatExperience_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CombatExperience {
      get { return combatExperience_; }
      set {
        combatExperience_ = value;
      }
    }

    /// <summary>Field number for the "ranged_weapon_specialization" field.</summary>
    public const int RangedWeaponSpecializationFieldNumber = 43;
    private int rangedWeaponSpecialization_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RangedWeaponSpecialization {
      get { return rangedWeaponSpecialization_; }
      set {
        rangedWeaponSpecialization_ = value;
      }
    }

    /// <summary>Field number for the "piercing_shots" field.</summary>
    public const int PiercingShotsFieldNumber = 44;
    private int piercingShots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PiercingShots {
      get { return piercingShots_; }
      set {
        piercingShots_ = value;
      }
    }

    /// <summary>Field number for the "trueshot_aura" field.</summary>
    public const int TrueshotAuraFieldNumber = 45;
    private bool trueshotAura_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TrueshotAura {
      get { return trueshotAura_; }
      set {
        trueshotAura_ = value;
      }
    }

    /// <summary>Field number for the "improved_barrage" field.</summary>
    public const int ImprovedBarrageFieldNumber = 46;
    private int improvedBarrage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedBarrage {
      get { return improvedBarrage_; }
      set {
        improvedBarrage_ = value;
      }
    }

    /// <summary>Field number for the "master_marksman" field.</summary>
    public const int MasterMarksmanFieldNumber = 47;
    private int masterMarksman_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MasterMarksman {
      get { return masterMarksman_; }
      set {
        masterMarksman_ = value;
      }
    }

    /// <summary>Field number for the "rapid_recuperation" field.</summary>
    public const int RapidRecuperationFieldNumber = 48;
    private int rapidRecuperation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RapidRecuperation {
      get { return rapidRecuperation_; }
      set {
        rapidRecuperation_ = value;
      }
    }

    /// <summary>Field number for the "wild_quiver" field.</summary>
    public const int WildQuiverFieldNumber = 49;
    private int wildQuiver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WildQuiver {
      get { return wildQuiver_; }
      set {
        wildQuiver_ = value;
      }
    }

    /// <summary>Field number for the "silencing_shot" field.</summary>
    public const int SilencingShotFieldNumber = 50;
    private bool silencingShot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SilencingShot {
      get { return silencingShot_; }
      set {
        silencingShot_ = value;
      }
    }

    /// <summary>Field number for the "improved_steady_shot" field.</summary>
    public const int ImprovedSteadyShotFieldNumber = 51;
    private int improvedSteadyShot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedSteadyShot {
      get { return improvedSteadyShot_; }
      set {
        improvedSteadyShot_ = value;
      }
    }

    /// <summary>Field number for the "marked_for_death" field.</summary>
    public const int MarkedForDeathFieldNumber = 52;
    private int markedForDeath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MarkedForDeath {
      get { return markedForDeath_; }
      set {
        markedForDeath_ = value;
      }
    }

    /// <summary>Field number for the "chimera_shot" field.</summary>
    public const int ChimeraShotFieldNumber = 53;
    private bool chimeraShot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ChimeraShot {
      get { return chimeraShot_; }
      set {
        chimeraShot_ = value;
      }
    }

    /// <summary>Field number for the "improved_tracking" field.</summary>
    public const int ImprovedTrackingFieldNumber = 54;
    private int improvedTracking_;
    /// <summary>
    /// Survival
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedTracking {
      get { return improvedTracking_; }
      set {
        improvedTracking_ = value;
      }
    }

    /// <summary>Field number for the "hawk_eye" field.</summary>
    public const int HawkEyeFieldNumber = 55;
    private int hawkEye_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HawkEye {
      get { return hawkEye_; }
      set {
        hawkEye_ = value;
      }
    }

    /// <summary>Field number for the "savage_strikes" field.</summary>
    public const int SavageStrikesFieldNumber = 56;
    private int savageStrikes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SavageStrikes {
      get { return savageStrikes_; }
      set {
        savageStrikes_ = value;
      }
    }

    /// <summary>Field number for the "surefooted" field.</summary>
    public const int SurefootedFieldNumber = 57;
    private int surefooted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Surefooted {
      get { return surefooted_; }
      set {
        surefooted_ = value;
      }
    }

    /// <summary>Field number for the "entrapment" field.</summary>
    public const int EntrapmentFieldNumber = 58;
    private int entrapment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Entrapment {
      get { return entrapment_; }
      set {
        entrapment_ = value;
      }
    }

    /// <summary>Field number for the "trap_mastery" field.</summary>
    public const int TrapMasteryFieldNumber = 59;
    private int trapMastery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrapMastery {
      get { return trapMastery_; }
      set {
        trapMastery_ = value;
      }
    }

    /// <summary>Field number for the "survival_instincts" field.</summary>
    public const int SurvivalInstinctsFieldNumber = 60;
    private int survivalInstincts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SurvivalInstincts {
      get { return survivalInstincts_; }
      set {
        survivalInstincts_ = value;
      }
    }

    /// <summary>Field number for the "survivalist" field.</summary>
    public const int SurvivalistFieldNumber = 61;
    private int survivalist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Survivalist {
      get { return survivalist_; }
      set {
        survivalist_ = value;
      }
    }

    /// <summary>Field number for the "scatter_shot" field.</summary>
    public const int ScatterShotFieldNumber = 62;
    private bool scatterShot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ScatterShot {
      get { return scatterShot_; }
      set {
        scatterShot_ = value;
      }
    }

    /// <summary>Field number for the "deflection" field.</summary>
    public const int DeflectionFieldNumber = 63;
    private int deflection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Deflection {
      get { return deflection_; }
      set {
        deflection_ = value;
      }
    }

    /// <summary>Field number for the "survival_tactics" field.</summary>
    public const int SurvivalTacticsFieldNumber = 64;
    private int survivalTactics_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SurvivalTactics {
      get { return survivalTactics_; }
      set {
        survivalTactics_ = value;
      }
    }

    /// <summary>Field number for the "t_n_t" field.</summary>
    public const int TNTFieldNumber = 65;
    private int tNT_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TNT {
      get { return tNT_; }
      set {
        tNT_ = value;
      }
    }

    /// <summary>Field number for the "lock_and_load" field.</summary>
    public const int LockAndLoadFieldNumber = 66;
    private int lockAndLoad_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LockAndLoad {
      get { return lockAndLoad_; }
      set {
        lockAndLoad_ = value;
      }
    }

    /// <summary>Field number for the "hunter_vs_wild" field.</summary>
    public const int HunterVsWildFieldNumber = 67;
    private int hunterVsWild_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HunterVsWild {
      get { return hunterVsWild_; }
      set {
        hunterVsWild_ = value;
      }
    }

    /// <summary>Field number for the "killer_instinct" field.</summary>
    public const int KillerInstinctFieldNumber = 68;
    private int killerInstinct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int KillerInstinct {
      get { return killerInstinct_; }
      set {
        killerInstinct_ = value;
      }
    }

    /// <summary>Field number for the "counterattack" field.</summary>
    public const int CounterattackFieldNumber = 69;
    private bool counterattack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Counterattack {
      get { return counterattack_; }
      set {
        counterattack_ = value;
      }
    }

    /// <summary>Field number for the "lightning_reflexes" field.</summary>
    public const int LightningReflexesFieldNumber = 70;
    private int lightningReflexes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LightningReflexes {
      get { return lightningReflexes_; }
      set {
        lightningReflexes_ = value;
      }
    }

    /// <summary>Field number for the "resourcefulness" field.</summary>
    public const int ResourcefulnessFieldNumber = 71;
    private int resourcefulness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Resourcefulness {
      get { return resourcefulness_; }
      set {
        resourcefulness_ = value;
      }
    }

    /// <summary>Field number for the "expose_weakness" field.</summary>
    public const int ExposeWeaknessFieldNumber = 72;
    private int exposeWeakness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExposeWeakness {
      get { return exposeWeakness_; }
      set {
        exposeWeakness_ = value;
      }
    }

    /// <summary>Field number for the "wyvern_sting" field.</summary>
    public const int WyvernStingFieldNumber = 73;
    private bool wyvernSting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WyvernSting {
      get { return wyvernSting_; }
      set {
        wyvernSting_ = value;
      }
    }

    /// <summary>Field number for the "thrill_of_the_hunt" field.</summary>
    public const int ThrillOfTheHuntFieldNumber = 74;
    private int thrillOfTheHunt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThrillOfTheHunt {
      get { return thrillOfTheHunt_; }
      set {
        thrillOfTheHunt_ = value;
      }
    }

    /// <summary>Field number for the "master_tactician" field.</summary>
    public const int MasterTacticianFieldNumber = 75;
    private int masterTactician_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MasterTactician {
      get { return masterTactician_; }
      set {
        masterTactician_ = value;
      }
    }

    /// <summary>Field number for the "noxious_stings" field.</summary>
    public const int NoxiousStingsFieldNumber = 76;
    private int noxiousStings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NoxiousStings {
      get { return noxiousStings_; }
      set {
        noxiousStings_ = value;
      }
    }

    /// <summary>Field number for the "point_of_no_escape" field.</summary>
    public const int PointOfNoEscapeFieldNumber = 77;
    private int pointOfNoEscape_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PointOfNoEscape {
      get { return pointOfNoEscape_; }
      set {
        pointOfNoEscape_ = value;
      }
    }

    /// <summary>Field number for the "black_arrow" field.</summary>
    public const int BlackArrowFieldNumber = 78;
    private bool blackArrow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BlackArrow {
      get { return blackArrow_; }
      set {
        blackArrow_ = value;
      }
    }

    /// <summary>Field number for the "sniper_training" field.</summary>
    public const int SniperTrainingFieldNumber = 79;
    private int sniperTraining_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SniperTraining {
      get { return sniperTraining_; }
      set {
        sniperTraining_ = value;
      }
    }

    /// <summary>Field number for the "hunting_party" field.</summary>
    public const int HuntingPartyFieldNumber = 80;
    private int huntingParty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HuntingParty {
      get { return huntingParty_; }
      set {
        huntingParty_ = value;
      }
    }

    /// <summary>Field number for the "explosive_shot" field.</summary>
    public const int ExplosiveShotFieldNumber = 81;
    private bool explosiveShot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ExplosiveShot {
      get { return explosiveShot_; }
      set {
        explosiveShot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HunterTalents);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HunterTalents other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ImprovedAspectOfTheHawk != other.ImprovedAspectOfTheHawk) return false;
      if (EnduranceTraining != other.EnduranceTraining) return false;
      if (FocusedFire != other.FocusedFire) return false;
      if (ImprovedAspectOfTheMonkey != other.ImprovedAspectOfTheMonkey) return false;
      if (ThickHide != other.ThickHide) return false;
      if (ImprovedRevivePet != other.ImprovedRevivePet) return false;
      if (Pathfinding != other.Pathfinding) return false;
      if (AspectMastery != other.AspectMastery) return false;
      if (UnleashedFury != other.UnleashedFury) return false;
      if (ImprovedMendPet != other.ImprovedMendPet) return false;
      if (Ferocity != other.Ferocity) return false;
      if (SpiritBond != other.SpiritBond) return false;
      if (Intimidation != other.Intimidation) return false;
      if (BestialDiscipline != other.BestialDiscipline) return false;
      if (AnimalHandler != other.AnimalHandler) return false;
      if (Frenzy != other.Frenzy) return false;
      if (FerociousInspiration != other.FerociousInspiration) return false;
      if (BestialWrath != other.BestialWrath) return false;
      if (CatlikeReflexes != other.CatlikeReflexes) return false;
      if (Invigoration != other.Invigoration) return false;
      if (SerpentsSwiftness != other.SerpentsSwiftness) return false;
      if (Longevity != other.Longevity) return false;
      if (TheBeastWithin != other.TheBeastWithin) return false;
      if (CobraStrikes != other.CobraStrikes) return false;
      if (KindredSpirits != other.KindredSpirits) return false;
      if (BeastMastery != other.BeastMastery) return false;
      if (ImprovedConcussiveShot != other.ImprovedConcussiveShot) return false;
      if (FocusedAim != other.FocusedAim) return false;
      if (LethalShots != other.LethalShots) return false;
      if (CarefulAim != other.CarefulAim) return false;
      if (ImprovedHuntersMark != other.ImprovedHuntersMark) return false;
      if (MortalShots != other.MortalShots) return false;
      if (GoForTheThroat != other.GoForTheThroat) return false;
      if (ImprovedArcaneShot != other.ImprovedArcaneShot) return false;
      if (AimedShot != other.AimedShot) return false;
      if (RapidKilling != other.RapidKilling) return false;
      if (ImprovedStings != other.ImprovedStings) return false;
      if (Efficiency != other.Efficiency) return false;
      if (ConcussiveBarrage != other.ConcussiveBarrage) return false;
      if (Readiness != other.Readiness) return false;
      if (Barrage != other.Barrage) return false;
      if (CombatExperience != other.CombatExperience) return false;
      if (RangedWeaponSpecialization != other.RangedWeaponSpecialization) return false;
      if (PiercingShots != other.PiercingShots) return false;
      if (TrueshotAura != other.TrueshotAura) return false;
      if (ImprovedBarrage != other.ImprovedBarrage) return false;
      if (MasterMarksman != other.MasterMarksman) return false;
      if (RapidRecuperation != other.RapidRecuperation) return false;
      if (WildQuiver != other.WildQuiver) return false;
      if (SilencingShot != other.SilencingShot) return false;
      if (ImprovedSteadyShot != other.ImprovedSteadyShot) return false;
      if (MarkedForDeath != other.MarkedForDeath) return false;
      if (ChimeraShot != other.ChimeraShot) return false;
      if (ImprovedTracking != other.ImprovedTracking) return false;
      if (HawkEye != other.HawkEye) return false;
      if (SavageStrikes != other.SavageStrikes) return false;
      if (Surefooted != other.Surefooted) return false;
      if (Entrapment != other.Entrapment) return false;
      if (TrapMastery != other.TrapMastery) return false;
      if (SurvivalInstincts != other.SurvivalInstincts) return false;
      if (Survivalist != other.Survivalist) return false;
      if (ScatterShot != other.ScatterShot) return false;
      if (Deflection != other.Deflection) return false;
      if (SurvivalTactics != other.SurvivalTactics) return false;
      if (TNT != other.TNT) return false;
      if (LockAndLoad != other.LockAndLoad) return false;
      if (HunterVsWild != other.HunterVsWild) return false;
      if (KillerInstinct != other.KillerInstinct) return false;
      if (Counterattack != other.Counterattack) return false;
      if (LightningReflexes != other.LightningReflexes) return false;
      if (Resourcefulness != other.Resourcefulness) return false;
      if (ExposeWeakness != other.ExposeWeakness) return false;
      if (WyvernSting != other.WyvernSting) return false;
      if (ThrillOfTheHunt != other.ThrillOfTheHunt) return false;
      if (MasterTactician != other.MasterTactician) return false;
      if (NoxiousStings != other.NoxiousStings) return false;
      if (PointOfNoEscape != other.PointOfNoEscape) return false;
      if (BlackArrow != other.BlackArrow) return false;
      if (SniperTraining != other.SniperTraining) return false;
      if (HuntingParty != other.HuntingParty) return false;
      if (ExplosiveShot != other.ExplosiveShot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ImprovedAspectOfTheHawk != 0) hash ^= ImprovedAspectOfTheHawk.GetHashCode();
      if (EnduranceTraining != 0) hash ^= EnduranceTraining.GetHashCode();
      if (FocusedFire != 0) hash ^= FocusedFire.GetHashCode();
      if (ImprovedAspectOfTheMonkey != 0) hash ^= ImprovedAspectOfTheMonkey.GetHashCode();
      if (ThickHide != 0) hash ^= ThickHide.GetHashCode();
      if (ImprovedRevivePet != 0) hash ^= ImprovedRevivePet.GetHashCode();
      if (Pathfinding != 0) hash ^= Pathfinding.GetHashCode();
      if (AspectMastery != false) hash ^= AspectMastery.GetHashCode();
      if (UnleashedFury != 0) hash ^= UnleashedFury.GetHashCode();
      if (ImprovedMendPet != 0) hash ^= ImprovedMendPet.GetHashCode();
      if (Ferocity != 0) hash ^= Ferocity.GetHashCode();
      if (SpiritBond != 0) hash ^= SpiritBond.GetHashCode();
      if (Intimidation != false) hash ^= Intimidation.GetHashCode();
      if (BestialDiscipline != 0) hash ^= BestialDiscipline.GetHashCode();
      if (AnimalHandler != 0) hash ^= AnimalHandler.GetHashCode();
      if (Frenzy != 0) hash ^= Frenzy.GetHashCode();
      if (FerociousInspiration != 0) hash ^= FerociousInspiration.GetHashCode();
      if (BestialWrath != false) hash ^= BestialWrath.GetHashCode();
      if (CatlikeReflexes != 0) hash ^= CatlikeReflexes.GetHashCode();
      if (Invigoration != 0) hash ^= Invigoration.GetHashCode();
      if (SerpentsSwiftness != 0) hash ^= SerpentsSwiftness.GetHashCode();
      if (Longevity != 0) hash ^= Longevity.GetHashCode();
      if (TheBeastWithin != false) hash ^= TheBeastWithin.GetHashCode();
      if (CobraStrikes != 0) hash ^= CobraStrikes.GetHashCode();
      if (KindredSpirits != 0) hash ^= KindredSpirits.GetHashCode();
      if (BeastMastery != false) hash ^= BeastMastery.GetHashCode();
      if (ImprovedConcussiveShot != 0) hash ^= ImprovedConcussiveShot.GetHashCode();
      if (FocusedAim != 0) hash ^= FocusedAim.GetHashCode();
      if (LethalShots != 0) hash ^= LethalShots.GetHashCode();
      if (CarefulAim != 0) hash ^= CarefulAim.GetHashCode();
      if (ImprovedHuntersMark != 0) hash ^= ImprovedHuntersMark.GetHashCode();
      if (MortalShots != 0) hash ^= MortalShots.GetHashCode();
      if (GoForTheThroat != 0) hash ^= GoForTheThroat.GetHashCode();
      if (ImprovedArcaneShot != 0) hash ^= ImprovedArcaneShot.GetHashCode();
      if (AimedShot != false) hash ^= AimedShot.GetHashCode();
      if (RapidKilling != 0) hash ^= RapidKilling.GetHashCode();
      if (ImprovedStings != 0) hash ^= ImprovedStings.GetHashCode();
      if (Efficiency != 0) hash ^= Efficiency.GetHashCode();
      if (ConcussiveBarrage != 0) hash ^= ConcussiveBarrage.GetHashCode();
      if (Readiness != false) hash ^= Readiness.GetHashCode();
      if (Barrage != 0) hash ^= Barrage.GetHashCode();
      if (CombatExperience != 0) hash ^= CombatExperience.GetHashCode();
      if (RangedWeaponSpecialization != 0) hash ^= RangedWeaponSpecialization.GetHashCode();
      if (PiercingShots != 0) hash ^= PiercingShots.GetHashCode();
      if (TrueshotAura != false) hash ^= TrueshotAura.GetHashCode();
      if (ImprovedBarrage != 0) hash ^= ImprovedBarrage.GetHashCode();
      if (MasterMarksman != 0) hash ^= MasterMarksman.GetHashCode();
      if (RapidRecuperation != 0) hash ^= RapidRecuperation.GetHashCode();
      if (WildQuiver != 0) hash ^= WildQuiver.GetHashCode();
      if (SilencingShot != false) hash ^= SilencingShot.GetHashCode();
      if (ImprovedSteadyShot != 0) hash ^= ImprovedSteadyShot.GetHashCode();
      if (MarkedForDeath != 0) hash ^= MarkedForDeath.GetHashCode();
      if (ChimeraShot != false) hash ^= ChimeraShot.GetHashCode();
      if (ImprovedTracking != 0) hash ^= ImprovedTracking.GetHashCode();
      if (HawkEye != 0) hash ^= HawkEye.GetHashCode();
      if (SavageStrikes != 0) hash ^= SavageStrikes.GetHashCode();
      if (Surefooted != 0) hash ^= Surefooted.GetHashCode();
      if (Entrapment != 0) hash ^= Entrapment.GetHashCode();
      if (TrapMastery != 0) hash ^= TrapMastery.GetHashCode();
      if (SurvivalInstincts != 0) hash ^= SurvivalInstincts.GetHashCode();
      if (Survivalist != 0) hash ^= Survivalist.GetHashCode();
      if (ScatterShot != false) hash ^= ScatterShot.GetHashCode();
      if (Deflection != 0) hash ^= Deflection.GetHashCode();
      if (SurvivalTactics != 0) hash ^= SurvivalTactics.GetHashCode();
      if (TNT != 0) hash ^= TNT.GetHashCode();
      if (LockAndLoad != 0) hash ^= LockAndLoad.GetHashCode();
      if (HunterVsWild != 0) hash ^= HunterVsWild.GetHashCode();
      if (KillerInstinct != 0) hash ^= KillerInstinct.GetHashCode();
      if (Counterattack != false) hash ^= Counterattack.GetHashCode();
      if (LightningReflexes != 0) hash ^= LightningReflexes.GetHashCode();
      if (Resourcefulness != 0) hash ^= Resourcefulness.GetHashCode();
      if (ExposeWeakness != 0) hash ^= ExposeWeakness.GetHashCode();
      if (WyvernSting != false) hash ^= WyvernSting.GetHashCode();
      if (ThrillOfTheHunt != 0) hash ^= ThrillOfTheHunt.GetHashCode();
      if (MasterTactician != 0) hash ^= MasterTactician.GetHashCode();
      if (NoxiousStings != 0) hash ^= NoxiousStings.GetHashCode();
      if (PointOfNoEscape != 0) hash ^= PointOfNoEscape.GetHashCode();
      if (BlackArrow != false) hash ^= BlackArrow.GetHashCode();
      if (SniperTraining != 0) hash ^= SniperTraining.GetHashCode();
      if (HuntingParty != 0) hash ^= HuntingParty.GetHashCode();
      if (ExplosiveShot != false) hash ^= ExplosiveShot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ImprovedAspectOfTheHawk != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ImprovedAspectOfTheHawk);
      }
      if (EnduranceTraining != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EnduranceTraining);
      }
      if (FocusedFire != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FocusedFire);
      }
      if (ImprovedAspectOfTheMonkey != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ImprovedAspectOfTheMonkey);
      }
      if (ThickHide != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ThickHide);
      }
      if (ImprovedRevivePet != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ImprovedRevivePet);
      }
      if (Pathfinding != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Pathfinding);
      }
      if (AspectMastery != false) {
        output.WriteRawTag(64);
        output.WriteBool(AspectMastery);
      }
      if (UnleashedFury != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(UnleashedFury);
      }
      if (ImprovedMendPet != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ImprovedMendPet);
      }
      if (Ferocity != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Ferocity);
      }
      if (SpiritBond != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(SpiritBond);
      }
      if (Intimidation != false) {
        output.WriteRawTag(104);
        output.WriteBool(Intimidation);
      }
      if (BestialDiscipline != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(BestialDiscipline);
      }
      if (AnimalHandler != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(AnimalHandler);
      }
      if (Frenzy != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Frenzy);
      }
      if (FerociousInspiration != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(FerociousInspiration);
      }
      if (BestialWrath != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(BestialWrath);
      }
      if (CatlikeReflexes != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(CatlikeReflexes);
      }
      if (Invigoration != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Invigoration);
      }
      if (SerpentsSwiftness != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(SerpentsSwiftness);
      }
      if (Longevity != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(Longevity);
      }
      if (TheBeastWithin != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(TheBeastWithin);
      }
      if (CobraStrikes != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(CobraStrikes);
      }
      if (KindredSpirits != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(KindredSpirits);
      }
      if (BeastMastery != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(BeastMastery);
      }
      if (ImprovedConcussiveShot != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(ImprovedConcussiveShot);
      }
      if (FocusedAim != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(FocusedAim);
      }
      if (LethalShots != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(LethalShots);
      }
      if (CarefulAim != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(CarefulAim);
      }
      if (ImprovedHuntersMark != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(ImprovedHuntersMark);
      }
      if (MortalShots != 0) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(MortalShots);
      }
      if (GoForTheThroat != 0) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(GoForTheThroat);
      }
      if (ImprovedArcaneShot != 0) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(ImprovedArcaneShot);
      }
      if (AimedShot != false) {
        output.WriteRawTag(152, 2);
        output.WriteBool(AimedShot);
      }
      if (RapidKilling != 0) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(RapidKilling);
      }
      if (ImprovedStings != 0) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(ImprovedStings);
      }
      if (Efficiency != 0) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(Efficiency);
      }
      if (ConcussiveBarrage != 0) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(ConcussiveBarrage);
      }
      if (Readiness != false) {
        output.WriteRawTag(192, 2);
        output.WriteBool(Readiness);
      }
      if (Barrage != 0) {
        output.WriteRawTag(200, 2);
        output.WriteInt32(Barrage);
      }
      if (CombatExperience != 0) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(CombatExperience);
      }
      if (RangedWeaponSpecialization != 0) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(RangedWeaponSpecialization);
      }
      if (PiercingShots != 0) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(PiercingShots);
      }
      if (TrueshotAura != false) {
        output.WriteRawTag(232, 2);
        output.WriteBool(TrueshotAura);
      }
      if (ImprovedBarrage != 0) {
        output.WriteRawTag(240, 2);
        output.WriteInt32(ImprovedBarrage);
      }
      if (MasterMarksman != 0) {
        output.WriteRawTag(248, 2);
        output.WriteInt32(MasterMarksman);
      }
      if (RapidRecuperation != 0) {
        output.WriteRawTag(128, 3);
        output.WriteInt32(RapidRecuperation);
      }
      if (WildQuiver != 0) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(WildQuiver);
      }
      if (SilencingShot != false) {
        output.WriteRawTag(144, 3);
        output.WriteBool(SilencingShot);
      }
      if (ImprovedSteadyShot != 0) {
        output.WriteRawTag(152, 3);
        output.WriteInt32(ImprovedSteadyShot);
      }
      if (MarkedForDeath != 0) {
        output.WriteRawTag(160, 3);
        output.WriteInt32(MarkedForDeath);
      }
      if (ChimeraShot != false) {
        output.WriteRawTag(168, 3);
        output.WriteBool(ChimeraShot);
      }
      if (ImprovedTracking != 0) {
        output.WriteRawTag(176, 3);
        output.WriteInt32(ImprovedTracking);
      }
      if (HawkEye != 0) {
        output.WriteRawTag(184, 3);
        output.WriteInt32(HawkEye);
      }
      if (SavageStrikes != 0) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(SavageStrikes);
      }
      if (Surefooted != 0) {
        output.WriteRawTag(200, 3);
        output.WriteInt32(Surefooted);
      }
      if (Entrapment != 0) {
        output.WriteRawTag(208, 3);
        output.WriteInt32(Entrapment);
      }
      if (TrapMastery != 0) {
        output.WriteRawTag(216, 3);
        output.WriteInt32(TrapMastery);
      }
      if (SurvivalInstincts != 0) {
        output.WriteRawTag(224, 3);
        output.WriteInt32(SurvivalInstincts);
      }
      if (Survivalist != 0) {
        output.WriteRawTag(232, 3);
        output.WriteInt32(Survivalist);
      }
      if (ScatterShot != false) {
        output.WriteRawTag(240, 3);
        output.WriteBool(ScatterShot);
      }
      if (Deflection != 0) {
        output.WriteRawTag(248, 3);
        output.WriteInt32(Deflection);
      }
      if (SurvivalTactics != 0) {
        output.WriteRawTag(128, 4);
        output.WriteInt32(SurvivalTactics);
      }
      if (TNT != 0) {
        output.WriteRawTag(136, 4);
        output.WriteInt32(TNT);
      }
      if (LockAndLoad != 0) {
        output.WriteRawTag(144, 4);
        output.WriteInt32(LockAndLoad);
      }
      if (HunterVsWild != 0) {
        output.WriteRawTag(152, 4);
        output.WriteInt32(HunterVsWild);
      }
      if (KillerInstinct != 0) {
        output.WriteRawTag(160, 4);
        output.WriteInt32(KillerInstinct);
      }
      if (Counterattack != false) {
        output.WriteRawTag(168, 4);
        output.WriteBool(Counterattack);
      }
      if (LightningReflexes != 0) {
        output.WriteRawTag(176, 4);
        output.WriteInt32(LightningReflexes);
      }
      if (Resourcefulness != 0) {
        output.WriteRawTag(184, 4);
        output.WriteInt32(Resourcefulness);
      }
      if (ExposeWeakness != 0) {
        output.WriteRawTag(192, 4);
        output.WriteInt32(ExposeWeakness);
      }
      if (WyvernSting != false) {
        output.WriteRawTag(200, 4);
        output.WriteBool(WyvernSting);
      }
      if (ThrillOfTheHunt != 0) {
        output.WriteRawTag(208, 4);
        output.WriteInt32(ThrillOfTheHunt);
      }
      if (MasterTactician != 0) {
        output.WriteRawTag(216, 4);
        output.WriteInt32(MasterTactician);
      }
      if (NoxiousStings != 0) {
        output.WriteRawTag(224, 4);
        output.WriteInt32(NoxiousStings);
      }
      if (PointOfNoEscape != 0) {
        output.WriteRawTag(232, 4);
        output.WriteInt32(PointOfNoEscape);
      }
      if (BlackArrow != false) {
        output.WriteRawTag(240, 4);
        output.WriteBool(BlackArrow);
      }
      if (SniperTraining != 0) {
        output.WriteRawTag(248, 4);
        output.WriteInt32(SniperTraining);
      }
      if (HuntingParty != 0) {
        output.WriteRawTag(128, 5);
        output.WriteInt32(HuntingParty);
      }
      if (ExplosiveShot != false) {
        output.WriteRawTag(136, 5);
        output.WriteBool(ExplosiveShot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ImprovedAspectOfTheHawk != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ImprovedAspectOfTheHawk);
      }
      if (EnduranceTraining != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EnduranceTraining);
      }
      if (FocusedFire != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FocusedFire);
      }
      if (ImprovedAspectOfTheMonkey != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ImprovedAspectOfTheMonkey);
      }
      if (ThickHide != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ThickHide);
      }
      if (ImprovedRevivePet != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ImprovedRevivePet);
      }
      if (Pathfinding != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Pathfinding);
      }
      if (AspectMastery != false) {
        output.WriteRawTag(64);
        output.WriteBool(AspectMastery);
      }
      if (UnleashedFury != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(UnleashedFury);
      }
      if (ImprovedMendPet != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ImprovedMendPet);
      }
      if (Ferocity != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Ferocity);
      }
      if (SpiritBond != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(SpiritBond);
      }
      if (Intimidation != false) {
        output.WriteRawTag(104);
        output.WriteBool(Intimidation);
      }
      if (BestialDiscipline != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(BestialDiscipline);
      }
      if (AnimalHandler != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(AnimalHandler);
      }
      if (Frenzy != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Frenzy);
      }
      if (FerociousInspiration != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(FerociousInspiration);
      }
      if (BestialWrath != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(BestialWrath);
      }
      if (CatlikeReflexes != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(CatlikeReflexes);
      }
      if (Invigoration != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Invigoration);
      }
      if (SerpentsSwiftness != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(SerpentsSwiftness);
      }
      if (Longevity != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(Longevity);
      }
      if (TheBeastWithin != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(TheBeastWithin);
      }
      if (CobraStrikes != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(CobraStrikes);
      }
      if (KindredSpirits != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(KindredSpirits);
      }
      if (BeastMastery != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(BeastMastery);
      }
      if (ImprovedConcussiveShot != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(ImprovedConcussiveShot);
      }
      if (FocusedAim != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(FocusedAim);
      }
      if (LethalShots != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(LethalShots);
      }
      if (CarefulAim != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(CarefulAim);
      }
      if (ImprovedHuntersMark != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(ImprovedHuntersMark);
      }
      if (MortalShots != 0) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(MortalShots);
      }
      if (GoForTheThroat != 0) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(GoForTheThroat);
      }
      if (ImprovedArcaneShot != 0) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(ImprovedArcaneShot);
      }
      if (AimedShot != false) {
        output.WriteRawTag(152, 2);
        output.WriteBool(AimedShot);
      }
      if (RapidKilling != 0) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(RapidKilling);
      }
      if (ImprovedStings != 0) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(ImprovedStings);
      }
      if (Efficiency != 0) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(Efficiency);
      }
      if (ConcussiveBarrage != 0) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(ConcussiveBarrage);
      }
      if (Readiness != false) {
        output.WriteRawTag(192, 2);
        output.WriteBool(Readiness);
      }
      if (Barrage != 0) {
        output.WriteRawTag(200, 2);
        output.WriteInt32(Barrage);
      }
      if (CombatExperience != 0) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(CombatExperience);
      }
      if (RangedWeaponSpecialization != 0) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(RangedWeaponSpecialization);
      }
      if (PiercingShots != 0) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(PiercingShots);
      }
      if (TrueshotAura != false) {
        output.WriteRawTag(232, 2);
        output.WriteBool(TrueshotAura);
      }
      if (ImprovedBarrage != 0) {
        output.WriteRawTag(240, 2);
        output.WriteInt32(ImprovedBarrage);
      }
      if (MasterMarksman != 0) {
        output.WriteRawTag(248, 2);
        output.WriteInt32(MasterMarksman);
      }
      if (RapidRecuperation != 0) {
        output.WriteRawTag(128, 3);
        output.WriteInt32(RapidRecuperation);
      }
      if (WildQuiver != 0) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(WildQuiver);
      }
      if (SilencingShot != false) {
        output.WriteRawTag(144, 3);
        output.WriteBool(SilencingShot);
      }
      if (ImprovedSteadyShot != 0) {
        output.WriteRawTag(152, 3);
        output.WriteInt32(ImprovedSteadyShot);
      }
      if (MarkedForDeath != 0) {
        output.WriteRawTag(160, 3);
        output.WriteInt32(MarkedForDeath);
      }
      if (ChimeraShot != false) {
        output.WriteRawTag(168, 3);
        output.WriteBool(ChimeraShot);
      }
      if (ImprovedTracking != 0) {
        output.WriteRawTag(176, 3);
        output.WriteInt32(ImprovedTracking);
      }
      if (HawkEye != 0) {
        output.WriteRawTag(184, 3);
        output.WriteInt32(HawkEye);
      }
      if (SavageStrikes != 0) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(SavageStrikes);
      }
      if (Surefooted != 0) {
        output.WriteRawTag(200, 3);
        output.WriteInt32(Surefooted);
      }
      if (Entrapment != 0) {
        output.WriteRawTag(208, 3);
        output.WriteInt32(Entrapment);
      }
      if (TrapMastery != 0) {
        output.WriteRawTag(216, 3);
        output.WriteInt32(TrapMastery);
      }
      if (SurvivalInstincts != 0) {
        output.WriteRawTag(224, 3);
        output.WriteInt32(SurvivalInstincts);
      }
      if (Survivalist != 0) {
        output.WriteRawTag(232, 3);
        output.WriteInt32(Survivalist);
      }
      if (ScatterShot != false) {
        output.WriteRawTag(240, 3);
        output.WriteBool(ScatterShot);
      }
      if (Deflection != 0) {
        output.WriteRawTag(248, 3);
        output.WriteInt32(Deflection);
      }
      if (SurvivalTactics != 0) {
        output.WriteRawTag(128, 4);
        output.WriteInt32(SurvivalTactics);
      }
      if (TNT != 0) {
        output.WriteRawTag(136, 4);
        output.WriteInt32(TNT);
      }
      if (LockAndLoad != 0) {
        output.WriteRawTag(144, 4);
        output.WriteInt32(LockAndLoad);
      }
      if (HunterVsWild != 0) {
        output.WriteRawTag(152, 4);
        output.WriteInt32(HunterVsWild);
      }
      if (KillerInstinct != 0) {
        output.WriteRawTag(160, 4);
        output.WriteInt32(KillerInstinct);
      }
      if (Counterattack != false) {
        output.WriteRawTag(168, 4);
        output.WriteBool(Counterattack);
      }
      if (LightningReflexes != 0) {
        output.WriteRawTag(176, 4);
        output.WriteInt32(LightningReflexes);
      }
      if (Resourcefulness != 0) {
        output.WriteRawTag(184, 4);
        output.WriteInt32(Resourcefulness);
      }
      if (ExposeWeakness != 0) {
        output.WriteRawTag(192, 4);
        output.WriteInt32(ExposeWeakness);
      }
      if (WyvernSting != false) {
        output.WriteRawTag(200, 4);
        output.WriteBool(WyvernSting);
      }
      if (ThrillOfTheHunt != 0) {
        output.WriteRawTag(208, 4);
        output.WriteInt32(ThrillOfTheHunt);
      }
      if (MasterTactician != 0) {
        output.WriteRawTag(216, 4);
        output.WriteInt32(MasterTactician);
      }
      if (NoxiousStings != 0) {
        output.WriteRawTag(224, 4);
        output.WriteInt32(NoxiousStings);
      }
      if (PointOfNoEscape != 0) {
        output.WriteRawTag(232, 4);
        output.WriteInt32(PointOfNoEscape);
      }
      if (BlackArrow != false) {
        output.WriteRawTag(240, 4);
        output.WriteBool(BlackArrow);
      }
      if (SniperTraining != 0) {
        output.WriteRawTag(248, 4);
        output.WriteInt32(SniperTraining);
      }
      if (HuntingParty != 0) {
        output.WriteRawTag(128, 5);
        output.WriteInt32(HuntingParty);
      }
      if (ExplosiveShot != false) {
        output.WriteRawTag(136, 5);
        output.WriteBool(ExplosiveShot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ImprovedAspectOfTheHawk != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImprovedAspectOfTheHawk);
      }
      if (EnduranceTraining != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnduranceTraining);
      }
      if (FocusedFire != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FocusedFire);
      }
      if (ImprovedAspectOfTheMonkey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImprovedAspectOfTheMonkey);
      }
      if (ThickHide != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThickHide);
      }
      if (ImprovedRevivePet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImprovedRevivePet);
      }
      if (Pathfinding != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pathfinding);
      }
      if (AspectMastery != false) {
        size += 1 + 1;
      }
      if (UnleashedFury != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnleashedFury);
      }
      if (ImprovedMendPet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImprovedMendPet);
      }
      if (Ferocity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ferocity);
      }
      if (SpiritBond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpiritBond);
      }
      if (Intimidation != false) {
        size += 1 + 1;
      }
      if (BestialDiscipline != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BestialDiscipline);
      }
      if (AnimalHandler != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AnimalHandler);
      }
      if (Frenzy != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Frenzy);
      }
      if (FerociousInspiration != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FerociousInspiration);
      }
      if (BestialWrath != false) {
        size += 2 + 1;
      }
      if (CatlikeReflexes != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CatlikeReflexes);
      }
      if (Invigoration != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Invigoration);
      }
      if (SerpentsSwiftness != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SerpentsSwiftness);
      }
      if (Longevity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Longevity);
      }
      if (TheBeastWithin != false) {
        size += 2 + 1;
      }
      if (CobraStrikes != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CobraStrikes);
      }
      if (KindredSpirits != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(KindredSpirits);
      }
      if (BeastMastery != false) {
        size += 2 + 1;
      }
      if (ImprovedConcussiveShot != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedConcussiveShot);
      }
      if (FocusedAim != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FocusedAim);
      }
      if (LethalShots != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LethalShots);
      }
      if (CarefulAim != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CarefulAim);
      }
      if (ImprovedHuntersMark != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedHuntersMark);
      }
      if (MortalShots != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MortalShots);
      }
      if (GoForTheThroat != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GoForTheThroat);
      }
      if (ImprovedArcaneShot != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedArcaneShot);
      }
      if (AimedShot != false) {
        size += 2 + 1;
      }
      if (RapidKilling != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RapidKilling);
      }
      if (ImprovedStings != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedStings);
      }
      if (Efficiency != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Efficiency);
      }
      if (ConcussiveBarrage != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ConcussiveBarrage);
      }
      if (Readiness != false) {
        size += 2 + 1;
      }
      if (Barrage != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Barrage);
      }
      if (CombatExperience != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CombatExperience);
      }
      if (RangedWeaponSpecialization != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RangedWeaponSpecialization);
      }
      if (PiercingShots != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PiercingShots);
      }
      if (TrueshotAura != false) {
        size += 2 + 1;
      }
      if (ImprovedBarrage != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedBarrage);
      }
      if (MasterMarksman != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MasterMarksman);
      }
      if (RapidRecuperation != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RapidRecuperation);
      }
      if (WildQuiver != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(WildQuiver);
      }
      if (SilencingShot != false) {
        size += 2 + 1;
      }
      if (ImprovedSteadyShot != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedSteadyShot);
      }
      if (MarkedForDeath != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MarkedForDeath);
      }
      if (ChimeraShot != false) {
        size += 2 + 1;
      }
      if (ImprovedTracking != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedTracking);
      }
      if (HawkEye != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HawkEye);
      }
      if (SavageStrikes != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SavageStrikes);
      }
      if (Surefooted != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Surefooted);
      }
      if (Entrapment != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Entrapment);
      }
      if (TrapMastery != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TrapMastery);
      }
      if (SurvivalInstincts != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SurvivalInstincts);
      }
      if (Survivalist != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Survivalist);
      }
      if (ScatterShot != false) {
        size += 2 + 1;
      }
      if (Deflection != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Deflection);
      }
      if (SurvivalTactics != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SurvivalTactics);
      }
      if (TNT != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TNT);
      }
      if (LockAndLoad != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LockAndLoad);
      }
      if (HunterVsWild != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HunterVsWild);
      }
      if (KillerInstinct != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(KillerInstinct);
      }
      if (Counterattack != false) {
        size += 2 + 1;
      }
      if (LightningReflexes != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LightningReflexes);
      }
      if (Resourcefulness != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Resourcefulness);
      }
      if (ExposeWeakness != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ExposeWeakness);
      }
      if (WyvernSting != false) {
        size += 2 + 1;
      }
      if (ThrillOfTheHunt != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ThrillOfTheHunt);
      }
      if (MasterTactician != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MasterTactician);
      }
      if (NoxiousStings != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NoxiousStings);
      }
      if (PointOfNoEscape != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PointOfNoEscape);
      }
      if (BlackArrow != false) {
        size += 2 + 1;
      }
      if (SniperTraining != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SniperTraining);
      }
      if (HuntingParty != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HuntingParty);
      }
      if (ExplosiveShot != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HunterTalents other) {
      if (other == null) {
        return;
      }
      if (other.ImprovedAspectOfTheHawk != 0) {
        ImprovedAspectOfTheHawk = other.ImprovedAspectOfTheHawk;
      }
      if (other.EnduranceTraining != 0) {
        EnduranceTraining = other.EnduranceTraining;
      }
      if (other.FocusedFire != 0) {
        FocusedFire = other.FocusedFire;
      }
      if (other.ImprovedAspectOfTheMonkey != 0) {
        ImprovedAspectOfTheMonkey = other.ImprovedAspectOfTheMonkey;
      }
      if (other.ThickHide != 0) {
        ThickHide = other.ThickHide;
      }
      if (other.ImprovedRevivePet != 0) {
        ImprovedRevivePet = other.ImprovedRevivePet;
      }
      if (other.Pathfinding != 0) {
        Pathfinding = other.Pathfinding;
      }
      if (other.AspectMastery != false) {
        AspectMastery = other.AspectMastery;
      }
      if (other.UnleashedFury != 0) {
        UnleashedFury = other.UnleashedFury;
      }
      if (other.ImprovedMendPet != 0) {
        ImprovedMendPet = other.ImprovedMendPet;
      }
      if (other.Ferocity != 0) {
        Ferocity = other.Ferocity;
      }
      if (other.SpiritBond != 0) {
        SpiritBond = other.SpiritBond;
      }
      if (other.Intimidation != false) {
        Intimidation = other.Intimidation;
      }
      if (other.BestialDiscipline != 0) {
        BestialDiscipline = other.BestialDiscipline;
      }
      if (other.AnimalHandler != 0) {
        AnimalHandler = other.AnimalHandler;
      }
      if (other.Frenzy != 0) {
        Frenzy = other.Frenzy;
      }
      if (other.FerociousInspiration != 0) {
        FerociousInspiration = other.FerociousInspiration;
      }
      if (other.BestialWrath != false) {
        BestialWrath = other.BestialWrath;
      }
      if (other.CatlikeReflexes != 0) {
        CatlikeReflexes = other.CatlikeReflexes;
      }
      if (other.Invigoration != 0) {
        Invigoration = other.Invigoration;
      }
      if (other.SerpentsSwiftness != 0) {
        SerpentsSwiftness = other.SerpentsSwiftness;
      }
      if (other.Longevity != 0) {
        Longevity = other.Longevity;
      }
      if (other.TheBeastWithin != false) {
        TheBeastWithin = other.TheBeastWithin;
      }
      if (other.CobraStrikes != 0) {
        CobraStrikes = other.CobraStrikes;
      }
      if (other.KindredSpirits != 0) {
        KindredSpirits = other.KindredSpirits;
      }
      if (other.BeastMastery != false) {
        BeastMastery = other.BeastMastery;
      }
      if (other.ImprovedConcussiveShot != 0) {
        ImprovedConcussiveShot = other.ImprovedConcussiveShot;
      }
      if (other.FocusedAim != 0) {
        FocusedAim = other.FocusedAim;
      }
      if (other.LethalShots != 0) {
        LethalShots = other.LethalShots;
      }
      if (other.CarefulAim != 0) {
        CarefulAim = other.CarefulAim;
      }
      if (other.ImprovedHuntersMark != 0) {
        ImprovedHuntersMark = other.ImprovedHuntersMark;
      }
      if (other.MortalShots != 0) {
        MortalShots = other.MortalShots;
      }
      if (other.GoForTheThroat != 0) {
        GoForTheThroat = other.GoForTheThroat;
      }
      if (other.ImprovedArcaneShot != 0) {
        ImprovedArcaneShot = other.ImprovedArcaneShot;
      }
      if (other.AimedShot != false) {
        AimedShot = other.AimedShot;
      }
      if (other.RapidKilling != 0) {
        RapidKilling = other.RapidKilling;
      }
      if (other.ImprovedStings != 0) {
        ImprovedStings = other.ImprovedStings;
      }
      if (other.Efficiency != 0) {
        Efficiency = other.Efficiency;
      }
      if (other.ConcussiveBarrage != 0) {
        ConcussiveBarrage = other.ConcussiveBarrage;
      }
      if (other.Readiness != false) {
        Readiness = other.Readiness;
      }
      if (other.Barrage != 0) {
        Barrage = other.Barrage;
      }
      if (other.CombatExperience != 0) {
        CombatExperience = other.CombatExperience;
      }
      if (other.RangedWeaponSpecialization != 0) {
        RangedWeaponSpecialization = other.RangedWeaponSpecialization;
      }
      if (other.PiercingShots != 0) {
        PiercingShots = other.PiercingShots;
      }
      if (other.TrueshotAura != false) {
        TrueshotAura = other.TrueshotAura;
      }
      if (other.ImprovedBarrage != 0) {
        ImprovedBarrage = other.ImprovedBarrage;
      }
      if (other.MasterMarksman != 0) {
        MasterMarksman = other.MasterMarksman;
      }
      if (other.RapidRecuperation != 0) {
        RapidRecuperation = other.RapidRecuperation;
      }
      if (other.WildQuiver != 0) {
        WildQuiver = other.WildQuiver;
      }
      if (other.SilencingShot != false) {
        SilencingShot = other.SilencingShot;
      }
      if (other.ImprovedSteadyShot != 0) {
        ImprovedSteadyShot = other.ImprovedSteadyShot;
      }
      if (other.MarkedForDeath != 0) {
        MarkedForDeath = other.MarkedForDeath;
      }
      if (other.ChimeraShot != false) {
        ChimeraShot = other.ChimeraShot;
      }
      if (other.ImprovedTracking != 0) {
        ImprovedTracking = other.ImprovedTracking;
      }
      if (other.HawkEye != 0) {
        HawkEye = other.HawkEye;
      }
      if (other.SavageStrikes != 0) {
        SavageStrikes = other.SavageStrikes;
      }
      if (other.Surefooted != 0) {
        Surefooted = other.Surefooted;
      }
      if (other.Entrapment != 0) {
        Entrapment = other.Entrapment;
      }
      if (other.TrapMastery != 0) {
        TrapMastery = other.TrapMastery;
      }
      if (other.SurvivalInstincts != 0) {
        SurvivalInstincts = other.SurvivalInstincts;
      }
      if (other.Survivalist != 0) {
        Survivalist = other.Survivalist;
      }
      if (other.ScatterShot != false) {
        ScatterShot = other.ScatterShot;
      }
      if (other.Deflection != 0) {
        Deflection = other.Deflection;
      }
      if (other.SurvivalTactics != 0) {
        SurvivalTactics = other.SurvivalTactics;
      }
      if (other.TNT != 0) {
        TNT = other.TNT;
      }
      if (other.LockAndLoad != 0) {
        LockAndLoad = other.LockAndLoad;
      }
      if (other.HunterVsWild != 0) {
        HunterVsWild = other.HunterVsWild;
      }
      if (other.KillerInstinct != 0) {
        KillerInstinct = other.KillerInstinct;
      }
      if (other.Counterattack != false) {
        Counterattack = other.Counterattack;
      }
      if (other.LightningReflexes != 0) {
        LightningReflexes = other.LightningReflexes;
      }
      if (other.Resourcefulness != 0) {
        Resourcefulness = other.Resourcefulness;
      }
      if (other.ExposeWeakness != 0) {
        ExposeWeakness = other.ExposeWeakness;
      }
      if (other.WyvernSting != false) {
        WyvernSting = other.WyvernSting;
      }
      if (other.ThrillOfTheHunt != 0) {
        ThrillOfTheHunt = other.ThrillOfTheHunt;
      }
      if (other.MasterTactician != 0) {
        MasterTactician = other.MasterTactician;
      }
      if (other.NoxiousStings != 0) {
        NoxiousStings = other.NoxiousStings;
      }
      if (other.PointOfNoEscape != 0) {
        PointOfNoEscape = other.PointOfNoEscape;
      }
      if (other.BlackArrow != false) {
        BlackArrow = other.BlackArrow;
      }
      if (other.SniperTraining != 0) {
        SniperTraining = other.SniperTraining;
      }
      if (other.HuntingParty != 0) {
        HuntingParty = other.HuntingParty;
      }
      if (other.ExplosiveShot != false) {
        ExplosiveShot = other.ExplosiveShot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ImprovedAspectOfTheHawk = input.ReadInt32();
            break;
          }
          case 16: {
            EnduranceTraining = input.ReadInt32();
            break;
          }
          case 24: {
            FocusedFire = input.ReadInt32();
            break;
          }
          case 32: {
            ImprovedAspectOfTheMonkey = input.ReadInt32();
            break;
          }
          case 40: {
            ThickHide = input.ReadInt32();
            break;
          }
          case 48: {
            ImprovedRevivePet = input.ReadInt32();
            break;
          }
          case 56: {
            Pathfinding = input.ReadInt32();
            break;
          }
          case 64: {
            AspectMastery = input.ReadBool();
            break;
          }
          case 72: {
            UnleashedFury = input.ReadInt32();
            break;
          }
          case 80: {
            ImprovedMendPet = input.ReadInt32();
            break;
          }
          case 88: {
            Ferocity = input.ReadInt32();
            break;
          }
          case 96: {
            SpiritBond = input.ReadInt32();
            break;
          }
          case 104: {
            Intimidation = input.ReadBool();
            break;
          }
          case 112: {
            BestialDiscipline = input.ReadInt32();
            break;
          }
          case 120: {
            AnimalHandler = input.ReadInt32();
            break;
          }
          case 128: {
            Frenzy = input.ReadInt32();
            break;
          }
          case 136: {
            FerociousInspiration = input.ReadInt32();
            break;
          }
          case 144: {
            BestialWrath = input.ReadBool();
            break;
          }
          case 152: {
            CatlikeReflexes = input.ReadInt32();
            break;
          }
          case 160: {
            Invigoration = input.ReadInt32();
            break;
          }
          case 168: {
            SerpentsSwiftness = input.ReadInt32();
            break;
          }
          case 176: {
            Longevity = input.ReadInt32();
            break;
          }
          case 184: {
            TheBeastWithin = input.ReadBool();
            break;
          }
          case 192: {
            CobraStrikes = input.ReadInt32();
            break;
          }
          case 200: {
            KindredSpirits = input.ReadInt32();
            break;
          }
          case 208: {
            BeastMastery = input.ReadBool();
            break;
          }
          case 216: {
            ImprovedConcussiveShot = input.ReadInt32();
            break;
          }
          case 224: {
            FocusedAim = input.ReadInt32();
            break;
          }
          case 232: {
            LethalShots = input.ReadInt32();
            break;
          }
          case 240: {
            CarefulAim = input.ReadInt32();
            break;
          }
          case 248: {
            ImprovedHuntersMark = input.ReadInt32();
            break;
          }
          case 256: {
            MortalShots = input.ReadInt32();
            break;
          }
          case 264: {
            GoForTheThroat = input.ReadInt32();
            break;
          }
          case 272: {
            ImprovedArcaneShot = input.ReadInt32();
            break;
          }
          case 280: {
            AimedShot = input.ReadBool();
            break;
          }
          case 288: {
            RapidKilling = input.ReadInt32();
            break;
          }
          case 296: {
            ImprovedStings = input.ReadInt32();
            break;
          }
          case 304: {
            Efficiency = input.ReadInt32();
            break;
          }
          case 312: {
            ConcussiveBarrage = input.ReadInt32();
            break;
          }
          case 320: {
            Readiness = input.ReadBool();
            break;
          }
          case 328: {
            Barrage = input.ReadInt32();
            break;
          }
          case 336: {
            CombatExperience = input.ReadInt32();
            break;
          }
          case 344: {
            RangedWeaponSpecialization = input.ReadInt32();
            break;
          }
          case 352: {
            PiercingShots = input.ReadInt32();
            break;
          }
          case 360: {
            TrueshotAura = input.ReadBool();
            break;
          }
          case 368: {
            ImprovedBarrage = input.ReadInt32();
            break;
          }
          case 376: {
            MasterMarksman = input.ReadInt32();
            break;
          }
          case 384: {
            RapidRecuperation = input.ReadInt32();
            break;
          }
          case 392: {
            WildQuiver = input.ReadInt32();
            break;
          }
          case 400: {
            SilencingShot = input.ReadBool();
            break;
          }
          case 408: {
            ImprovedSteadyShot = input.ReadInt32();
            break;
          }
          case 416: {
            MarkedForDeath = input.ReadInt32();
            break;
          }
          case 424: {
            ChimeraShot = input.ReadBool();
            break;
          }
          case 432: {
            ImprovedTracking = input.ReadInt32();
            break;
          }
          case 440: {
            HawkEye = input.ReadInt32();
            break;
          }
          case 448: {
            SavageStrikes = input.ReadInt32();
            break;
          }
          case 456: {
            Surefooted = input.ReadInt32();
            break;
          }
          case 464: {
            Entrapment = input.ReadInt32();
            break;
          }
          case 472: {
            TrapMastery = input.ReadInt32();
            break;
          }
          case 480: {
            SurvivalInstincts = input.ReadInt32();
            break;
          }
          case 488: {
            Survivalist = input.ReadInt32();
            break;
          }
          case 496: {
            ScatterShot = input.ReadBool();
            break;
          }
          case 504: {
            Deflection = input.ReadInt32();
            break;
          }
          case 512: {
            SurvivalTactics = input.ReadInt32();
            break;
          }
          case 520: {
            TNT = input.ReadInt32();
            break;
          }
          case 528: {
            LockAndLoad = input.ReadInt32();
            break;
          }
          case 536: {
            HunterVsWild = input.ReadInt32();
            break;
          }
          case 544: {
            KillerInstinct = input.ReadInt32();
            break;
          }
          case 552: {
            Counterattack = input.ReadBool();
            break;
          }
          case 560: {
            LightningReflexes = input.ReadInt32();
            break;
          }
          case 568: {
            Resourcefulness = input.ReadInt32();
            break;
          }
          case 576: {
            ExposeWeakness = input.ReadInt32();
            break;
          }
          case 584: {
            WyvernSting = input.ReadBool();
            break;
          }
          case 592: {
            ThrillOfTheHunt = input.ReadInt32();
            break;
          }
          case 600: {
            MasterTactician = input.ReadInt32();
            break;
          }
          case 608: {
            NoxiousStings = input.ReadInt32();
            break;
          }
          case 616: {
            PointOfNoEscape = input.ReadInt32();
            break;
          }
          case 624: {
            BlackArrow = input.ReadBool();
            break;
          }
          case 632: {
            SniperTraining = input.ReadInt32();
            break;
          }
          case 640: {
            HuntingParty = input.ReadInt32();
            break;
          }
          case 648: {
            ExplosiveShot = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ImprovedAspectOfTheHawk = input.ReadInt32();
            break;
          }
          case 16: {
            EnduranceTraining = input.ReadInt32();
            break;
          }
          case 24: {
            FocusedFire = input.ReadInt32();
            break;
          }
          case 32: {
            ImprovedAspectOfTheMonkey = input.ReadInt32();
            break;
          }
          case 40: {
            ThickHide = input.ReadInt32();
            break;
          }
          case 48: {
            ImprovedRevivePet = input.ReadInt32();
            break;
          }
          case 56: {
            Pathfinding = input.ReadInt32();
            break;
          }
          case 64: {
            AspectMastery = input.ReadBool();
            break;
          }
          case 72: {
            UnleashedFury = input.ReadInt32();
            break;
          }
          case 80: {
            ImprovedMendPet = input.ReadInt32();
            break;
          }
          case 88: {
            Ferocity = input.ReadInt32();
            break;
          }
          case 96: {
            SpiritBond = input.ReadInt32();
            break;
          }
          case 104: {
            Intimidation = input.ReadBool();
            break;
          }
          case 112: {
            BestialDiscipline = input.ReadInt32();
            break;
          }
          case 120: {
            AnimalHandler = input.ReadInt32();
            break;
          }
          case 128: {
            Frenzy = input.ReadInt32();
            break;
          }
          case 136: {
            FerociousInspiration = input.ReadInt32();
            break;
          }
          case 144: {
            BestialWrath = input.ReadBool();
            break;
          }
          case 152: {
            CatlikeReflexes = input.ReadInt32();
            break;
          }
          case 160: {
            Invigoration = input.ReadInt32();
            break;
          }
          case 168: {
            SerpentsSwiftness = input.ReadInt32();
            break;
          }
          case 176: {
            Longevity = input.ReadInt32();
            break;
          }
          case 184: {
            TheBeastWithin = input.ReadBool();
            break;
          }
          case 192: {
            CobraStrikes = input.ReadInt32();
            break;
          }
          case 200: {
            KindredSpirits = input.ReadInt32();
            break;
          }
          case 208: {
            BeastMastery = input.ReadBool();
            break;
          }
          case 216: {
            ImprovedConcussiveShot = input.ReadInt32();
            break;
          }
          case 224: {
            FocusedAim = input.ReadInt32();
            break;
          }
          case 232: {
            LethalShots = input.ReadInt32();
            break;
          }
          case 240: {
            CarefulAim = input.ReadInt32();
            break;
          }
          case 248: {
            ImprovedHuntersMark = input.ReadInt32();
            break;
          }
          case 256: {
            MortalShots = input.ReadInt32();
            break;
          }
          case 264: {
            GoForTheThroat = input.ReadInt32();
            break;
          }
          case 272: {
            ImprovedArcaneShot = input.ReadInt32();
            break;
          }
          case 280: {
            AimedShot = input.ReadBool();
            break;
          }
          case 288: {
            RapidKilling = input.ReadInt32();
            break;
          }
          case 296: {
            ImprovedStings = input.ReadInt32();
            break;
          }
          case 304: {
            Efficiency = input.ReadInt32();
            break;
          }
          case 312: {
            ConcussiveBarrage = input.ReadInt32();
            break;
          }
          case 320: {
            Readiness = input.ReadBool();
            break;
          }
          case 328: {
            Barrage = input.ReadInt32();
            break;
          }
          case 336: {
            CombatExperience = input.ReadInt32();
            break;
          }
          case 344: {
            RangedWeaponSpecialization = input.ReadInt32();
            break;
          }
          case 352: {
            PiercingShots = input.ReadInt32();
            break;
          }
          case 360: {
            TrueshotAura = input.ReadBool();
            break;
          }
          case 368: {
            ImprovedBarrage = input.ReadInt32();
            break;
          }
          case 376: {
            MasterMarksman = input.ReadInt32();
            break;
          }
          case 384: {
            RapidRecuperation = input.ReadInt32();
            break;
          }
          case 392: {
            WildQuiver = input.ReadInt32();
            break;
          }
          case 400: {
            SilencingShot = input.ReadBool();
            break;
          }
          case 408: {
            ImprovedSteadyShot = input.ReadInt32();
            break;
          }
          case 416: {
            MarkedForDeath = input.ReadInt32();
            break;
          }
          case 424: {
            ChimeraShot = input.ReadBool();
            break;
          }
          case 432: {
            ImprovedTracking = input.ReadInt32();
            break;
          }
          case 440: {
            HawkEye = input.ReadInt32();
            break;
          }
          case 448: {
            SavageStrikes = input.ReadInt32();
            break;
          }
          case 456: {
            Surefooted = input.ReadInt32();
            break;
          }
          case 464: {
            Entrapment = input.ReadInt32();
            break;
          }
          case 472: {
            TrapMastery = input.ReadInt32();
            break;
          }
          case 480: {
            SurvivalInstincts = input.ReadInt32();
            break;
          }
          case 488: {
            Survivalist = input.ReadInt32();
            break;
          }
          case 496: {
            ScatterShot = input.ReadBool();
            break;
          }
          case 504: {
            Deflection = input.ReadInt32();
            break;
          }
          case 512: {
            SurvivalTactics = input.ReadInt32();
            break;
          }
          case 520: {
            TNT = input.ReadInt32();
            break;
          }
          case 528: {
            LockAndLoad = input.ReadInt32();
            break;
          }
          case 536: {
            HunterVsWild = input.ReadInt32();
            break;
          }
          case 544: {
            KillerInstinct = input.ReadInt32();
            break;
          }
          case 552: {
            Counterattack = input.ReadBool();
            break;
          }
          case 560: {
            LightningReflexes = input.ReadInt32();
            break;
          }
          case 568: {
            Resourcefulness = input.ReadInt32();
            break;
          }
          case 576: {
            ExposeWeakness = input.ReadInt32();
            break;
          }
          case 584: {
            WyvernSting = input.ReadBool();
            break;
          }
          case 592: {
            ThrillOfTheHunt = input.ReadInt32();
            break;
          }
          case 600: {
            MasterTactician = input.ReadInt32();
            break;
          }
          case 608: {
            NoxiousStings = input.ReadInt32();
            break;
          }
          case 616: {
            PointOfNoEscape = input.ReadInt32();
            break;
          }
          case 624: {
            BlackArrow = input.ReadBool();
            break;
          }
          case 632: {
            SniperTraining = input.ReadInt32();
            break;
          }
          case 640: {
            HuntingParty = input.ReadInt32();
            break;
          }
          case 648: {
            ExplosiveShot = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HunterPetTalents : pb::IMessage<HunterPetTalents>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HunterPetTalents> _parser = new pb::MessageParser<HunterPetTalents>(() => new HunterPetTalents());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HunterPetTalents> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.HunterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HunterPetTalents() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HunterPetTalents(HunterPetTalents other) : this() {
      cobraReflexes_ = other.cobraReflexes_;
      dive_ = other.dive_;
      greatStamina_ = other.greatStamina_;
      naturalArmor_ = other.naturalArmor_;
      boarsSpeed_ = other.boarsSpeed_;
      mobility_ = other.mobility_;
      owlsFocus_ = other.owlsFocus_;
      spikedCollar_ = other.spikedCollar_;
      cullingTheHerd_ = other.cullingTheHerd_;
      lionhearted_ = other.lionhearted_;
      carrionFeeder_ = other.carrionFeeder_;
      greatResistance_ = other.greatResistance_;
      cornered_ = other.cornered_;
      feedingFrenzy_ = other.feedingFrenzy_;
      wolverineBite_ = other.wolverineBite_;
      roarOfRecovery_ = other.roarOfRecovery_;
      bullheaded_ = other.bullheaded_;
      graceOfTheMantis_ = other.graceOfTheMantis_;
      wildHunt_ = other.wildHunt_;
      roarOfSacrifice_ = other.roarOfSacrifice_;
      improvedCower_ = other.improvedCower_;
      bloodthirsty_ = other.bloodthirsty_;
      heartOfThePheonix_ = other.heartOfThePheonix_;
      spidersBite_ = other.spidersBite_;
      rabid_ = other.rabid_;
      lickYourWounds_ = other.lickYourWounds_;
      callOfTheWild_ = other.callOfTheWild_;
      sharkAttack_ = other.sharkAttack_;
      charge_ = other.charge_;
      bloodOfTheRhino_ = other.bloodOfTheRhino_;
      petBarding_ = other.petBarding_;
      guardDog_ = other.guardDog_;
      thunderstomp_ = other.thunderstomp_;
      lastStand_ = other.lastStand_;
      taunt_ = other.taunt_;
      intervene_ = other.intervene_;
      silverback_ = other.silverback_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HunterPetTalents Clone() {
      return new HunterPetTalents(this);
    }

    /// <summary>Field number for the "cobra_reflexes" field.</summary>
    public const int CobraReflexesFieldNumber = 1;
    private int cobraReflexes_;
    /// <summary>
    /// Cunning
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CobraReflexes {
      get { return cobraReflexes_; }
      set {
        cobraReflexes_ = value;
      }
    }

    /// <summary>Field number for the "dive" field.</summary>
    public const int DiveFieldNumber = 2;
    private bool dive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Dive {
      get { return dive_; }
      set {
        dive_ = value;
      }
    }

    /// <summary>Field number for the "great_stamina" field.</summary>
    public const int GreatStaminaFieldNumber = 3;
    private int greatStamina_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GreatStamina {
      get { return greatStamina_; }
      set {
        greatStamina_ = value;
      }
    }

    /// <summary>Field number for the "natural_armor" field.</summary>
    public const int NaturalArmorFieldNumber = 4;
    private int naturalArmor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NaturalArmor {
      get { return naturalArmor_; }
      set {
        naturalArmor_ = value;
      }
    }

    /// <summary>Field number for the "boars_speed" field.</summary>
    public const int BoarsSpeedFieldNumber = 5;
    private bool boarsSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BoarsSpeed {
      get { return boarsSpeed_; }
      set {
        boarsSpeed_ = value;
      }
    }

    /// <summary>Field number for the "mobility" field.</summary>
    public const int MobilityFieldNumber = 6;
    private int mobility_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mobility {
      get { return mobility_; }
      set {
        mobility_ = value;
      }
    }

    /// <summary>Field number for the "owls_focus" field.</summary>
    public const int OwlsFocusFieldNumber = 7;
    private int owlsFocus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OwlsFocus {
      get { return owlsFocus_; }
      set {
        owlsFocus_ = value;
      }
    }

    /// <summary>Field number for the "spiked_collar" field.</summary>
    public const int SpikedCollarFieldNumber = 8;
    private int spikedCollar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpikedCollar {
      get { return spikedCollar_; }
      set {
        spikedCollar_ = value;
      }
    }

    /// <summary>Field number for the "culling_the_herd" field.</summary>
    public const int CullingTheHerdFieldNumber = 9;
    private int cullingTheHerd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CullingTheHerd {
      get { return cullingTheHerd_; }
      set {
        cullingTheHerd_ = value;
      }
    }

    /// <summary>Field number for the "lionhearted" field.</summary>
    public const int LionheartedFieldNumber = 10;
    private int lionhearted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Lionhearted {
      get { return lionhearted_; }
      set {
        lionhearted_ = value;
      }
    }

    /// <summary>Field number for the "carrion_feeder" field.</summary>
    public const int CarrionFeederFieldNumber = 11;
    private bool carrionFeeder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CarrionFeeder {
      get { return carrionFeeder_; }
      set {
        carrionFeeder_ = value;
      }
    }

    /// <summary>Field number for the "great_resistance" field.</summary>
    public const int GreatResistanceFieldNumber = 12;
    private int greatResistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GreatResistance {
      get { return greatResistance_; }
      set {
        greatResistance_ = value;
      }
    }

    /// <summary>Field number for the "cornered" field.</summary>
    public const int CorneredFieldNumber = 13;
    private int cornered_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cornered {
      get { return cornered_; }
      set {
        cornered_ = value;
      }
    }

    /// <summary>Field number for the "feeding_frenzy" field.</summary>
    public const int FeedingFrenzyFieldNumber = 14;
    private int feedingFrenzy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FeedingFrenzy {
      get { return feedingFrenzy_; }
      set {
        feedingFrenzy_ = value;
      }
    }

    /// <summary>Field number for the "wolverine_bite" field.</summary>
    public const int WolverineBiteFieldNumber = 15;
    private bool wolverineBite_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WolverineBite {
      get { return wolverineBite_; }
      set {
        wolverineBite_ = value;
      }
    }

    /// <summary>Field number for the "roar_of_recovery" field.</summary>
    public const int RoarOfRecoveryFieldNumber = 16;
    private bool roarOfRecovery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RoarOfRecovery {
      get { return roarOfRecovery_; }
      set {
        roarOfRecovery_ = value;
      }
    }

    /// <summary>Field number for the "bullheaded" field.</summary>
    public const int BullheadedFieldNumber = 17;
    private bool bullheaded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Bullheaded {
      get { return bullheaded_; }
      set {
        bullheaded_ = value;
      }
    }

    /// <summary>Field number for the "grace_of_the_mantis" field.</summary>
    public const int GraceOfTheMantisFieldNumber = 18;
    private int graceOfTheMantis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GraceOfTheMantis {
      get { return graceOfTheMantis_; }
      set {
        graceOfTheMantis_ = value;
      }
    }

    /// <summary>Field number for the "wild_hunt" field.</summary>
    public const int WildHuntFieldNumber = 19;
    private int wildHunt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WildHunt {
      get { return wildHunt_; }
      set {
        wildHunt_ = value;
      }
    }

    /// <summary>Field number for the "roar_of_sacrifice" field.</summary>
    public const int RoarOfSacrificeFieldNumber = 20;
    private bool roarOfSacrifice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RoarOfSacrifice {
      get { return roarOfSacrifice_; }
      set {
        roarOfSacrifice_ = value;
      }
    }

    /// <summary>Field number for the "improved_cower" field.</summary>
    public const int ImprovedCowerFieldNumber = 21;
    private int improvedCower_;
    /// <summary>
    /// Ferocity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedCower {
      get { return improvedCower_; }
      set {
        improvedCower_ = value;
      }
    }

    /// <summary>Field number for the "bloodthirsty" field.</summary>
    public const int BloodthirstyFieldNumber = 22;
    private int bloodthirsty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Bloodthirsty {
      get { return bloodthirsty_; }
      set {
        bloodthirsty_ = value;
      }
    }

    /// <summary>Field number for the "heart_of_the_pheonix" field.</summary>
    public const int HeartOfThePheonixFieldNumber = 23;
    private bool heartOfThePheonix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HeartOfThePheonix {
      get { return heartOfThePheonix_; }
      set {
        heartOfThePheonix_ = value;
      }
    }

    /// <summary>Field number for the "spiders_bite" field.</summary>
    public const int SpidersBiteFieldNumber = 24;
    private int spidersBite_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpidersBite {
      get { return spidersBite_; }
      set {
        spidersBite_ = value;
      }
    }

    /// <summary>Field number for the "rabid" field.</summary>
    public const int RabidFieldNumber = 25;
    private bool rabid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Rabid {
      get { return rabid_; }
      set {
        rabid_ = value;
      }
    }

    /// <summary>Field number for the "lick_your_wounds" field.</summary>
    public const int LickYourWoundsFieldNumber = 26;
    private bool lickYourWounds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LickYourWounds {
      get { return lickYourWounds_; }
      set {
        lickYourWounds_ = value;
      }
    }

    /// <summary>Field number for the "call_of_the_wild" field.</summary>
    public const int CallOfTheWildFieldNumber = 27;
    private bool callOfTheWild_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CallOfTheWild {
      get { return callOfTheWild_; }
      set {
        callOfTheWild_ = value;
      }
    }

    /// <summary>Field number for the "shark_attack" field.</summary>
    public const int SharkAttackFieldNumber = 28;
    private int sharkAttack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SharkAttack {
      get { return sharkAttack_; }
      set {
        sharkAttack_ = value;
      }
    }

    /// <summary>Field number for the "charge" field.</summary>
    public const int ChargeFieldNumber = 29;
    private bool charge_;
    /// <summary>
    /// Tenacity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Charge {
      get { return charge_; }
      set {
        charge_ = value;
      }
    }

    /// <summary>Field number for the "blood_of_the_rhino" field.</summary>
    public const int BloodOfTheRhinoFieldNumber = 30;
    private int bloodOfTheRhino_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BloodOfTheRhino {
      get { return bloodOfTheRhino_; }
      set {
        bloodOfTheRhino_ = value;
      }
    }

    /// <summary>Field number for the "pet_barding" field.</summary>
    public const int PetBardingFieldNumber = 31;
    private int petBarding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PetBarding {
      get { return petBarding_; }
      set {
        petBarding_ = value;
      }
    }

    /// <summary>Field number for the "guard_dog" field.</summary>
    public const int GuardDogFieldNumber = 32;
    private int guardDog_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GuardDog {
      get { return guardDog_; }
      set {
        guardDog_ = value;
      }
    }

    /// <summary>Field number for the "thunderstomp" field.</summary>
    public const int ThunderstompFieldNumber = 33;
    private bool thunderstomp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Thunderstomp {
      get { return thunderstomp_; }
      set {
        thunderstomp_ = value;
      }
    }

    /// <summary>Field number for the "last_stand" field.</summary>
    public const int LastStandFieldNumber = 34;
    private bool lastStand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LastStand {
      get { return lastStand_; }
      set {
        lastStand_ = value;
      }
    }

    /// <summary>Field number for the "taunt" field.</summary>
    public const int TauntFieldNumber = 35;
    private bool taunt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Taunt {
      get { return taunt_; }
      set {
        taunt_ = value;
      }
    }

    /// <summary>Field number for the "intervene" field.</summary>
    public const int InterveneFieldNumber = 36;
    private bool intervene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Intervene {
      get { return intervene_; }
      set {
        intervene_ = value;
      }
    }

    /// <summary>Field number for the "silverback" field.</summary>
    public const int SilverbackFieldNumber = 37;
    private int silverback_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Silverback {
      get { return silverback_; }
      set {
        silverback_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HunterPetTalents);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HunterPetTalents other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CobraReflexes != other.CobraReflexes) return false;
      if (Dive != other.Dive) return false;
      if (GreatStamina != other.GreatStamina) return false;
      if (NaturalArmor != other.NaturalArmor) return false;
      if (BoarsSpeed != other.BoarsSpeed) return false;
      if (Mobility != other.Mobility) return false;
      if (OwlsFocus != other.OwlsFocus) return false;
      if (SpikedCollar != other.SpikedCollar) return false;
      if (CullingTheHerd != other.CullingTheHerd) return false;
      if (Lionhearted != other.Lionhearted) return false;
      if (CarrionFeeder != other.CarrionFeeder) return false;
      if (GreatResistance != other.GreatResistance) return false;
      if (Cornered != other.Cornered) return false;
      if (FeedingFrenzy != other.FeedingFrenzy) return false;
      if (WolverineBite != other.WolverineBite) return false;
      if (RoarOfRecovery != other.RoarOfRecovery) return false;
      if (Bullheaded != other.Bullheaded) return false;
      if (GraceOfTheMantis != other.GraceOfTheMantis) return false;
      if (WildHunt != other.WildHunt) return false;
      if (RoarOfSacrifice != other.RoarOfSacrifice) return false;
      if (ImprovedCower != other.ImprovedCower) return false;
      if (Bloodthirsty != other.Bloodthirsty) return false;
      if (HeartOfThePheonix != other.HeartOfThePheonix) return false;
      if (SpidersBite != other.SpidersBite) return false;
      if (Rabid != other.Rabid) return false;
      if (LickYourWounds != other.LickYourWounds) return false;
      if (CallOfTheWild != other.CallOfTheWild) return false;
      if (SharkAttack != other.SharkAttack) return false;
      if (Charge != other.Charge) return false;
      if (BloodOfTheRhino != other.BloodOfTheRhino) return false;
      if (PetBarding != other.PetBarding) return false;
      if (GuardDog != other.GuardDog) return false;
      if (Thunderstomp != other.Thunderstomp) return false;
      if (LastStand != other.LastStand) return false;
      if (Taunt != other.Taunt) return false;
      if (Intervene != other.Intervene) return false;
      if (Silverback != other.Silverback) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CobraReflexes != 0) hash ^= CobraReflexes.GetHashCode();
      if (Dive != false) hash ^= Dive.GetHashCode();
      if (GreatStamina != 0) hash ^= GreatStamina.GetHashCode();
      if (NaturalArmor != 0) hash ^= NaturalArmor.GetHashCode();
      if (BoarsSpeed != false) hash ^= BoarsSpeed.GetHashCode();
      if (Mobility != 0) hash ^= Mobility.GetHashCode();
      if (OwlsFocus != 0) hash ^= OwlsFocus.GetHashCode();
      if (SpikedCollar != 0) hash ^= SpikedCollar.GetHashCode();
      if (CullingTheHerd != 0) hash ^= CullingTheHerd.GetHashCode();
      if (Lionhearted != 0) hash ^= Lionhearted.GetHashCode();
      if (CarrionFeeder != false) hash ^= CarrionFeeder.GetHashCode();
      if (GreatResistance != 0) hash ^= GreatResistance.GetHashCode();
      if (Cornered != 0) hash ^= Cornered.GetHashCode();
      if (FeedingFrenzy != 0) hash ^= FeedingFrenzy.GetHashCode();
      if (WolverineBite != false) hash ^= WolverineBite.GetHashCode();
      if (RoarOfRecovery != false) hash ^= RoarOfRecovery.GetHashCode();
      if (Bullheaded != false) hash ^= Bullheaded.GetHashCode();
      if (GraceOfTheMantis != 0) hash ^= GraceOfTheMantis.GetHashCode();
      if (WildHunt != 0) hash ^= WildHunt.GetHashCode();
      if (RoarOfSacrifice != false) hash ^= RoarOfSacrifice.GetHashCode();
      if (ImprovedCower != 0) hash ^= ImprovedCower.GetHashCode();
      if (Bloodthirsty != 0) hash ^= Bloodthirsty.GetHashCode();
      if (HeartOfThePheonix != false) hash ^= HeartOfThePheonix.GetHashCode();
      if (SpidersBite != 0) hash ^= SpidersBite.GetHashCode();
      if (Rabid != false) hash ^= Rabid.GetHashCode();
      if (LickYourWounds != false) hash ^= LickYourWounds.GetHashCode();
      if (CallOfTheWild != false) hash ^= CallOfTheWild.GetHashCode();
      if (SharkAttack != 0) hash ^= SharkAttack.GetHashCode();
      if (Charge != false) hash ^= Charge.GetHashCode();
      if (BloodOfTheRhino != 0) hash ^= BloodOfTheRhino.GetHashCode();
      if (PetBarding != 0) hash ^= PetBarding.GetHashCode();
      if (GuardDog != 0) hash ^= GuardDog.GetHashCode();
      if (Thunderstomp != false) hash ^= Thunderstomp.GetHashCode();
      if (LastStand != false) hash ^= LastStand.GetHashCode();
      if (Taunt != false) hash ^= Taunt.GetHashCode();
      if (Intervene != false) hash ^= Intervene.GetHashCode();
      if (Silverback != 0) hash ^= Silverback.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CobraReflexes != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CobraReflexes);
      }
      if (Dive != false) {
        output.WriteRawTag(16);
        output.WriteBool(Dive);
      }
      if (GreatStamina != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GreatStamina);
      }
      if (NaturalArmor != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NaturalArmor);
      }
      if (BoarsSpeed != false) {
        output.WriteRawTag(40);
        output.WriteBool(BoarsSpeed);
      }
      if (Mobility != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Mobility);
      }
      if (OwlsFocus != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(OwlsFocus);
      }
      if (SpikedCollar != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(SpikedCollar);
      }
      if (CullingTheHerd != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CullingTheHerd);
      }
      if (Lionhearted != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Lionhearted);
      }
      if (CarrionFeeder != false) {
        output.WriteRawTag(88);
        output.WriteBool(CarrionFeeder);
      }
      if (GreatResistance != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(GreatResistance);
      }
      if (Cornered != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Cornered);
      }
      if (FeedingFrenzy != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(FeedingFrenzy);
      }
      if (WolverineBite != false) {
        output.WriteRawTag(120);
        output.WriteBool(WolverineBite);
      }
      if (RoarOfRecovery != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(RoarOfRecovery);
      }
      if (Bullheaded != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(Bullheaded);
      }
      if (GraceOfTheMantis != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(GraceOfTheMantis);
      }
      if (WildHunt != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(WildHunt);
      }
      if (RoarOfSacrifice != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(RoarOfSacrifice);
      }
      if (ImprovedCower != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(ImprovedCower);
      }
      if (Bloodthirsty != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(Bloodthirsty);
      }
      if (HeartOfThePheonix != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(HeartOfThePheonix);
      }
      if (SpidersBite != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(SpidersBite);
      }
      if (Rabid != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(Rabid);
      }
      if (LickYourWounds != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(LickYourWounds);
      }
      if (CallOfTheWild != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(CallOfTheWild);
      }
      if (SharkAttack != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(SharkAttack);
      }
      if (Charge != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(Charge);
      }
      if (BloodOfTheRhino != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(BloodOfTheRhino);
      }
      if (PetBarding != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(PetBarding);
      }
      if (GuardDog != 0) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(GuardDog);
      }
      if (Thunderstomp != false) {
        output.WriteRawTag(136, 2);
        output.WriteBool(Thunderstomp);
      }
      if (LastStand != false) {
        output.WriteRawTag(144, 2);
        output.WriteBool(LastStand);
      }
      if (Taunt != false) {
        output.WriteRawTag(152, 2);
        output.WriteBool(Taunt);
      }
      if (Intervene != false) {
        output.WriteRawTag(160, 2);
        output.WriteBool(Intervene);
      }
      if (Silverback != 0) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(Silverback);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CobraReflexes != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CobraReflexes);
      }
      if (Dive != false) {
        output.WriteRawTag(16);
        output.WriteBool(Dive);
      }
      if (GreatStamina != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GreatStamina);
      }
      if (NaturalArmor != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NaturalArmor);
      }
      if (BoarsSpeed != false) {
        output.WriteRawTag(40);
        output.WriteBool(BoarsSpeed);
      }
      if (Mobility != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Mobility);
      }
      if (OwlsFocus != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(OwlsFocus);
      }
      if (SpikedCollar != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(SpikedCollar);
      }
      if (CullingTheHerd != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CullingTheHerd);
      }
      if (Lionhearted != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Lionhearted);
      }
      if (CarrionFeeder != false) {
        output.WriteRawTag(88);
        output.WriteBool(CarrionFeeder);
      }
      if (GreatResistance != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(GreatResistance);
      }
      if (Cornered != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Cornered);
      }
      if (FeedingFrenzy != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(FeedingFrenzy);
      }
      if (WolverineBite != false) {
        output.WriteRawTag(120);
        output.WriteBool(WolverineBite);
      }
      if (RoarOfRecovery != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(RoarOfRecovery);
      }
      if (Bullheaded != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(Bullheaded);
      }
      if (GraceOfTheMantis != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(GraceOfTheMantis);
      }
      if (WildHunt != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(WildHunt);
      }
      if (RoarOfSacrifice != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(RoarOfSacrifice);
      }
      if (ImprovedCower != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(ImprovedCower);
      }
      if (Bloodthirsty != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(Bloodthirsty);
      }
      if (HeartOfThePheonix != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(HeartOfThePheonix);
      }
      if (SpidersBite != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(SpidersBite);
      }
      if (Rabid != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(Rabid);
      }
      if (LickYourWounds != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(LickYourWounds);
      }
      if (CallOfTheWild != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(CallOfTheWild);
      }
      if (SharkAttack != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(SharkAttack);
      }
      if (Charge != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(Charge);
      }
      if (BloodOfTheRhino != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(BloodOfTheRhino);
      }
      if (PetBarding != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(PetBarding);
      }
      if (GuardDog != 0) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(GuardDog);
      }
      if (Thunderstomp != false) {
        output.WriteRawTag(136, 2);
        output.WriteBool(Thunderstomp);
      }
      if (LastStand != false) {
        output.WriteRawTag(144, 2);
        output.WriteBool(LastStand);
      }
      if (Taunt != false) {
        output.WriteRawTag(152, 2);
        output.WriteBool(Taunt);
      }
      if (Intervene != false) {
        output.WriteRawTag(160, 2);
        output.WriteBool(Intervene);
      }
      if (Silverback != 0) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(Silverback);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CobraReflexes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CobraReflexes);
      }
      if (Dive != false) {
        size += 1 + 1;
      }
      if (GreatStamina != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GreatStamina);
      }
      if (NaturalArmor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NaturalArmor);
      }
      if (BoarsSpeed != false) {
        size += 1 + 1;
      }
      if (Mobility != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mobility);
      }
      if (OwlsFocus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OwlsFocus);
      }
      if (SpikedCollar != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpikedCollar);
      }
      if (CullingTheHerd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CullingTheHerd);
      }
      if (Lionhearted != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lionhearted);
      }
      if (CarrionFeeder != false) {
        size += 1 + 1;
      }
      if (GreatResistance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GreatResistance);
      }
      if (Cornered != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cornered);
      }
      if (FeedingFrenzy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FeedingFrenzy);
      }
      if (WolverineBite != false) {
        size += 1 + 1;
      }
      if (RoarOfRecovery != false) {
        size += 2 + 1;
      }
      if (Bullheaded != false) {
        size += 2 + 1;
      }
      if (GraceOfTheMantis != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GraceOfTheMantis);
      }
      if (WildHunt != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(WildHunt);
      }
      if (RoarOfSacrifice != false) {
        size += 2 + 1;
      }
      if (ImprovedCower != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedCower);
      }
      if (Bloodthirsty != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Bloodthirsty);
      }
      if (HeartOfThePheonix != false) {
        size += 2 + 1;
      }
      if (SpidersBite != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SpidersBite);
      }
      if (Rabid != false) {
        size += 2 + 1;
      }
      if (LickYourWounds != false) {
        size += 2 + 1;
      }
      if (CallOfTheWild != false) {
        size += 2 + 1;
      }
      if (SharkAttack != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SharkAttack);
      }
      if (Charge != false) {
        size += 2 + 1;
      }
      if (BloodOfTheRhino != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BloodOfTheRhino);
      }
      if (PetBarding != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PetBarding);
      }
      if (GuardDog != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GuardDog);
      }
      if (Thunderstomp != false) {
        size += 2 + 1;
      }
      if (LastStand != false) {
        size += 2 + 1;
      }
      if (Taunt != false) {
        size += 2 + 1;
      }
      if (Intervene != false) {
        size += 2 + 1;
      }
      if (Silverback != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Silverback);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HunterPetTalents other) {
      if (other == null) {
        return;
      }
      if (other.CobraReflexes != 0) {
        CobraReflexes = other.CobraReflexes;
      }
      if (other.Dive != false) {
        Dive = other.Dive;
      }
      if (other.GreatStamina != 0) {
        GreatStamina = other.GreatStamina;
      }
      if (other.NaturalArmor != 0) {
        NaturalArmor = other.NaturalArmor;
      }
      if (other.BoarsSpeed != false) {
        BoarsSpeed = other.BoarsSpeed;
      }
      if (other.Mobility != 0) {
        Mobility = other.Mobility;
      }
      if (other.OwlsFocus != 0) {
        OwlsFocus = other.OwlsFocus;
      }
      if (other.SpikedCollar != 0) {
        SpikedCollar = other.SpikedCollar;
      }
      if (other.CullingTheHerd != 0) {
        CullingTheHerd = other.CullingTheHerd;
      }
      if (other.Lionhearted != 0) {
        Lionhearted = other.Lionhearted;
      }
      if (other.CarrionFeeder != false) {
        CarrionFeeder = other.CarrionFeeder;
      }
      if (other.GreatResistance != 0) {
        GreatResistance = other.GreatResistance;
      }
      if (other.Cornered != 0) {
        Cornered = other.Cornered;
      }
      if (other.FeedingFrenzy != 0) {
        FeedingFrenzy = other.FeedingFrenzy;
      }
      if (other.WolverineBite != false) {
        WolverineBite = other.WolverineBite;
      }
      if (other.RoarOfRecovery != false) {
        RoarOfRecovery = other.RoarOfRecovery;
      }
      if (other.Bullheaded != false) {
        Bullheaded = other.Bullheaded;
      }
      if (other.GraceOfTheMantis != 0) {
        GraceOfTheMantis = other.GraceOfTheMantis;
      }
      if (other.WildHunt != 0) {
        WildHunt = other.WildHunt;
      }
      if (other.RoarOfSacrifice != false) {
        RoarOfSacrifice = other.RoarOfSacrifice;
      }
      if (other.ImprovedCower != 0) {
        ImprovedCower = other.ImprovedCower;
      }
      if (other.Bloodthirsty != 0) {
        Bloodthirsty = other.Bloodthirsty;
      }
      if (other.HeartOfThePheonix != false) {
        HeartOfThePheonix = other.HeartOfThePheonix;
      }
      if (other.SpidersBite != 0) {
        SpidersBite = other.SpidersBite;
      }
      if (other.Rabid != false) {
        Rabid = other.Rabid;
      }
      if (other.LickYourWounds != false) {
        LickYourWounds = other.LickYourWounds;
      }
      if (other.CallOfTheWild != false) {
        CallOfTheWild = other.CallOfTheWild;
      }
      if (other.SharkAttack != 0) {
        SharkAttack = other.SharkAttack;
      }
      if (other.Charge != false) {
        Charge = other.Charge;
      }
      if (other.BloodOfTheRhino != 0) {
        BloodOfTheRhino = other.BloodOfTheRhino;
      }
      if (other.PetBarding != 0) {
        PetBarding = other.PetBarding;
      }
      if (other.GuardDog != 0) {
        GuardDog = other.GuardDog;
      }
      if (other.Thunderstomp != false) {
        Thunderstomp = other.Thunderstomp;
      }
      if (other.LastStand != false) {
        LastStand = other.LastStand;
      }
      if (other.Taunt != false) {
        Taunt = other.Taunt;
      }
      if (other.Intervene != false) {
        Intervene = other.Intervene;
      }
      if (other.Silverback != 0) {
        Silverback = other.Silverback;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CobraReflexes = input.ReadInt32();
            break;
          }
          case 16: {
            Dive = input.ReadBool();
            break;
          }
          case 24: {
            GreatStamina = input.ReadInt32();
            break;
          }
          case 32: {
            NaturalArmor = input.ReadInt32();
            break;
          }
          case 40: {
            BoarsSpeed = input.ReadBool();
            break;
          }
          case 48: {
            Mobility = input.ReadInt32();
            break;
          }
          case 56: {
            OwlsFocus = input.ReadInt32();
            break;
          }
          case 64: {
            SpikedCollar = input.ReadInt32();
            break;
          }
          case 72: {
            CullingTheHerd = input.ReadInt32();
            break;
          }
          case 80: {
            Lionhearted = input.ReadInt32();
            break;
          }
          case 88: {
            CarrionFeeder = input.ReadBool();
            break;
          }
          case 96: {
            GreatResistance = input.ReadInt32();
            break;
          }
          case 104: {
            Cornered = input.ReadInt32();
            break;
          }
          case 112: {
            FeedingFrenzy = input.ReadInt32();
            break;
          }
          case 120: {
            WolverineBite = input.ReadBool();
            break;
          }
          case 128: {
            RoarOfRecovery = input.ReadBool();
            break;
          }
          case 136: {
            Bullheaded = input.ReadBool();
            break;
          }
          case 144: {
            GraceOfTheMantis = input.ReadInt32();
            break;
          }
          case 152: {
            WildHunt = input.ReadInt32();
            break;
          }
          case 160: {
            RoarOfSacrifice = input.ReadBool();
            break;
          }
          case 168: {
            ImprovedCower = input.ReadInt32();
            break;
          }
          case 176: {
            Bloodthirsty = input.ReadInt32();
            break;
          }
          case 184: {
            HeartOfThePheonix = input.ReadBool();
            break;
          }
          case 192: {
            SpidersBite = input.ReadInt32();
            break;
          }
          case 200: {
            Rabid = input.ReadBool();
            break;
          }
          case 208: {
            LickYourWounds = input.ReadBool();
            break;
          }
          case 216: {
            CallOfTheWild = input.ReadBool();
            break;
          }
          case 224: {
            SharkAttack = input.ReadInt32();
            break;
          }
          case 232: {
            Charge = input.ReadBool();
            break;
          }
          case 240: {
            BloodOfTheRhino = input.ReadInt32();
            break;
          }
          case 248: {
            PetBarding = input.ReadInt32();
            break;
          }
          case 256: {
            GuardDog = input.ReadInt32();
            break;
          }
          case 264: {
            Thunderstomp = input.ReadBool();
            break;
          }
          case 272: {
            LastStand = input.ReadBool();
            break;
          }
          case 280: {
            Taunt = input.ReadBool();
            break;
          }
          case 288: {
            Intervene = input.ReadBool();
            break;
          }
          case 296: {
            Silverback = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CobraReflexes = input.ReadInt32();
            break;
          }
          case 16: {
            Dive = input.ReadBool();
            break;
          }
          case 24: {
            GreatStamina = input.ReadInt32();
            break;
          }
          case 32: {
            NaturalArmor = input.ReadInt32();
            break;
          }
          case 40: {
            BoarsSpeed = input.ReadBool();
            break;
          }
          case 48: {
            Mobility = input.ReadInt32();
            break;
          }
          case 56: {
            OwlsFocus = input.ReadInt32();
            break;
          }
          case 64: {
            SpikedCollar = input.ReadInt32();
            break;
          }
          case 72: {
            CullingTheHerd = input.ReadInt32();
            break;
          }
          case 80: {
            Lionhearted = input.ReadInt32();
            break;
          }
          case 88: {
            CarrionFeeder = input.ReadBool();
            break;
          }
          case 96: {
            GreatResistance = input.ReadInt32();
            break;
          }
          case 104: {
            Cornered = input.ReadInt32();
            break;
          }
          case 112: {
            FeedingFrenzy = input.ReadInt32();
            break;
          }
          case 120: {
            WolverineBite = input.ReadBool();
            break;
          }
          case 128: {
            RoarOfRecovery = input.ReadBool();
            break;
          }
          case 136: {
            Bullheaded = input.ReadBool();
            break;
          }
          case 144: {
            GraceOfTheMantis = input.ReadInt32();
            break;
          }
          case 152: {
            WildHunt = input.ReadInt32();
            break;
          }
          case 160: {
            RoarOfSacrifice = input.ReadBool();
            break;
          }
          case 168: {
            ImprovedCower = input.ReadInt32();
            break;
          }
          case 176: {
            Bloodthirsty = input.ReadInt32();
            break;
          }
          case 184: {
            HeartOfThePheonix = input.ReadBool();
            break;
          }
          case 192: {
            SpidersBite = input.ReadInt32();
            break;
          }
          case 200: {
            Rabid = input.ReadBool();
            break;
          }
          case 208: {
            LickYourWounds = input.ReadBool();
            break;
          }
          case 216: {
            CallOfTheWild = input.ReadBool();
            break;
          }
          case 224: {
            SharkAttack = input.ReadInt32();
            break;
          }
          case 232: {
            Charge = input.ReadBool();
            break;
          }
          case 240: {
            BloodOfTheRhino = input.ReadInt32();
            break;
          }
          case 248: {
            PetBarding = input.ReadInt32();
            break;
          }
          case 256: {
            GuardDog = input.ReadInt32();
            break;
          }
          case 264: {
            Thunderstomp = input.ReadBool();
            break;
          }
          case 272: {
            LastStand = input.ReadBool();
            break;
          }
          case 280: {
            Taunt = input.ReadBool();
            break;
          }
          case 288: {
            Intervene = input.ReadBool();
            break;
          }
          case 296: {
            Silverback = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Hunter : pb::IMessage<Hunter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Hunter> _parser = new pb::MessageParser<Hunter>(() => new Hunter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Hunter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.HunterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Hunter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Hunter(Hunter other) : this() {
      options_ = other.options_ != null ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Hunter Clone() {
      return new Hunter(this);
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.Hunter.Types.Options options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Hunter.Types.Options Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Hunter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Hunter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (options_ != null) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Hunter other) {
      if (other == null) {
        return;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          Options = new global::SirusDbScrapper.UIDatabase.Hunter.Types.Options();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            if (options_ == null) {
              Options = new global::SirusDbScrapper.UIDatabase.Hunter.Types.Options();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            if (options_ == null) {
              Options = new global::SirusDbScrapper.UIDatabase.Hunter.Types.Options();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Hunter message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Rotation : pb::IMessage<Rotation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Rotation> _parser = new pb::MessageParser<Rotation>(() => new Rotation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Rotation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SirusDbScrapper.UIDatabase.Hunter.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation(Rotation other) : this() {
          type_ = other.type_;
          sting_ = other.sting_;
          trapWeave_ = other.trapWeave_;
          viperStartManaPercent_ = other.viperStartManaPercent_;
          viperStopManaPercent_ = other.viperStopManaPercent_;
          allowExplosiveShotDownrank_ = other.allowExplosiveShotDownrank_;
          multiDotSerpentSting_ = other.multiDotSerpentSting_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation Clone() {
          return new Rotation(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 9;
        private global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.RotationType type_ = global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.RotationType.UnknownType;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.RotationType Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "sting" field.</summary>
        public const int StingFieldNumber = 5;
        private global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.StingType sting_ = global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.StingType.NoSting;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.StingType Sting {
          get { return sting_; }
          set {
            sting_ = value;
          }
        }

        /// <summary>Field number for the "trap_weave" field.</summary>
        public const int TrapWeaveFieldNumber = 1;
        private bool trapWeave_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool TrapWeave {
          get { return trapWeave_; }
          set {
            trapWeave_ = value;
          }
        }

        /// <summary>Field number for the "viper_start_mana_percent" field.</summary>
        public const int ViperStartManaPercentFieldNumber = 6;
        private double viperStartManaPercent_;
        /// <summary>
        /// Switch to Aspect of the Viper when mana goes below this percent.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double ViperStartManaPercent {
          get { return viperStartManaPercent_; }
          set {
            viperStartManaPercent_ = value;
          }
        }

        /// <summary>Field number for the "viper_stop_mana_percent" field.</summary>
        public const int ViperStopManaPercentFieldNumber = 7;
        private double viperStopManaPercent_;
        /// <summary>
        /// Switch back to Aspect of the Hawk when mana goes above this percent.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double ViperStopManaPercent {
          get { return viperStopManaPercent_; }
          set {
            viperStopManaPercent_ = value;
          }
        }

        /// <summary>Field number for the "allow_explosive_shot_downrank" field.</summary>
        public const int AllowExplosiveShotDownrankFieldNumber = 10;
        private bool allowExplosiveShotDownrank_;
        /// <summary>
        /// Allow use of Explosive Shot Rank 3 during LNL procs.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AllowExplosiveShotDownrank {
          get { return allowExplosiveShotDownrank_; }
          set {
            allowExplosiveShotDownrank_ = value;
          }
        }

        /// <summary>Field number for the "multi_dot_serpent_sting" field.</summary>
        public const int MultiDotSerpentStingFieldNumber = 11;
        private bool multiDotSerpentSting_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool MultiDotSerpentSting {
          get { return multiDotSerpentSting_; }
          set {
            multiDotSerpentSting_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Rotation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Rotation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (Sting != other.Sting) return false;
          if (TrapWeave != other.TrapWeave) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ViperStartManaPercent, other.ViperStartManaPercent)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ViperStopManaPercent, other.ViperStopManaPercent)) return false;
          if (AllowExplosiveShotDownrank != other.AllowExplosiveShotDownrank) return false;
          if (MultiDotSerpentSting != other.MultiDotSerpentSting) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.RotationType.UnknownType) hash ^= Type.GetHashCode();
          if (Sting != global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.StingType.NoSting) hash ^= Sting.GetHashCode();
          if (TrapWeave != false) hash ^= TrapWeave.GetHashCode();
          if (ViperStartManaPercent != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ViperStartManaPercent);
          if (ViperStopManaPercent != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ViperStopManaPercent);
          if (AllowExplosiveShotDownrank != false) hash ^= AllowExplosiveShotDownrank.GetHashCode();
          if (MultiDotSerpentSting != false) hash ^= MultiDotSerpentSting.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TrapWeave != false) {
            output.WriteRawTag(8);
            output.WriteBool(TrapWeave);
          }
          if (Sting != global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.StingType.NoSting) {
            output.WriteRawTag(40);
            output.WriteEnum((int) Sting);
          }
          if (ViperStartManaPercent != 0D) {
            output.WriteRawTag(49);
            output.WriteDouble(ViperStartManaPercent);
          }
          if (ViperStopManaPercent != 0D) {
            output.WriteRawTag(57);
            output.WriteDouble(ViperStopManaPercent);
          }
          if (Type != global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.RotationType.UnknownType) {
            output.WriteRawTag(72);
            output.WriteEnum((int) Type);
          }
          if (AllowExplosiveShotDownrank != false) {
            output.WriteRawTag(80);
            output.WriteBool(AllowExplosiveShotDownrank);
          }
          if (MultiDotSerpentSting != false) {
            output.WriteRawTag(88);
            output.WriteBool(MultiDotSerpentSting);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TrapWeave != false) {
            output.WriteRawTag(8);
            output.WriteBool(TrapWeave);
          }
          if (Sting != global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.StingType.NoSting) {
            output.WriteRawTag(40);
            output.WriteEnum((int) Sting);
          }
          if (ViperStartManaPercent != 0D) {
            output.WriteRawTag(49);
            output.WriteDouble(ViperStartManaPercent);
          }
          if (ViperStopManaPercent != 0D) {
            output.WriteRawTag(57);
            output.WriteDouble(ViperStopManaPercent);
          }
          if (Type != global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.RotationType.UnknownType) {
            output.WriteRawTag(72);
            output.WriteEnum((int) Type);
          }
          if (AllowExplosiveShotDownrank != false) {
            output.WriteRawTag(80);
            output.WriteBool(AllowExplosiveShotDownrank);
          }
          if (MultiDotSerpentSting != false) {
            output.WriteRawTag(88);
            output.WriteBool(MultiDotSerpentSting);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Type != global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.RotationType.UnknownType) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (Sting != global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.StingType.NoSting) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Sting);
          }
          if (TrapWeave != false) {
            size += 1 + 1;
          }
          if (ViperStartManaPercent != 0D) {
            size += 1 + 8;
          }
          if (ViperStopManaPercent != 0D) {
            size += 1 + 8;
          }
          if (AllowExplosiveShotDownrank != false) {
            size += 1 + 1;
          }
          if (MultiDotSerpentSting != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Rotation other) {
          if (other == null) {
            return;
          }
          if (other.Type != global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.RotationType.UnknownType) {
            Type = other.Type;
          }
          if (other.Sting != global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.StingType.NoSting) {
            Sting = other.Sting;
          }
          if (other.TrapWeave != false) {
            TrapWeave = other.TrapWeave;
          }
          if (other.ViperStartManaPercent != 0D) {
            ViperStartManaPercent = other.ViperStartManaPercent;
          }
          if (other.ViperStopManaPercent != 0D) {
            ViperStopManaPercent = other.ViperStopManaPercent;
          }
          if (other.AllowExplosiveShotDownrank != false) {
            AllowExplosiveShotDownrank = other.AllowExplosiveShotDownrank;
          }
          if (other.MultiDotSerpentSting != false) {
            MultiDotSerpentSting = other.MultiDotSerpentSting;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                TrapWeave = input.ReadBool();
                break;
              }
              case 40: {
                Sting = (global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.StingType) input.ReadEnum();
                break;
              }
              case 49: {
                ViperStartManaPercent = input.ReadDouble();
                break;
              }
              case 57: {
                ViperStopManaPercent = input.ReadDouble();
                break;
              }
              case 72: {
                Type = (global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.RotationType) input.ReadEnum();
                break;
              }
              case 80: {
                AllowExplosiveShotDownrank = input.ReadBool();
                break;
              }
              case 88: {
                MultiDotSerpentSting = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                TrapWeave = input.ReadBool();
                break;
              }
              case 40: {
                Sting = (global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.StingType) input.ReadEnum();
                break;
              }
              case 49: {
                ViperStartManaPercent = input.ReadDouble();
                break;
              }
              case 57: {
                ViperStopManaPercent = input.ReadDouble();
                break;
              }
              case 72: {
                Type = (global::SirusDbScrapper.UIDatabase.Hunter.Types.Rotation.Types.RotationType) input.ReadEnum();
                break;
              }
              case 80: {
                AllowExplosiveShotDownrank = input.ReadBool();
                break;
              }
              case 88: {
                MultiDotSerpentSting = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Rotation message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public enum RotationType {
            [pbr::OriginalName("UnknownType")] UnknownType = 0,
            [pbr::OriginalName("SingleTarget")] SingleTarget = 1,
            [pbr::OriginalName("Aoe")] Aoe = 3,
            [pbr::OriginalName("Custom")] Custom = 2,
          }

          public enum StingType {
            [pbr::OriginalName("NoSting")] NoSting = 0,
            [pbr::OriginalName("ScorpidSting")] ScorpidSting = 1,
            [pbr::OriginalName("SerpentSting")] SerpentSting = 2,
          }

        }
        #endregion

      }

      public sealed partial class Options : pb::IMessage<Options>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Options> _parser = new pb::MessageParser<Options>(() => new Options());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Options> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SirusDbScrapper.UIDatabase.Hunter.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options(Options other) : this() {
          ammo_ = other.ammo_;
          petType_ = other.petType_;
          petTalents_ = other.petTalents_ != null ? other.petTalents_.Clone() : null;
          petUptime_ = other.petUptime_;
          sniperTrainingUptime_ = other.sniperTrainingUptime_;
          timeToTrapWeaveMs_ = other.timeToTrapWeaveMs_;
          useHuntersMark_ = other.useHuntersMark_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options Clone() {
          return new Options(this);
        }

        /// <summary>Field number for the "ammo" field.</summary>
        public const int AmmoFieldNumber = 1;
        private global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.Ammo ammo_ = global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.Ammo.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.Ammo Ammo {
          get { return ammo_; }
          set {
            ammo_ = value;
          }
        }

        /// <summary>Field number for the "pet_type" field.</summary>
        public const int PetTypeFieldNumber = 2;
        private global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.PetType petType_ = global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.PetType.PetNone;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.PetType PetType {
          get { return petType_; }
          set {
            petType_ = value;
          }
        }

        /// <summary>Field number for the "pet_talents" field.</summary>
        public const int PetTalentsFieldNumber = 3;
        private global::SirusDbScrapper.UIDatabase.HunterPetTalents petTalents_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.HunterPetTalents PetTalents {
          get { return petTalents_; }
          set {
            petTalents_ = value;
          }
        }

        /// <summary>Field number for the "pet_uptime" field.</summary>
        public const int PetUptimeFieldNumber = 4;
        private double petUptime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double PetUptime {
          get { return petUptime_; }
          set {
            petUptime_ = value;
          }
        }

        /// <summary>Field number for the "sniper_training_uptime" field.</summary>
        public const int SniperTrainingUptimeFieldNumber = 7;
        private double sniperTrainingUptime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double SniperTrainingUptime {
          get { return sniperTrainingUptime_; }
          set {
            sniperTrainingUptime_ = value;
          }
        }

        /// <summary>Field number for the "time_to_trap_weave_ms" field.</summary>
        public const int TimeToTrapWeaveMsFieldNumber = 8;
        private double timeToTrapWeaveMs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double TimeToTrapWeaveMs {
          get { return timeToTrapWeaveMs_; }
          set {
            timeToTrapWeaveMs_ = value;
          }
        }

        /// <summary>Field number for the "use_hunters_mark" field.</summary>
        public const int UseHuntersMarkFieldNumber = 5;
        private bool useHuntersMark_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool UseHuntersMark {
          get { return useHuntersMark_; }
          set {
            useHuntersMark_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Options);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Options other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Ammo != other.Ammo) return false;
          if (PetType != other.PetType) return false;
          if (!object.Equals(PetTalents, other.PetTalents)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PetUptime, other.PetUptime)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SniperTrainingUptime, other.SniperTrainingUptime)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimeToTrapWeaveMs, other.TimeToTrapWeaveMs)) return false;
          if (UseHuntersMark != other.UseHuntersMark) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Ammo != global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.Ammo.None) hash ^= Ammo.GetHashCode();
          if (PetType != global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.PetType.PetNone) hash ^= PetType.GetHashCode();
          if (petTalents_ != null) hash ^= PetTalents.GetHashCode();
          if (PetUptime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PetUptime);
          if (SniperTrainingUptime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SniperTrainingUptime);
          if (TimeToTrapWeaveMs != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimeToTrapWeaveMs);
          if (UseHuntersMark != false) hash ^= UseHuntersMark.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Ammo != global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.Ammo.None) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Ammo);
          }
          if (PetType != global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.PetType.PetNone) {
            output.WriteRawTag(16);
            output.WriteEnum((int) PetType);
          }
          if (petTalents_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(PetTalents);
          }
          if (PetUptime != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(PetUptime);
          }
          if (UseHuntersMark != false) {
            output.WriteRawTag(40);
            output.WriteBool(UseHuntersMark);
          }
          if (SniperTrainingUptime != 0D) {
            output.WriteRawTag(57);
            output.WriteDouble(SniperTrainingUptime);
          }
          if (TimeToTrapWeaveMs != 0D) {
            output.WriteRawTag(65);
            output.WriteDouble(TimeToTrapWeaveMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Ammo != global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.Ammo.None) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Ammo);
          }
          if (PetType != global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.PetType.PetNone) {
            output.WriteRawTag(16);
            output.WriteEnum((int) PetType);
          }
          if (petTalents_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(PetTalents);
          }
          if (PetUptime != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(PetUptime);
          }
          if (UseHuntersMark != false) {
            output.WriteRawTag(40);
            output.WriteBool(UseHuntersMark);
          }
          if (SniperTrainingUptime != 0D) {
            output.WriteRawTag(57);
            output.WriteDouble(SniperTrainingUptime);
          }
          if (TimeToTrapWeaveMs != 0D) {
            output.WriteRawTag(65);
            output.WriteDouble(TimeToTrapWeaveMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Ammo != global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.Ammo.None) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Ammo);
          }
          if (PetType != global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.PetType.PetNone) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PetType);
          }
          if (petTalents_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PetTalents);
          }
          if (PetUptime != 0D) {
            size += 1 + 8;
          }
          if (SniperTrainingUptime != 0D) {
            size += 1 + 8;
          }
          if (TimeToTrapWeaveMs != 0D) {
            size += 1 + 8;
          }
          if (UseHuntersMark != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Options other) {
          if (other == null) {
            return;
          }
          if (other.Ammo != global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.Ammo.None) {
            Ammo = other.Ammo;
          }
          if (other.PetType != global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.PetType.PetNone) {
            PetType = other.PetType;
          }
          if (other.petTalents_ != null) {
            if (petTalents_ == null) {
              PetTalents = new global::SirusDbScrapper.UIDatabase.HunterPetTalents();
            }
            PetTalents.MergeFrom(other.PetTalents);
          }
          if (other.PetUptime != 0D) {
            PetUptime = other.PetUptime;
          }
          if (other.SniperTrainingUptime != 0D) {
            SniperTrainingUptime = other.SniperTrainingUptime;
          }
          if (other.TimeToTrapWeaveMs != 0D) {
            TimeToTrapWeaveMs = other.TimeToTrapWeaveMs;
          }
          if (other.UseHuntersMark != false) {
            UseHuntersMark = other.UseHuntersMark;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Ammo = (global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.Ammo) input.ReadEnum();
                break;
              }
              case 16: {
                PetType = (global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.PetType) input.ReadEnum();
                break;
              }
              case 26: {
                if (petTalents_ == null) {
                  PetTalents = new global::SirusDbScrapper.UIDatabase.HunterPetTalents();
                }
                input.ReadMessage(PetTalents);
                break;
              }
              case 33: {
                PetUptime = input.ReadDouble();
                break;
              }
              case 40: {
                UseHuntersMark = input.ReadBool();
                break;
              }
              case 57: {
                SniperTrainingUptime = input.ReadDouble();
                break;
              }
              case 65: {
                TimeToTrapWeaveMs = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Ammo = (global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.Ammo) input.ReadEnum();
                break;
              }
              case 16: {
                PetType = (global::SirusDbScrapper.UIDatabase.Hunter.Types.Options.Types.PetType) input.ReadEnum();
                break;
              }
              case 26: {
                if (petTalents_ == null) {
                  PetTalents = new global::SirusDbScrapper.UIDatabase.HunterPetTalents();
                }
                input.ReadMessage(PetTalents);
                break;
              }
              case 33: {
                PetUptime = input.ReadDouble();
                break;
              }
              case 40: {
                UseHuntersMark = input.ReadBool();
                break;
              }
              case 57: {
                SniperTrainingUptime = input.ReadDouble();
                break;
              }
              case 65: {
                TimeToTrapWeaveMs = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Options message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public enum Ammo {
            [pbr::OriginalName("AmmoNone")] None = 0,
            [pbr::OriginalName("IcebladeArrow")] IcebladeArrow = 1,
            [pbr::OriginalName("SaroniteRazorheads")] SaroniteRazorheads = 2,
            [pbr::OriginalName("TerrorshaftArrow")] TerrorshaftArrow = 3,
            [pbr::OriginalName("TimelessArrow")] TimelessArrow = 4,
            [pbr::OriginalName("MysteriousArrow")] MysteriousArrow = 5,
            [pbr::OriginalName("AdamantiteStinger")] AdamantiteStinger = 6,
            [pbr::OriginalName("BlackflightArrow")] BlackflightArrow = 7,
          }

          public enum PetType {
            [pbr::OriginalName("PetNone")] PetNone = 0,
            [pbr::OriginalName("Bat")] Bat = 1,
            [pbr::OriginalName("Bear")] Bear = 2,
            [pbr::OriginalName("BirdOfPrey")] BirdOfPrey = 3,
            [pbr::OriginalName("Boar")] Boar = 4,
            [pbr::OriginalName("CarrionBird")] CarrionBird = 5,
            [pbr::OriginalName("Cat")] Cat = 6,
            [pbr::OriginalName("Chimaera")] Chimaera = 7,
            [pbr::OriginalName("CoreHound")] CoreHound = 8,
            [pbr::OriginalName("Crab")] Crab = 9,
            [pbr::OriginalName("Crocolisk")] Crocolisk = 10,
            [pbr::OriginalName("Devilsaur")] Devilsaur = 11,
            [pbr::OriginalName("Dragonhawk")] Dragonhawk = 12,
            [pbr::OriginalName("Gorilla")] Gorilla = 13,
            [pbr::OriginalName("Hyena")] Hyena = 14,
            [pbr::OriginalName("Moth")] Moth = 15,
            [pbr::OriginalName("NetherRay")] NetherRay = 16,
            [pbr::OriginalName("Raptor")] Raptor = 17,
            [pbr::OriginalName("Ravager")] Ravager = 18,
            [pbr::OriginalName("Rhino")] Rhino = 19,
            [pbr::OriginalName("Scorpid")] Scorpid = 20,
            [pbr::OriginalName("Serpent")] Serpent = 21,
            [pbr::OriginalName("Silithid")] Silithid = 22,
            [pbr::OriginalName("Spider")] Spider = 23,
            [pbr::OriginalName("SpiritBeast")] SpiritBeast = 24,
            [pbr::OriginalName("SporeBat")] SporeBat = 25,
            [pbr::OriginalName("Tallstrider")] Tallstrider = 26,
            [pbr::OriginalName("Turtle")] Turtle = 27,
            [pbr::OriginalName("WarpStalker")] WarpStalker = 28,
            [pbr::OriginalName("Wasp")] Wasp = 29,
            [pbr::OriginalName("WindSerpent")] WindSerpent = 30,
            [pbr::OriginalName("Wolf")] Wolf = 31,
            [pbr::OriginalName("Worm")] Worm = 32,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
