// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: shaman.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SirusDbScrapper.UIDatabase {

  /// <summary>Holder for reflection information generated from shaman.proto</summary>
  public static partial class ShamanReflection {

    #region Descriptor
    /// <summary>File descriptor for shaman.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ShamanReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzaGFtYW4ucHJvdG8SBXByb3RvIt0PCg1TaGFtYW5UYWxlbnRzEhIKCmNv",
            "bnZlY3Rpb24YASABKAUSEgoKY29uY3Vzc2lvbhgCIAEoBRIVCg1jYWxsX29m",
            "X2ZsYW1lGAMgASgFEhkKEWVsZW1lbnRhbF93YXJkaW5nGAQgASgFEh0KFWVs",
            "ZW1lbnRhbF9kZXZhc3RhdGlvbhgFIAEoBRIVCg1yZXZlcmJlcmF0aW9uGAYg",
            "ASgFEhcKD2VsZW1lbnRhbF9mb2N1cxgHIAEoCBIWCg5lbGVtZW50YWxfZnVy",
            "eRgIIAEoBRIaChJpbXByb3ZlZF9maXJlX25vdmEYCSABKAUSGAoQZXllX29m",
            "X3RoZV9zdG9ybRgKIAEoBRIXCg9lbGVtZW50YWxfcmVhY2gYCyABKAUSFwoP",
            "Y2FsbF9vZl90aHVuZGVyGAwgASgIEhkKEXVucmVsZW50aW5nX3N0b3JtGA0g",
            "ASgFEhsKE2VsZW1lbnRhbF9wcmVjaXNpb24YDiABKAUSGQoRbGlnaHRuaW5n",
            "X21hc3RlcnkYDyABKAUSGQoRZWxlbWVudGFsX21hc3RlcnkYECABKAgSHAoU",
            "c3Rvcm1fZWFydGhfYW5kX2ZpcmUYESABKAUSFgoOYm9vbWluZ19lY2hvZXMY",
            "EiABKAUSFgoOZWxlbWVudGFsX29hdGgYEyABKAUSGgoSbGlnaHRuaW5nX292",
            "ZXJsb2FkGBQgASgFEhQKDGFzdHJhbF9zaGlmdBgVIAEoBRIWCg50b3RlbV9v",
            "Zl93cmF0aBgWIAEoCBISCgpsYXZhX2Zsb3dzGBcgASgFEhEKCXNoYW1hbmlz",
            "bRgYIAEoBRIUCgx0aHVuZGVyc3Rvcm0YGSABKAgSGAoQZW5oYW5jaW5nX3Rv",
            "dGVtcxgaIAEoBRIUCgxlYXJ0aHNfZ3Jhc3AYGyABKAUSGwoTYW5jZXN0cmFs",
            "X2tub3dsZWRnZRgcIAEoBRIXCg9ndWFyZGlhbl90b3RlbXMYHSABKAUSGgoS",
            "dGh1bmRlcmluZ19zdHJpa2VzGB4gASgFEhsKE2ltcHJvdmVkX2dob3N0X3dv",
            "bGYYHyABKAUSGAoQaW1wcm92ZWRfc2hpZWxkcxggIAEoBRIZChFlbGVtZW50",
            "YWxfd2VhcG9ucxghIAEoBRIZChFzaGFtYW5pc3RpY19mb2N1cxgiIAEoCBIU",
            "CgxhbnRpY2lwYXRpb24YIyABKAUSDgoGZmx1cnJ5GCQgASgFEhEKCXRvdWdo",
            "bmVzcxglIAEoBRIfChdpbXByb3ZlZF93aW5kZnVyeV90b3RlbRgmIAEoBRIW",
            "Cg5zcGlyaXRfd2VhcG9ucxgnIAEoCBIYChBtZW50YWxfZGV4dGVyaXR5GCgg",
            "ASgFEhYKDnVubGVhc2hlZF9yYWdlGCkgASgFEhYKDndlYXBvbl9tYXN0ZXJ5",
            "GCogASgFEhQKDGZyb3plbl9wb3dlchgrIAEoBRIhChlkdWFsX3dpZWxkX3Nw",
            "ZWNpYWxpemF0aW9uGCwgASgFEhIKCmR1YWxfd2llbGQYLSABKAgSEwoLc3Rv",
            "cm1zdHJpa2UYLiABKAgSFAoMc3RhdGljX3Nob2NrGC8gASgFEhEKCWxhdmFf",
            "bGFzaBgwIAEoCBIcChRpbXByb3ZlZF9zdG9ybXN0cmlrZRgxIAEoBRIYChBt",
            "ZW50YWxfcXVpY2tuZXNzGDIgASgFEhgKEHNoYW1hbmlzdGljX3JhZ2UYMyAB",
            "KAgSFQoNZWFydGhlbl9wb3dlchg0IAEoBRIYChBtYWVsc3Ryb21fd2VhcG9u",
            "GDUgASgFEhQKDGZlcmFsX3NwaXJpdBg2IAEoCBIdChVpbXByb3ZlZF9oZWFs",
            "aW5nX3dhdmUYNyABKAUSFQoNdG90ZW1pY19mb2N1cxg4IAEoBRIeChZpbXBy",
            "b3ZlZF9yZWluY2FybmF0aW9uGDkgASgFEhUKDWhlYWxpbmdfZ3JhY2UYOiAB",
            "KAUSEwoLdGlkYWxfZm9jdXMYOyABKAUSHQoVaW1wcm92ZWRfd2F0ZXJfc2hp",
            "ZWxkGDwgASgFEhUKDWhlYWxpbmdfZm9jdXMYPSABKAUSEwoLdGlkYWxfZm9y",
            "Y2UYPiABKAgSGQoRYW5jZXN0cmFsX2hlYWxpbmcYPyABKAUSGgoScmVzdG9y",
            "YXRpdmVfdG90ZW1zGEAgASgFEhUKDXRpZGFsX21hc3RlcnkYQSABKAUSEwoL",
            "aGVhbGluZ193YXkYQiABKAUSGQoRbmF0dXJlc19zd2lmdG5lc3MYQyABKAgS",
            "FAoMZm9jdXNlZF9taW5kGEQgASgFEhQKDHB1cmlmaWNhdGlvbhhFIAEoBRIY",
            "ChBuYXR1cmVzX2d1YXJkaWFuGEYgASgFEhcKD21hbmFfdGlkZV90b3RlbRhH",
            "IAEoCBIWCg5jbGVhbnNlX3NwaXJpdBhIIAEoCBIgChhibGVzc2luZ19vZl90",
            "aGVfZXRlcm5hbHMYSSABKAUSGwoTaW1wcm92ZWRfY2hhaW5faGVhbBhKIAEo",
            "BRIYChBuYXR1cmVzX2JsZXNzaW5nGEsgASgFEhsKE2FuY2VzdHJhbF9hd2Fr",
            "ZW5pbmcYTCABKAUSFAoMZWFydGhfc2hpZWxkGE0gASgIEh0KFWltcHJvdmVk",
            "X2VhcnRoX3NoaWVsZBhOIAEoBRITCgt0aWRhbF93YXZlcxhPIAEoBRIPCgdy",
            "aXB0aWRlGFAgASgIIqkCCgxTaGFtYW5Ub3RlbXMSIAoFZWFydGgYASABKA4y",
            "ES5wcm90by5FYXJ0aFRvdGVtEhwKA2FpchgCIAEoDjIPLnByb3RvLkFpclRv",
            "dGVtEh4KBGZpcmUYAyABKA4yEC5wcm90by5GaXJlVG90ZW0SIAoFd2F0ZXIY",
            "BCABKA4yES5wcm90by5XYXRlclRvdGVtEhoKEnVzZV9maXJlX2VsZW1lbnRh",
            "bBgGIAEoCBIYChBib251c19zcGVsbHBvd2VyGAogASgFEhoKEmVuaF90aWVy",
            "X3Rlbl9ib251cxgLIAEoCCJFCglUb3RlbVR5cGUSDwoLVHlwZVVua25vd24Q",
            "ABIJCgVFYXJ0aBABEgcKA0FpchACEggKBEZpcmUQAxIJCgVXYXRlchAEIrkC",
            "Cg9FbGVtZW50YWxTaGFtYW4SLwoHb3B0aW9ucxgDIAEoCzIeLnByb3RvLkVs",
            "ZW1lbnRhbFNoYW1hbi5PcHRpb25zGgoKCFJvdGF0aW9uGugBCgdPcHRpb25z",
            "EiMKBnNoaWVsZBgBIAEoDjITLnByb3RvLlNoYW1hblNoaWVsZBIjCgZ0b3Rl",
            "bXMYAyABKAsyEy5wcm90by5TaGFtYW5Ub3RlbXMSSwoRdGh1bmRlcnN0b3Jt",
            "UmFuZ2UYBCABKA4yMC5wcm90by5FbGVtZW50YWxTaGFtYW4uT3B0aW9ucy5U",
            "aHVuZGVyc3Rvcm1SYW5nZSJGChFUaHVuZGVyc3Rvcm1SYW5nZRIQCgxVbnNl",
            "dFRTUmFuZ2UQABINCglUU0luUmFuZ2UQARIQCgxUU091dG9mUmFuZ2UQAiKe",
            "AgoRRW5oYW5jZW1lbnRTaGFtYW4SMQoHb3B0aW9ucxgDIAEoCzIgLnByb3Rv",
            "LkVuaGFuY2VtZW50U2hhbWFuLk9wdGlvbnMaCgoIUm90YXRpb24ayQEKB09w",
            "dGlvbnMSIwoGc2hpZWxkGAEgASgOMhMucHJvdG8uU2hhbWFuU2hpZWxkEigK",
            "CXN5bmNfdHlwZRgDIAEoDjIVLnByb3RvLlNoYW1hblN5bmNUeXBlEiQKCGlt",
            "YnVlX21oGAQgASgOMhIucHJvdG8uU2hhbWFuSW1idWUSJAoIaW1idWVfb2gY",
            "BSABKA4yEi5wcm90by5TaGFtYW5JbWJ1ZRIjCgZ0b3RlbXMYBiABKAsyEy5w",
            "cm90by5TaGFtYW5Ub3RlbXMi6gEKEVJlc3RvcmF0aW9uU2hhbWFuEjEKB29w",
            "dGlvbnMYAyABKAsyIC5wcm90by5SZXN0b3JhdGlvblNoYW1hbi5PcHRpb25z",
            "GgoKCFJvdGF0aW9uGpUBCgdPcHRpb25zEiMKBnNoaWVsZBgBIAEoDjITLnBy",
            "b3RvLlNoYW1hblNoaWVsZBIkCghpbWJ1ZV9taBgEIAEoDjISLnByb3RvLlNo",
            "YW1hbkltYnVlEhoKEmVhcnRoX3NoaWVsZF9wX3BfbRgFIAEoBRIjCgZ0b3Rl",
            "bXMYBiABKAsyEy5wcm90by5TaGFtYW5Ub3RlbXMqkwYKEFNoYW1hbk1ham9y",
            "R2x5cGgSGAoUU2hhbWFuTWFqb3JHbHlwaE5vbmUQABIWChBHbHlwaE9mQ2hh",
            "aW5IZWFsEK3EAhIbChVHbHlwaE9mQ2hhaW5MaWdodG5pbmcQrsQCEhgKEkds",
            "eXBoT2ZFYXJ0aFNoaWVsZBDP5QISHgoYR2x5cGhPZkVhcnRobGl2aW5nV2Vh",
            "cG9uELfEAhIdChdHbHlwaE9mRWxlbWVudGFsTWFzdGVyeRDQxAISGAoSR2x5",
            "cGhPZkZlcmFsU3Bpcml0EMvlAhIfChlHbHlwaE9mRmlyZUVsZW1lbnRhbFRv",
            "dGVtELnEAhIVCg9HbHlwaE9mRmlyZU5vdmEQusQCEhcKEUdseXBoT2ZGbGFt",
            "ZVNob2NrELvEAhIeChhHbHlwaE9mRmxhbWV0b25ndWVXZWFwb24QvMQCEhcK",
            "EUdseXBoT2ZGcm9zdFNob2NrEMvEAhIfChlHbHlwaE9mSGVhbGluZ1N0cmVh",
            "bVRvdGVtEL3EAhIYChJHbHlwaE9mSGVhbGluZ1dhdmUQvsQCEhAKCkdseXBo",
            "T2ZIZXgQ0eUCEhEKC0dseXBoT2ZMYXZhELTEAhIVCg9HbHlwaE9mTGF2YUxh",
            "c2gQxMQCEh4KGEdseXBoT2ZMZXNzZXJIZWFsaW5nV2F2ZRC/xAISGgoUR2x5",
            "cGhPZkxpZ2h0bmluZ0JvbHQQwMQCEhwKFkdseXBoT2ZMaWdodG5pbmdTaGll",
            "bGQQwcQCEhUKD0dseXBoT2ZNYW5hVGlkZRDCxAISFAoOR2x5cGhPZlJpcHRp",
            "ZGUQzOUCEhUKD0dseXBoT2ZTaG9ja2luZxC2xAISGwoVR2x5cGhPZlN0b25l",
            "Y2xhd1RvdGVtENLlAhIYChJHbHlwaE9mU3Rvcm1zdHJpa2UQw8QCEhQKDkds",
            "eXBoT2ZUaHVuZGVyEMrlAhIZChNHbHlwaE9mVG90ZW1PZldyYXRoENDlAhIZ",
            "ChNHbHlwaE9mV2F0ZXJNYXN0ZXJ5EMXEAhIbChVHbHlwaE9mV2luZGZ1cnlX",
            "ZWFwb24QxsQCKuYBChBTaGFtYW5NaW5vckdseXBoEhgKFFNoYW1hbk1pbm9y",
            "R2x5cGhOb25lEAASGQoTR2x5cGhPZkFzdHJhbFJlY2FsbBD10gISFgoQR2x5",
            "cGhPZkdob3N0V29sZhDN1QISGAoSR2x5cGhPZlJlbmV3ZWRMaWZlEPnSAhIZ",
            "ChNHbHlwaE9mVGh1bmRlcnN0b3JtEPveAhIbChVHbHlwaE9mV2F0ZXJCcmVh",
            "dGhpbmcQ0NICEhgKEkdseXBoT2ZXYXRlclNoaWVsZBD60gISGQoTR2x5cGhP",
            "ZldhdGVyV2Fsa2luZxD80gIqXQoKRWFydGhUb3RlbRIQCgxOb0VhcnRoVG90",
            "ZW0QABIYChRTdHJlbmd0aE9mRWFydGhUb3RlbRABEg8KC1RyZW1vclRvdGVt",
            "EAISEgoOU3RvbmVza2luVG90ZW0QAypCCghBaXJUb3RlbRIOCgpOb0FpclRv",
            "dGVtEAASEQoNV2luZGZ1cnlUb3RlbRACEhMKD1dyYXRoT2ZBaXJUb3RlbRAD",
            "KmYKCUZpcmVUb3RlbRIPCgtOb0ZpcmVUb3RlbRAAEg4KCk1hZ21hVG90ZW0Q",
            "ARIQCgxTZWFyaW5nVG90ZW0QAhIQCgxUb3RlbU9mV3JhdGgQAxIUChBGbGFt",
            "ZXRvbmd1ZVRvdGVtEAQqSwoKV2F0ZXJUb3RlbRIQCgxOb1dhdGVyVG90ZW0Q",
            "ABITCg9NYW5hU3ByaW5nVG90ZW0QARIWChJIZWFsaW5nU3RyZWFtVG90ZW0Q",
            "AipCCgxTaGFtYW5TaGllbGQSDAoITm9TaGllbGQQABIPCgtXYXRlclNoaWVs",
            "ZBABEhMKD0xpZ2h0bmluZ1NoaWVsZBACKnoKC1NoYW1hbkltYnVlEgsKB05v",
            "SW1idWUQABISCg5XaW5kZnVyeVdlYXBvbhABEhUKEUZsYW1ldG9uZ3VlV2Vh",
            "cG9uEAISHQoZRmxhbWV0b25ndWVXZWFwb25Eb3ducmFuaxADEhQKEEZyb3N0",
            "YnJhbmRXZWFwb24QBCpdCg5TaGFtYW5TeW5jVHlwZRIKCgZOb1N5bmMQABId",
            "ChlTeW5jTWFpbmhhbmRPZmZoYW5kU3dpbmdzEAESFgoSRGVsYXlPZmZoYW5k",
            "U3dpbmdzEAISCAoEQXV0bxADKlYKD1NoYW1hbkhlYWxTcGVsbBIMCghBdXRv",
            "SGVhbBAAEg8KC0hlYWxpbmdXYXZlEAESFQoRTGVzc2VySGVhbGluZ1dhdmUQ",
            "AhINCglDaGFpbkhlYWwQA0IdqgIaU2lydXNEYlNjcmFwcGVyLlVJRGF0YWJh",
            "c2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SirusDbScrapper.UIDatabase.ShamanMajorGlyph), typeof(global::SirusDbScrapper.UIDatabase.ShamanMinorGlyph), typeof(global::SirusDbScrapper.UIDatabase.EarthTotem), typeof(global::SirusDbScrapper.UIDatabase.AirTotem), typeof(global::SirusDbScrapper.UIDatabase.FireTotem), typeof(global::SirusDbScrapper.UIDatabase.WaterTotem), typeof(global::SirusDbScrapper.UIDatabase.ShamanShield), typeof(global::SirusDbScrapper.UIDatabase.ShamanImbue), typeof(global::SirusDbScrapper.UIDatabase.ShamanSyncType), typeof(global::SirusDbScrapper.UIDatabase.ShamanHealSpell), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.ShamanTalents), global::SirusDbScrapper.UIDatabase.ShamanTalents.Parser, new[]{ "Convection", "Concussion", "CallOfFlame", "ElementalWarding", "ElementalDevastation", "Reverberation", "ElementalFocus", "ElementalFury", "ImprovedFireNova", "EyeOfTheStorm", "ElementalReach", "CallOfThunder", "UnrelentingStorm", "ElementalPrecision", "LightningMastery", "ElementalMastery", "StormEarthAndFire", "BoomingEchoes", "ElementalOath", "LightningOverload", "AstralShift", "TotemOfWrath", "LavaFlows", "Shamanism", "Thunderstorm", "EnhancingTotems", "EarthsGrasp", "AncestralKnowledge", "GuardianTotems", "ThunderingStrikes", "ImprovedGhostWolf", "ImprovedShields", "ElementalWeapons", "ShamanisticFocus", "Anticipation", "Flurry", "Toughness", "ImprovedWindfuryTotem", "SpiritWeapons", "MentalDexterity", "UnleashedRage", "WeaponMastery", "FrozenPower", "DualWieldSpecialization", "DualWield", "Stormstrike", "StaticShock", "LavaLash", "ImprovedStormstrike", "MentalQuickness", "ShamanisticRage", "EarthenPower", "MaelstromWeapon", "FeralSpirit", "ImprovedHealingWave", "TotemicFocus", "ImprovedReincarnation", "HealingGrace", "TidalFocus", "ImprovedWaterShield", "HealingFocus", "TidalForce", "AncestralHealing", "RestorativeTotems", "TidalMastery", "HealingWay", "NaturesSwiftness", "FocusedMind", "Purification", "NaturesGuardian", "ManaTideTotem", "CleanseSpirit", "BlessingOfTheEternals", "ImprovedChainHeal", "NaturesBlessing", "AncestralAwakening", "EarthShield", "ImprovedEarthShield", "TidalWaves", "Riptide" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.ShamanTotems), global::SirusDbScrapper.UIDatabase.ShamanTotems.Parser, new[]{ "Earth", "Air", "Fire", "Water", "UseFireElemental", "BonusSpellpower", "EnhTierTenBonus" }, null, new[]{ typeof(global::SirusDbScrapper.UIDatabase.ShamanTotems.Types.TotemType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.ElementalShaman), global::SirusDbScrapper.UIDatabase.ElementalShaman.Parser, new[]{ "Options" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Rotation), global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Rotation.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options), global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options.Parser, new[]{ "Shield", "Totems", "ThunderstormRange" }, null, new[]{ typeof(global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options.Types.ThunderstormRange) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.EnhancementShaman), global::SirusDbScrapper.UIDatabase.EnhancementShaman.Parser, new[]{ "Options" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.EnhancementShaman.Types.Rotation), global::SirusDbScrapper.UIDatabase.EnhancementShaman.Types.Rotation.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.EnhancementShaman.Types.Options), global::SirusDbScrapper.UIDatabase.EnhancementShaman.Types.Options.Parser, new[]{ "Shield", "SyncType", "ImbueMh", "ImbueOh", "Totems" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.RestorationShaman), global::SirusDbScrapper.UIDatabase.RestorationShaman.Parser, new[]{ "Options" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.RestorationShaman.Types.Rotation), global::SirusDbScrapper.UIDatabase.RestorationShaman.Types.Rotation.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.RestorationShaman.Types.Options), global::SirusDbScrapper.UIDatabase.RestorationShaman.Types.Options.Parser, new[]{ "Shield", "ImbueMh", "EarthShieldPPM", "Totems" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  public enum ShamanMajorGlyph {
    [pbr::OriginalName("ShamanMajorGlyphNone")] None = 0,
    [pbr::OriginalName("GlyphOfChainHeal")] GlyphOfChainHeal = 41517,
    [pbr::OriginalName("GlyphOfChainLightning")] GlyphOfChainLightning = 41518,
    [pbr::OriginalName("GlyphOfEarthShield")] GlyphOfEarthShield = 45775,
    [pbr::OriginalName("GlyphOfEarthlivingWeapon")] GlyphOfEarthlivingWeapon = 41527,
    [pbr::OriginalName("GlyphOfElementalMastery")] GlyphOfElementalMastery = 41552,
    [pbr::OriginalName("GlyphOfFeralSpirit")] GlyphOfFeralSpirit = 45771,
    [pbr::OriginalName("GlyphOfFireElementalTotem")] GlyphOfFireElementalTotem = 41529,
    [pbr::OriginalName("GlyphOfFireNova")] GlyphOfFireNova = 41530,
    [pbr::OriginalName("GlyphOfFlameShock")] GlyphOfFlameShock = 41531,
    [pbr::OriginalName("GlyphOfFlametongueWeapon")] GlyphOfFlametongueWeapon = 41532,
    [pbr::OriginalName("GlyphOfFrostShock")] GlyphOfFrostShock = 41547,
    [pbr::OriginalName("GlyphOfHealingStreamTotem")] GlyphOfHealingStreamTotem = 41533,
    [pbr::OriginalName("GlyphOfHealingWave")] GlyphOfHealingWave = 41534,
    [pbr::OriginalName("GlyphOfHex")] GlyphOfHex = 45777,
    [pbr::OriginalName("GlyphOfLava")] GlyphOfLava = 41524,
    [pbr::OriginalName("GlyphOfLavaLash")] GlyphOfLavaLash = 41540,
    [pbr::OriginalName("GlyphOfLesserHealingWave")] GlyphOfLesserHealingWave = 41535,
    [pbr::OriginalName("GlyphOfLightningBolt")] GlyphOfLightningBolt = 41536,
    [pbr::OriginalName("GlyphOfLightningShield")] GlyphOfLightningShield = 41537,
    [pbr::OriginalName("GlyphOfManaTide")] GlyphOfManaTide = 41538,
    [pbr::OriginalName("GlyphOfRiptide")] GlyphOfRiptide = 45772,
    [pbr::OriginalName("GlyphOfShocking")] GlyphOfShocking = 41526,
    [pbr::OriginalName("GlyphOfStoneclawTotem")] GlyphOfStoneclawTotem = 45778,
    [pbr::OriginalName("GlyphOfStormstrike")] GlyphOfStormstrike = 41539,
    [pbr::OriginalName("GlyphOfThunder")] GlyphOfThunder = 45770,
    [pbr::OriginalName("GlyphOfTotemOfWrath")] GlyphOfTotemOfWrath = 45776,
    [pbr::OriginalName("GlyphOfWaterMastery")] GlyphOfWaterMastery = 41541,
    [pbr::OriginalName("GlyphOfWindfuryWeapon")] GlyphOfWindfuryWeapon = 41542,
  }

  public enum ShamanMinorGlyph {
    [pbr::OriginalName("ShamanMinorGlyphNone")] None = 0,
    [pbr::OriginalName("GlyphOfAstralRecall")] GlyphOfAstralRecall = 43381,
    [pbr::OriginalName("GlyphOfGhostWolf")] GlyphOfGhostWolf = 43725,
    [pbr::OriginalName("GlyphOfRenewedLife")] GlyphOfRenewedLife = 43385,
    [pbr::OriginalName("GlyphOfThunderstorm")] GlyphOfThunderstorm = 44923,
    [pbr::OriginalName("GlyphOfWaterBreathing")] GlyphOfWaterBreathing = 43344,
    [pbr::OriginalName("GlyphOfWaterShield")] GlyphOfWaterShield = 43386,
    [pbr::OriginalName("GlyphOfWaterWalking")] GlyphOfWaterWalking = 43388,
  }

  public enum EarthTotem {
    [pbr::OriginalName("NoEarthTotem")] NoEarthTotem = 0,
    [pbr::OriginalName("StrengthOfEarthTotem")] StrengthOfEarthTotem = 1,
    [pbr::OriginalName("TremorTotem")] TremorTotem = 2,
    [pbr::OriginalName("StoneskinTotem")] StoneskinTotem = 3,
  }

  public enum AirTotem {
    [pbr::OriginalName("NoAirTotem")] NoAirTotem = 0,
    [pbr::OriginalName("WindfuryTotem")] WindfuryTotem = 2,
    [pbr::OriginalName("WrathOfAirTotem")] WrathOfAirTotem = 3,
  }

  public enum FireTotem {
    [pbr::OriginalName("NoFireTotem")] NoFireTotem = 0,
    [pbr::OriginalName("MagmaTotem")] MagmaTotem = 1,
    [pbr::OriginalName("SearingTotem")] SearingTotem = 2,
    [pbr::OriginalName("TotemOfWrath")] TotemOfWrath = 3,
    [pbr::OriginalName("FlametongueTotem")] FlametongueTotem = 4,
  }

  public enum WaterTotem {
    [pbr::OriginalName("NoWaterTotem")] NoWaterTotem = 0,
    [pbr::OriginalName("ManaSpringTotem")] ManaSpringTotem = 1,
    [pbr::OriginalName("HealingStreamTotem")] HealingStreamTotem = 2,
  }

  public enum ShamanShield {
    [pbr::OriginalName("NoShield")] NoShield = 0,
    [pbr::OriginalName("WaterShield")] WaterShield = 1,
    [pbr::OriginalName("LightningShield")] LightningShield = 2,
  }

  public enum ShamanImbue {
    [pbr::OriginalName("NoImbue")] NoImbue = 0,
    [pbr::OriginalName("WindfuryWeapon")] WindfuryWeapon = 1,
    [pbr::OriginalName("FlametongueWeapon")] FlametongueWeapon = 2,
    [pbr::OriginalName("FlametongueWeaponDownrank")] FlametongueWeaponDownrank = 3,
    [pbr::OriginalName("FrostbrandWeapon")] FrostbrandWeapon = 4,
  }

  public enum ShamanSyncType {
    [pbr::OriginalName("NoSync")] NoSync = 0,
    [pbr::OriginalName("SyncMainhandOffhandSwings")] SyncMainhandOffhandSwings = 1,
    [pbr::OriginalName("DelayOffhandSwings")] DelayOffhandSwings = 2,
    [pbr::OriginalName("Auto")] Auto = 3,
  }

  public enum ShamanHealSpell {
    [pbr::OriginalName("AutoHeal")] AutoHeal = 0,
    [pbr::OriginalName("HealingWave")] HealingWave = 1,
    [pbr::OriginalName("LesserHealingWave")] LesserHealingWave = 2,
    [pbr::OriginalName("ChainHeal")] ChainHeal = 3,
  }

  #endregion

  #region Messages
  public sealed partial class ShamanTalents : pb::IMessage<ShamanTalents>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShamanTalents> _parser = new pb::MessageParser<ShamanTalents>(() => new ShamanTalents());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ShamanTalents> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.ShamanReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShamanTalents() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShamanTalents(ShamanTalents other) : this() {
      convection_ = other.convection_;
      concussion_ = other.concussion_;
      callOfFlame_ = other.callOfFlame_;
      elementalWarding_ = other.elementalWarding_;
      elementalDevastation_ = other.elementalDevastation_;
      reverberation_ = other.reverberation_;
      elementalFocus_ = other.elementalFocus_;
      elementalFury_ = other.elementalFury_;
      improvedFireNova_ = other.improvedFireNova_;
      eyeOfTheStorm_ = other.eyeOfTheStorm_;
      elementalReach_ = other.elementalReach_;
      callOfThunder_ = other.callOfThunder_;
      unrelentingStorm_ = other.unrelentingStorm_;
      elementalPrecision_ = other.elementalPrecision_;
      lightningMastery_ = other.lightningMastery_;
      elementalMastery_ = other.elementalMastery_;
      stormEarthAndFire_ = other.stormEarthAndFire_;
      boomingEchoes_ = other.boomingEchoes_;
      elementalOath_ = other.elementalOath_;
      lightningOverload_ = other.lightningOverload_;
      astralShift_ = other.astralShift_;
      totemOfWrath_ = other.totemOfWrath_;
      lavaFlows_ = other.lavaFlows_;
      shamanism_ = other.shamanism_;
      thunderstorm_ = other.thunderstorm_;
      enhancingTotems_ = other.enhancingTotems_;
      earthsGrasp_ = other.earthsGrasp_;
      ancestralKnowledge_ = other.ancestralKnowledge_;
      guardianTotems_ = other.guardianTotems_;
      thunderingStrikes_ = other.thunderingStrikes_;
      improvedGhostWolf_ = other.improvedGhostWolf_;
      improvedShields_ = other.improvedShields_;
      elementalWeapons_ = other.elementalWeapons_;
      shamanisticFocus_ = other.shamanisticFocus_;
      anticipation_ = other.anticipation_;
      flurry_ = other.flurry_;
      toughness_ = other.toughness_;
      improvedWindfuryTotem_ = other.improvedWindfuryTotem_;
      spiritWeapons_ = other.spiritWeapons_;
      mentalDexterity_ = other.mentalDexterity_;
      unleashedRage_ = other.unleashedRage_;
      weaponMastery_ = other.weaponMastery_;
      frozenPower_ = other.frozenPower_;
      dualWieldSpecialization_ = other.dualWieldSpecialization_;
      dualWield_ = other.dualWield_;
      stormstrike_ = other.stormstrike_;
      staticShock_ = other.staticShock_;
      lavaLash_ = other.lavaLash_;
      improvedStormstrike_ = other.improvedStormstrike_;
      mentalQuickness_ = other.mentalQuickness_;
      shamanisticRage_ = other.shamanisticRage_;
      earthenPower_ = other.earthenPower_;
      maelstromWeapon_ = other.maelstromWeapon_;
      feralSpirit_ = other.feralSpirit_;
      improvedHealingWave_ = other.improvedHealingWave_;
      totemicFocus_ = other.totemicFocus_;
      improvedReincarnation_ = other.improvedReincarnation_;
      healingGrace_ = other.healingGrace_;
      tidalFocus_ = other.tidalFocus_;
      improvedWaterShield_ = other.improvedWaterShield_;
      healingFocus_ = other.healingFocus_;
      tidalForce_ = other.tidalForce_;
      ancestralHealing_ = other.ancestralHealing_;
      restorativeTotems_ = other.restorativeTotems_;
      tidalMastery_ = other.tidalMastery_;
      healingWay_ = other.healingWay_;
      naturesSwiftness_ = other.naturesSwiftness_;
      focusedMind_ = other.focusedMind_;
      purification_ = other.purification_;
      naturesGuardian_ = other.naturesGuardian_;
      manaTideTotem_ = other.manaTideTotem_;
      cleanseSpirit_ = other.cleanseSpirit_;
      blessingOfTheEternals_ = other.blessingOfTheEternals_;
      improvedChainHeal_ = other.improvedChainHeal_;
      naturesBlessing_ = other.naturesBlessing_;
      ancestralAwakening_ = other.ancestralAwakening_;
      earthShield_ = other.earthShield_;
      improvedEarthShield_ = other.improvedEarthShield_;
      tidalWaves_ = other.tidalWaves_;
      riptide_ = other.riptide_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShamanTalents Clone() {
      return new ShamanTalents(this);
    }

    /// <summary>Field number for the "convection" field.</summary>
    public const int ConvectionFieldNumber = 1;
    private int convection_;
    /// <summary>
    /// Elemental
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Convection {
      get { return convection_; }
      set {
        convection_ = value;
      }
    }

    /// <summary>Field number for the "concussion" field.</summary>
    public const int ConcussionFieldNumber = 2;
    private int concussion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Concussion {
      get { return concussion_; }
      set {
        concussion_ = value;
      }
    }

    /// <summary>Field number for the "call_of_flame" field.</summary>
    public const int CallOfFlameFieldNumber = 3;
    private int callOfFlame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CallOfFlame {
      get { return callOfFlame_; }
      set {
        callOfFlame_ = value;
      }
    }

    /// <summary>Field number for the "elemental_warding" field.</summary>
    public const int ElementalWardingFieldNumber = 4;
    private int elementalWarding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ElementalWarding {
      get { return elementalWarding_; }
      set {
        elementalWarding_ = value;
      }
    }

    /// <summary>Field number for the "elemental_devastation" field.</summary>
    public const int ElementalDevastationFieldNumber = 5;
    private int elementalDevastation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ElementalDevastation {
      get { return elementalDevastation_; }
      set {
        elementalDevastation_ = value;
      }
    }

    /// <summary>Field number for the "reverberation" field.</summary>
    public const int ReverberationFieldNumber = 6;
    private int reverberation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Reverberation {
      get { return reverberation_; }
      set {
        reverberation_ = value;
      }
    }

    /// <summary>Field number for the "elemental_focus" field.</summary>
    public const int ElementalFocusFieldNumber = 7;
    private bool elementalFocus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ElementalFocus {
      get { return elementalFocus_; }
      set {
        elementalFocus_ = value;
      }
    }

    /// <summary>Field number for the "elemental_fury" field.</summary>
    public const int ElementalFuryFieldNumber = 8;
    private int elementalFury_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ElementalFury {
      get { return elementalFury_; }
      set {
        elementalFury_ = value;
      }
    }

    /// <summary>Field number for the "improved_fire_nova" field.</summary>
    public const int ImprovedFireNovaFieldNumber = 9;
    private int improvedFireNova_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedFireNova {
      get { return improvedFireNova_; }
      set {
        improvedFireNova_ = value;
      }
    }

    /// <summary>Field number for the "eye_of_the_storm" field.</summary>
    public const int EyeOfTheStormFieldNumber = 10;
    private int eyeOfTheStorm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EyeOfTheStorm {
      get { return eyeOfTheStorm_; }
      set {
        eyeOfTheStorm_ = value;
      }
    }

    /// <summary>Field number for the "elemental_reach" field.</summary>
    public const int ElementalReachFieldNumber = 11;
    private int elementalReach_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ElementalReach {
      get { return elementalReach_; }
      set {
        elementalReach_ = value;
      }
    }

    /// <summary>Field number for the "call_of_thunder" field.</summary>
    public const int CallOfThunderFieldNumber = 12;
    private bool callOfThunder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CallOfThunder {
      get { return callOfThunder_; }
      set {
        callOfThunder_ = value;
      }
    }

    /// <summary>Field number for the "unrelenting_storm" field.</summary>
    public const int UnrelentingStormFieldNumber = 13;
    private int unrelentingStorm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnrelentingStorm {
      get { return unrelentingStorm_; }
      set {
        unrelentingStorm_ = value;
      }
    }

    /// <summary>Field number for the "elemental_precision" field.</summary>
    public const int ElementalPrecisionFieldNumber = 14;
    private int elementalPrecision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ElementalPrecision {
      get { return elementalPrecision_; }
      set {
        elementalPrecision_ = value;
      }
    }

    /// <summary>Field number for the "lightning_mastery" field.</summary>
    public const int LightningMasteryFieldNumber = 15;
    private int lightningMastery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LightningMastery {
      get { return lightningMastery_; }
      set {
        lightningMastery_ = value;
      }
    }

    /// <summary>Field number for the "elemental_mastery" field.</summary>
    public const int ElementalMasteryFieldNumber = 16;
    private bool elementalMastery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ElementalMastery {
      get { return elementalMastery_; }
      set {
        elementalMastery_ = value;
      }
    }

    /// <summary>Field number for the "storm_earth_and_fire" field.</summary>
    public const int StormEarthAndFireFieldNumber = 17;
    private int stormEarthAndFire_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StormEarthAndFire {
      get { return stormEarthAndFire_; }
      set {
        stormEarthAndFire_ = value;
      }
    }

    /// <summary>Field number for the "booming_echoes" field.</summary>
    public const int BoomingEchoesFieldNumber = 18;
    private int boomingEchoes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BoomingEchoes {
      get { return boomingEchoes_; }
      set {
        boomingEchoes_ = value;
      }
    }

    /// <summary>Field number for the "elemental_oath" field.</summary>
    public const int ElementalOathFieldNumber = 19;
    private int elementalOath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ElementalOath {
      get { return elementalOath_; }
      set {
        elementalOath_ = value;
      }
    }

    /// <summary>Field number for the "lightning_overload" field.</summary>
    public const int LightningOverloadFieldNumber = 20;
    private int lightningOverload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LightningOverload {
      get { return lightningOverload_; }
      set {
        lightningOverload_ = value;
      }
    }

    /// <summary>Field number for the "astral_shift" field.</summary>
    public const int AstralShiftFieldNumber = 21;
    private int astralShift_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AstralShift {
      get { return astralShift_; }
      set {
        astralShift_ = value;
      }
    }

    /// <summary>Field number for the "totem_of_wrath" field.</summary>
    public const int TotemOfWrathFieldNumber = 22;
    private bool totemOfWrath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TotemOfWrath {
      get { return totemOfWrath_; }
      set {
        totemOfWrath_ = value;
      }
    }

    /// <summary>Field number for the "lava_flows" field.</summary>
    public const int LavaFlowsFieldNumber = 23;
    private int lavaFlows_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LavaFlows {
      get { return lavaFlows_; }
      set {
        lavaFlows_ = value;
      }
    }

    /// <summary>Field number for the "shamanism" field.</summary>
    public const int ShamanismFieldNumber = 24;
    private int shamanism_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Shamanism {
      get { return shamanism_; }
      set {
        shamanism_ = value;
      }
    }

    /// <summary>Field number for the "thunderstorm" field.</summary>
    public const int ThunderstormFieldNumber = 25;
    private bool thunderstorm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Thunderstorm {
      get { return thunderstorm_; }
      set {
        thunderstorm_ = value;
      }
    }

    /// <summary>Field number for the "enhancing_totems" field.</summary>
    public const int EnhancingTotemsFieldNumber = 26;
    private int enhancingTotems_;
    /// <summary>
    /// Enhancement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EnhancingTotems {
      get { return enhancingTotems_; }
      set {
        enhancingTotems_ = value;
      }
    }

    /// <summary>Field number for the "earths_grasp" field.</summary>
    public const int EarthsGraspFieldNumber = 27;
    private int earthsGrasp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EarthsGrasp {
      get { return earthsGrasp_; }
      set {
        earthsGrasp_ = value;
      }
    }

    /// <summary>Field number for the "ancestral_knowledge" field.</summary>
    public const int AncestralKnowledgeFieldNumber = 28;
    private int ancestralKnowledge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AncestralKnowledge {
      get { return ancestralKnowledge_; }
      set {
        ancestralKnowledge_ = value;
      }
    }

    /// <summary>Field number for the "guardian_totems" field.</summary>
    public const int GuardianTotemsFieldNumber = 29;
    private int guardianTotems_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GuardianTotems {
      get { return guardianTotems_; }
      set {
        guardianTotems_ = value;
      }
    }

    /// <summary>Field number for the "thundering_strikes" field.</summary>
    public const int ThunderingStrikesFieldNumber = 30;
    private int thunderingStrikes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThunderingStrikes {
      get { return thunderingStrikes_; }
      set {
        thunderingStrikes_ = value;
      }
    }

    /// <summary>Field number for the "improved_ghost_wolf" field.</summary>
    public const int ImprovedGhostWolfFieldNumber = 31;
    private int improvedGhostWolf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedGhostWolf {
      get { return improvedGhostWolf_; }
      set {
        improvedGhostWolf_ = value;
      }
    }

    /// <summary>Field number for the "improved_shields" field.</summary>
    public const int ImprovedShieldsFieldNumber = 32;
    private int improvedShields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedShields {
      get { return improvedShields_; }
      set {
        improvedShields_ = value;
      }
    }

    /// <summary>Field number for the "elemental_weapons" field.</summary>
    public const int ElementalWeaponsFieldNumber = 33;
    private int elementalWeapons_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ElementalWeapons {
      get { return elementalWeapons_; }
      set {
        elementalWeapons_ = value;
      }
    }

    /// <summary>Field number for the "shamanistic_focus" field.</summary>
    public const int ShamanisticFocusFieldNumber = 34;
    private bool shamanisticFocus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShamanisticFocus {
      get { return shamanisticFocus_; }
      set {
        shamanisticFocus_ = value;
      }
    }

    /// <summary>Field number for the "anticipation" field.</summary>
    public const int AnticipationFieldNumber = 35;
    private int anticipation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Anticipation {
      get { return anticipation_; }
      set {
        anticipation_ = value;
      }
    }

    /// <summary>Field number for the "flurry" field.</summary>
    public const int FlurryFieldNumber = 36;
    private int flurry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Flurry {
      get { return flurry_; }
      set {
        flurry_ = value;
      }
    }

    /// <summary>Field number for the "toughness" field.</summary>
    public const int ToughnessFieldNumber = 37;
    private int toughness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Toughness {
      get { return toughness_; }
      set {
        toughness_ = value;
      }
    }

    /// <summary>Field number for the "improved_windfury_totem" field.</summary>
    public const int ImprovedWindfuryTotemFieldNumber = 38;
    private int improvedWindfuryTotem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedWindfuryTotem {
      get { return improvedWindfuryTotem_; }
      set {
        improvedWindfuryTotem_ = value;
      }
    }

    /// <summary>Field number for the "spirit_weapons" field.</summary>
    public const int SpiritWeaponsFieldNumber = 39;
    private bool spiritWeapons_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SpiritWeapons {
      get { return spiritWeapons_; }
      set {
        spiritWeapons_ = value;
      }
    }

    /// <summary>Field number for the "mental_dexterity" field.</summary>
    public const int MentalDexterityFieldNumber = 40;
    private int mentalDexterity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MentalDexterity {
      get { return mentalDexterity_; }
      set {
        mentalDexterity_ = value;
      }
    }

    /// <summary>Field number for the "unleashed_rage" field.</summary>
    public const int UnleashedRageFieldNumber = 41;
    private int unleashedRage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnleashedRage {
      get { return unleashedRage_; }
      set {
        unleashedRage_ = value;
      }
    }

    /// <summary>Field number for the "weapon_mastery" field.</summary>
    public const int WeaponMasteryFieldNumber = 42;
    private int weaponMastery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WeaponMastery {
      get { return weaponMastery_; }
      set {
        weaponMastery_ = value;
      }
    }

    /// <summary>Field number for the "frozen_power" field.</summary>
    public const int FrozenPowerFieldNumber = 43;
    private int frozenPower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FrozenPower {
      get { return frozenPower_; }
      set {
        frozenPower_ = value;
      }
    }

    /// <summary>Field number for the "dual_wield_specialization" field.</summary>
    public const int DualWieldSpecializationFieldNumber = 44;
    private int dualWieldSpecialization_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DualWieldSpecialization {
      get { return dualWieldSpecialization_; }
      set {
        dualWieldSpecialization_ = value;
      }
    }

    /// <summary>Field number for the "dual_wield" field.</summary>
    public const int DualWieldFieldNumber = 45;
    private bool dualWield_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DualWield {
      get { return dualWield_; }
      set {
        dualWield_ = value;
      }
    }

    /// <summary>Field number for the "stormstrike" field.</summary>
    public const int StormstrikeFieldNumber = 46;
    private bool stormstrike_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Stormstrike {
      get { return stormstrike_; }
      set {
        stormstrike_ = value;
      }
    }

    /// <summary>Field number for the "static_shock" field.</summary>
    public const int StaticShockFieldNumber = 47;
    private int staticShock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StaticShock {
      get { return staticShock_; }
      set {
        staticShock_ = value;
      }
    }

    /// <summary>Field number for the "lava_lash" field.</summary>
    public const int LavaLashFieldNumber = 48;
    private bool lavaLash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LavaLash {
      get { return lavaLash_; }
      set {
        lavaLash_ = value;
      }
    }

    /// <summary>Field number for the "improved_stormstrike" field.</summary>
    public const int ImprovedStormstrikeFieldNumber = 49;
    private int improvedStormstrike_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedStormstrike {
      get { return improvedStormstrike_; }
      set {
        improvedStormstrike_ = value;
      }
    }

    /// <summary>Field number for the "mental_quickness" field.</summary>
    public const int MentalQuicknessFieldNumber = 50;
    private int mentalQuickness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MentalQuickness {
      get { return mentalQuickness_; }
      set {
        mentalQuickness_ = value;
      }
    }

    /// <summary>Field number for the "shamanistic_rage" field.</summary>
    public const int ShamanisticRageFieldNumber = 51;
    private bool shamanisticRage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShamanisticRage {
      get { return shamanisticRage_; }
      set {
        shamanisticRage_ = value;
      }
    }

    /// <summary>Field number for the "earthen_power" field.</summary>
    public const int EarthenPowerFieldNumber = 52;
    private int earthenPower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EarthenPower {
      get { return earthenPower_; }
      set {
        earthenPower_ = value;
      }
    }

    /// <summary>Field number for the "maelstrom_weapon" field.</summary>
    public const int MaelstromWeaponFieldNumber = 53;
    private int maelstromWeapon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaelstromWeapon {
      get { return maelstromWeapon_; }
      set {
        maelstromWeapon_ = value;
      }
    }

    /// <summary>Field number for the "feral_spirit" field.</summary>
    public const int FeralSpiritFieldNumber = 54;
    private bool feralSpirit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FeralSpirit {
      get { return feralSpirit_; }
      set {
        feralSpirit_ = value;
      }
    }

    /// <summary>Field number for the "improved_healing_wave" field.</summary>
    public const int ImprovedHealingWaveFieldNumber = 55;
    private int improvedHealingWave_;
    /// <summary>
    /// Restoration
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedHealingWave {
      get { return improvedHealingWave_; }
      set {
        improvedHealingWave_ = value;
      }
    }

    /// <summary>Field number for the "totemic_focus" field.</summary>
    public const int TotemicFocusFieldNumber = 56;
    private int totemicFocus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotemicFocus {
      get { return totemicFocus_; }
      set {
        totemicFocus_ = value;
      }
    }

    /// <summary>Field number for the "improved_reincarnation" field.</summary>
    public const int ImprovedReincarnationFieldNumber = 57;
    private int improvedReincarnation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedReincarnation {
      get { return improvedReincarnation_; }
      set {
        improvedReincarnation_ = value;
      }
    }

    /// <summary>Field number for the "healing_grace" field.</summary>
    public const int HealingGraceFieldNumber = 58;
    private int healingGrace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HealingGrace {
      get { return healingGrace_; }
      set {
        healingGrace_ = value;
      }
    }

    /// <summary>Field number for the "tidal_focus" field.</summary>
    public const int TidalFocusFieldNumber = 59;
    private int tidalFocus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TidalFocus {
      get { return tidalFocus_; }
      set {
        tidalFocus_ = value;
      }
    }

    /// <summary>Field number for the "improved_water_shield" field.</summary>
    public const int ImprovedWaterShieldFieldNumber = 60;
    private int improvedWaterShield_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedWaterShield {
      get { return improvedWaterShield_; }
      set {
        improvedWaterShield_ = value;
      }
    }

    /// <summary>Field number for the "healing_focus" field.</summary>
    public const int HealingFocusFieldNumber = 61;
    private int healingFocus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HealingFocus {
      get { return healingFocus_; }
      set {
        healingFocus_ = value;
      }
    }

    /// <summary>Field number for the "tidal_force" field.</summary>
    public const int TidalForceFieldNumber = 62;
    private bool tidalForce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TidalForce {
      get { return tidalForce_; }
      set {
        tidalForce_ = value;
      }
    }

    /// <summary>Field number for the "ancestral_healing" field.</summary>
    public const int AncestralHealingFieldNumber = 63;
    private int ancestralHealing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AncestralHealing {
      get { return ancestralHealing_; }
      set {
        ancestralHealing_ = value;
      }
    }

    /// <summary>Field number for the "restorative_totems" field.</summary>
    public const int RestorativeTotemsFieldNumber = 64;
    private int restorativeTotems_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RestorativeTotems {
      get { return restorativeTotems_; }
      set {
        restorativeTotems_ = value;
      }
    }

    /// <summary>Field number for the "tidal_mastery" field.</summary>
    public const int TidalMasteryFieldNumber = 65;
    private int tidalMastery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TidalMastery {
      get { return tidalMastery_; }
      set {
        tidalMastery_ = value;
      }
    }

    /// <summary>Field number for the "healing_way" field.</summary>
    public const int HealingWayFieldNumber = 66;
    private int healingWay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HealingWay {
      get { return healingWay_; }
      set {
        healingWay_ = value;
      }
    }

    /// <summary>Field number for the "natures_swiftness" field.</summary>
    public const int NaturesSwiftnessFieldNumber = 67;
    private bool naturesSwiftness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NaturesSwiftness {
      get { return naturesSwiftness_; }
      set {
        naturesSwiftness_ = value;
      }
    }

    /// <summary>Field number for the "focused_mind" field.</summary>
    public const int FocusedMindFieldNumber = 68;
    private int focusedMind_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FocusedMind {
      get { return focusedMind_; }
      set {
        focusedMind_ = value;
      }
    }

    /// <summary>Field number for the "purification" field.</summary>
    public const int PurificationFieldNumber = 69;
    private int purification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Purification {
      get { return purification_; }
      set {
        purification_ = value;
      }
    }

    /// <summary>Field number for the "natures_guardian" field.</summary>
    public const int NaturesGuardianFieldNumber = 70;
    private int naturesGuardian_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NaturesGuardian {
      get { return naturesGuardian_; }
      set {
        naturesGuardian_ = value;
      }
    }

    /// <summary>Field number for the "mana_tide_totem" field.</summary>
    public const int ManaTideTotemFieldNumber = 71;
    private bool manaTideTotem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ManaTideTotem {
      get { return manaTideTotem_; }
      set {
        manaTideTotem_ = value;
      }
    }

    /// <summary>Field number for the "cleanse_spirit" field.</summary>
    public const int CleanseSpiritFieldNumber = 72;
    private bool cleanseSpirit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CleanseSpirit {
      get { return cleanseSpirit_; }
      set {
        cleanseSpirit_ = value;
      }
    }

    /// <summary>Field number for the "blessing_of_the_eternals" field.</summary>
    public const int BlessingOfTheEternalsFieldNumber = 73;
    private int blessingOfTheEternals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BlessingOfTheEternals {
      get { return blessingOfTheEternals_; }
      set {
        blessingOfTheEternals_ = value;
      }
    }

    /// <summary>Field number for the "improved_chain_heal" field.</summary>
    public const int ImprovedChainHealFieldNumber = 74;
    private int improvedChainHeal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedChainHeal {
      get { return improvedChainHeal_; }
      set {
        improvedChainHeal_ = value;
      }
    }

    /// <summary>Field number for the "natures_blessing" field.</summary>
    public const int NaturesBlessingFieldNumber = 75;
    private int naturesBlessing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NaturesBlessing {
      get { return naturesBlessing_; }
      set {
        naturesBlessing_ = value;
      }
    }

    /// <summary>Field number for the "ancestral_awakening" field.</summary>
    public const int AncestralAwakeningFieldNumber = 76;
    private int ancestralAwakening_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AncestralAwakening {
      get { return ancestralAwakening_; }
      set {
        ancestralAwakening_ = value;
      }
    }

    /// <summary>Field number for the "earth_shield" field.</summary>
    public const int EarthShieldFieldNumber = 77;
    private bool earthShield_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EarthShield {
      get { return earthShield_; }
      set {
        earthShield_ = value;
      }
    }

    /// <summary>Field number for the "improved_earth_shield" field.</summary>
    public const int ImprovedEarthShieldFieldNumber = 78;
    private int improvedEarthShield_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedEarthShield {
      get { return improvedEarthShield_; }
      set {
        improvedEarthShield_ = value;
      }
    }

    /// <summary>Field number for the "tidal_waves" field.</summary>
    public const int TidalWavesFieldNumber = 79;
    private int tidalWaves_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TidalWaves {
      get { return tidalWaves_; }
      set {
        tidalWaves_ = value;
      }
    }

    /// <summary>Field number for the "riptide" field.</summary>
    public const int RiptideFieldNumber = 80;
    private bool riptide_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Riptide {
      get { return riptide_; }
      set {
        riptide_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ShamanTalents);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ShamanTalents other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Convection != other.Convection) return false;
      if (Concussion != other.Concussion) return false;
      if (CallOfFlame != other.CallOfFlame) return false;
      if (ElementalWarding != other.ElementalWarding) return false;
      if (ElementalDevastation != other.ElementalDevastation) return false;
      if (Reverberation != other.Reverberation) return false;
      if (ElementalFocus != other.ElementalFocus) return false;
      if (ElementalFury != other.ElementalFury) return false;
      if (ImprovedFireNova != other.ImprovedFireNova) return false;
      if (EyeOfTheStorm != other.EyeOfTheStorm) return false;
      if (ElementalReach != other.ElementalReach) return false;
      if (CallOfThunder != other.CallOfThunder) return false;
      if (UnrelentingStorm != other.UnrelentingStorm) return false;
      if (ElementalPrecision != other.ElementalPrecision) return false;
      if (LightningMastery != other.LightningMastery) return false;
      if (ElementalMastery != other.ElementalMastery) return false;
      if (StormEarthAndFire != other.StormEarthAndFire) return false;
      if (BoomingEchoes != other.BoomingEchoes) return false;
      if (ElementalOath != other.ElementalOath) return false;
      if (LightningOverload != other.LightningOverload) return false;
      if (AstralShift != other.AstralShift) return false;
      if (TotemOfWrath != other.TotemOfWrath) return false;
      if (LavaFlows != other.LavaFlows) return false;
      if (Shamanism != other.Shamanism) return false;
      if (Thunderstorm != other.Thunderstorm) return false;
      if (EnhancingTotems != other.EnhancingTotems) return false;
      if (EarthsGrasp != other.EarthsGrasp) return false;
      if (AncestralKnowledge != other.AncestralKnowledge) return false;
      if (GuardianTotems != other.GuardianTotems) return false;
      if (ThunderingStrikes != other.ThunderingStrikes) return false;
      if (ImprovedGhostWolf != other.ImprovedGhostWolf) return false;
      if (ImprovedShields != other.ImprovedShields) return false;
      if (ElementalWeapons != other.ElementalWeapons) return false;
      if (ShamanisticFocus != other.ShamanisticFocus) return false;
      if (Anticipation != other.Anticipation) return false;
      if (Flurry != other.Flurry) return false;
      if (Toughness != other.Toughness) return false;
      if (ImprovedWindfuryTotem != other.ImprovedWindfuryTotem) return false;
      if (SpiritWeapons != other.SpiritWeapons) return false;
      if (MentalDexterity != other.MentalDexterity) return false;
      if (UnleashedRage != other.UnleashedRage) return false;
      if (WeaponMastery != other.WeaponMastery) return false;
      if (FrozenPower != other.FrozenPower) return false;
      if (DualWieldSpecialization != other.DualWieldSpecialization) return false;
      if (DualWield != other.DualWield) return false;
      if (Stormstrike != other.Stormstrike) return false;
      if (StaticShock != other.StaticShock) return false;
      if (LavaLash != other.LavaLash) return false;
      if (ImprovedStormstrike != other.ImprovedStormstrike) return false;
      if (MentalQuickness != other.MentalQuickness) return false;
      if (ShamanisticRage != other.ShamanisticRage) return false;
      if (EarthenPower != other.EarthenPower) return false;
      if (MaelstromWeapon != other.MaelstromWeapon) return false;
      if (FeralSpirit != other.FeralSpirit) return false;
      if (ImprovedHealingWave != other.ImprovedHealingWave) return false;
      if (TotemicFocus != other.TotemicFocus) return false;
      if (ImprovedReincarnation != other.ImprovedReincarnation) return false;
      if (HealingGrace != other.HealingGrace) return false;
      if (TidalFocus != other.TidalFocus) return false;
      if (ImprovedWaterShield != other.ImprovedWaterShield) return false;
      if (HealingFocus != other.HealingFocus) return false;
      if (TidalForce != other.TidalForce) return false;
      if (AncestralHealing != other.AncestralHealing) return false;
      if (RestorativeTotems != other.RestorativeTotems) return false;
      if (TidalMastery != other.TidalMastery) return false;
      if (HealingWay != other.HealingWay) return false;
      if (NaturesSwiftness != other.NaturesSwiftness) return false;
      if (FocusedMind != other.FocusedMind) return false;
      if (Purification != other.Purification) return false;
      if (NaturesGuardian != other.NaturesGuardian) return false;
      if (ManaTideTotem != other.ManaTideTotem) return false;
      if (CleanseSpirit != other.CleanseSpirit) return false;
      if (BlessingOfTheEternals != other.BlessingOfTheEternals) return false;
      if (ImprovedChainHeal != other.ImprovedChainHeal) return false;
      if (NaturesBlessing != other.NaturesBlessing) return false;
      if (AncestralAwakening != other.AncestralAwakening) return false;
      if (EarthShield != other.EarthShield) return false;
      if (ImprovedEarthShield != other.ImprovedEarthShield) return false;
      if (TidalWaves != other.TidalWaves) return false;
      if (Riptide != other.Riptide) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Convection != 0) hash ^= Convection.GetHashCode();
      if (Concussion != 0) hash ^= Concussion.GetHashCode();
      if (CallOfFlame != 0) hash ^= CallOfFlame.GetHashCode();
      if (ElementalWarding != 0) hash ^= ElementalWarding.GetHashCode();
      if (ElementalDevastation != 0) hash ^= ElementalDevastation.GetHashCode();
      if (Reverberation != 0) hash ^= Reverberation.GetHashCode();
      if (ElementalFocus != false) hash ^= ElementalFocus.GetHashCode();
      if (ElementalFury != 0) hash ^= ElementalFury.GetHashCode();
      if (ImprovedFireNova != 0) hash ^= ImprovedFireNova.GetHashCode();
      if (EyeOfTheStorm != 0) hash ^= EyeOfTheStorm.GetHashCode();
      if (ElementalReach != 0) hash ^= ElementalReach.GetHashCode();
      if (CallOfThunder != false) hash ^= CallOfThunder.GetHashCode();
      if (UnrelentingStorm != 0) hash ^= UnrelentingStorm.GetHashCode();
      if (ElementalPrecision != 0) hash ^= ElementalPrecision.GetHashCode();
      if (LightningMastery != 0) hash ^= LightningMastery.GetHashCode();
      if (ElementalMastery != false) hash ^= ElementalMastery.GetHashCode();
      if (StormEarthAndFire != 0) hash ^= StormEarthAndFire.GetHashCode();
      if (BoomingEchoes != 0) hash ^= BoomingEchoes.GetHashCode();
      if (ElementalOath != 0) hash ^= ElementalOath.GetHashCode();
      if (LightningOverload != 0) hash ^= LightningOverload.GetHashCode();
      if (AstralShift != 0) hash ^= AstralShift.GetHashCode();
      if (TotemOfWrath != false) hash ^= TotemOfWrath.GetHashCode();
      if (LavaFlows != 0) hash ^= LavaFlows.GetHashCode();
      if (Shamanism != 0) hash ^= Shamanism.GetHashCode();
      if (Thunderstorm != false) hash ^= Thunderstorm.GetHashCode();
      if (EnhancingTotems != 0) hash ^= EnhancingTotems.GetHashCode();
      if (EarthsGrasp != 0) hash ^= EarthsGrasp.GetHashCode();
      if (AncestralKnowledge != 0) hash ^= AncestralKnowledge.GetHashCode();
      if (GuardianTotems != 0) hash ^= GuardianTotems.GetHashCode();
      if (ThunderingStrikes != 0) hash ^= ThunderingStrikes.GetHashCode();
      if (ImprovedGhostWolf != 0) hash ^= ImprovedGhostWolf.GetHashCode();
      if (ImprovedShields != 0) hash ^= ImprovedShields.GetHashCode();
      if (ElementalWeapons != 0) hash ^= ElementalWeapons.GetHashCode();
      if (ShamanisticFocus != false) hash ^= ShamanisticFocus.GetHashCode();
      if (Anticipation != 0) hash ^= Anticipation.GetHashCode();
      if (Flurry != 0) hash ^= Flurry.GetHashCode();
      if (Toughness != 0) hash ^= Toughness.GetHashCode();
      if (ImprovedWindfuryTotem != 0) hash ^= ImprovedWindfuryTotem.GetHashCode();
      if (SpiritWeapons != false) hash ^= SpiritWeapons.GetHashCode();
      if (MentalDexterity != 0) hash ^= MentalDexterity.GetHashCode();
      if (UnleashedRage != 0) hash ^= UnleashedRage.GetHashCode();
      if (WeaponMastery != 0) hash ^= WeaponMastery.GetHashCode();
      if (FrozenPower != 0) hash ^= FrozenPower.GetHashCode();
      if (DualWieldSpecialization != 0) hash ^= DualWieldSpecialization.GetHashCode();
      if (DualWield != false) hash ^= DualWield.GetHashCode();
      if (Stormstrike != false) hash ^= Stormstrike.GetHashCode();
      if (StaticShock != 0) hash ^= StaticShock.GetHashCode();
      if (LavaLash != false) hash ^= LavaLash.GetHashCode();
      if (ImprovedStormstrike != 0) hash ^= ImprovedStormstrike.GetHashCode();
      if (MentalQuickness != 0) hash ^= MentalQuickness.GetHashCode();
      if (ShamanisticRage != false) hash ^= ShamanisticRage.GetHashCode();
      if (EarthenPower != 0) hash ^= EarthenPower.GetHashCode();
      if (MaelstromWeapon != 0) hash ^= MaelstromWeapon.GetHashCode();
      if (FeralSpirit != false) hash ^= FeralSpirit.GetHashCode();
      if (ImprovedHealingWave != 0) hash ^= ImprovedHealingWave.GetHashCode();
      if (TotemicFocus != 0) hash ^= TotemicFocus.GetHashCode();
      if (ImprovedReincarnation != 0) hash ^= ImprovedReincarnation.GetHashCode();
      if (HealingGrace != 0) hash ^= HealingGrace.GetHashCode();
      if (TidalFocus != 0) hash ^= TidalFocus.GetHashCode();
      if (ImprovedWaterShield != 0) hash ^= ImprovedWaterShield.GetHashCode();
      if (HealingFocus != 0) hash ^= HealingFocus.GetHashCode();
      if (TidalForce != false) hash ^= TidalForce.GetHashCode();
      if (AncestralHealing != 0) hash ^= AncestralHealing.GetHashCode();
      if (RestorativeTotems != 0) hash ^= RestorativeTotems.GetHashCode();
      if (TidalMastery != 0) hash ^= TidalMastery.GetHashCode();
      if (HealingWay != 0) hash ^= HealingWay.GetHashCode();
      if (NaturesSwiftness != false) hash ^= NaturesSwiftness.GetHashCode();
      if (FocusedMind != 0) hash ^= FocusedMind.GetHashCode();
      if (Purification != 0) hash ^= Purification.GetHashCode();
      if (NaturesGuardian != 0) hash ^= NaturesGuardian.GetHashCode();
      if (ManaTideTotem != false) hash ^= ManaTideTotem.GetHashCode();
      if (CleanseSpirit != false) hash ^= CleanseSpirit.GetHashCode();
      if (BlessingOfTheEternals != 0) hash ^= BlessingOfTheEternals.GetHashCode();
      if (ImprovedChainHeal != 0) hash ^= ImprovedChainHeal.GetHashCode();
      if (NaturesBlessing != 0) hash ^= NaturesBlessing.GetHashCode();
      if (AncestralAwakening != 0) hash ^= AncestralAwakening.GetHashCode();
      if (EarthShield != false) hash ^= EarthShield.GetHashCode();
      if (ImprovedEarthShield != 0) hash ^= ImprovedEarthShield.GetHashCode();
      if (TidalWaves != 0) hash ^= TidalWaves.GetHashCode();
      if (Riptide != false) hash ^= Riptide.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Convection != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Convection);
      }
      if (Concussion != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Concussion);
      }
      if (CallOfFlame != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CallOfFlame);
      }
      if (ElementalWarding != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ElementalWarding);
      }
      if (ElementalDevastation != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ElementalDevastation);
      }
      if (Reverberation != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Reverberation);
      }
      if (ElementalFocus != false) {
        output.WriteRawTag(56);
        output.WriteBool(ElementalFocus);
      }
      if (ElementalFury != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ElementalFury);
      }
      if (ImprovedFireNova != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ImprovedFireNova);
      }
      if (EyeOfTheStorm != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EyeOfTheStorm);
      }
      if (ElementalReach != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(ElementalReach);
      }
      if (CallOfThunder != false) {
        output.WriteRawTag(96);
        output.WriteBool(CallOfThunder);
      }
      if (UnrelentingStorm != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(UnrelentingStorm);
      }
      if (ElementalPrecision != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(ElementalPrecision);
      }
      if (LightningMastery != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(LightningMastery);
      }
      if (ElementalMastery != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(ElementalMastery);
      }
      if (StormEarthAndFire != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(StormEarthAndFire);
      }
      if (BoomingEchoes != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(BoomingEchoes);
      }
      if (ElementalOath != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(ElementalOath);
      }
      if (LightningOverload != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(LightningOverload);
      }
      if (AstralShift != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(AstralShift);
      }
      if (TotemOfWrath != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(TotemOfWrath);
      }
      if (LavaFlows != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(LavaFlows);
      }
      if (Shamanism != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(Shamanism);
      }
      if (Thunderstorm != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(Thunderstorm);
      }
      if (EnhancingTotems != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(EnhancingTotems);
      }
      if (EarthsGrasp != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(EarthsGrasp);
      }
      if (AncestralKnowledge != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(AncestralKnowledge);
      }
      if (GuardianTotems != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(GuardianTotems);
      }
      if (ThunderingStrikes != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(ThunderingStrikes);
      }
      if (ImprovedGhostWolf != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(ImprovedGhostWolf);
      }
      if (ImprovedShields != 0) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(ImprovedShields);
      }
      if (ElementalWeapons != 0) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(ElementalWeapons);
      }
      if (ShamanisticFocus != false) {
        output.WriteRawTag(144, 2);
        output.WriteBool(ShamanisticFocus);
      }
      if (Anticipation != 0) {
        output.WriteRawTag(152, 2);
        output.WriteInt32(Anticipation);
      }
      if (Flurry != 0) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(Flurry);
      }
      if (Toughness != 0) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(Toughness);
      }
      if (ImprovedWindfuryTotem != 0) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(ImprovedWindfuryTotem);
      }
      if (SpiritWeapons != false) {
        output.WriteRawTag(184, 2);
        output.WriteBool(SpiritWeapons);
      }
      if (MentalDexterity != 0) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(MentalDexterity);
      }
      if (UnleashedRage != 0) {
        output.WriteRawTag(200, 2);
        output.WriteInt32(UnleashedRage);
      }
      if (WeaponMastery != 0) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(WeaponMastery);
      }
      if (FrozenPower != 0) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(FrozenPower);
      }
      if (DualWieldSpecialization != 0) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(DualWieldSpecialization);
      }
      if (DualWield != false) {
        output.WriteRawTag(232, 2);
        output.WriteBool(DualWield);
      }
      if (Stormstrike != false) {
        output.WriteRawTag(240, 2);
        output.WriteBool(Stormstrike);
      }
      if (StaticShock != 0) {
        output.WriteRawTag(248, 2);
        output.WriteInt32(StaticShock);
      }
      if (LavaLash != false) {
        output.WriteRawTag(128, 3);
        output.WriteBool(LavaLash);
      }
      if (ImprovedStormstrike != 0) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(ImprovedStormstrike);
      }
      if (MentalQuickness != 0) {
        output.WriteRawTag(144, 3);
        output.WriteInt32(MentalQuickness);
      }
      if (ShamanisticRage != false) {
        output.WriteRawTag(152, 3);
        output.WriteBool(ShamanisticRage);
      }
      if (EarthenPower != 0) {
        output.WriteRawTag(160, 3);
        output.WriteInt32(EarthenPower);
      }
      if (MaelstromWeapon != 0) {
        output.WriteRawTag(168, 3);
        output.WriteInt32(MaelstromWeapon);
      }
      if (FeralSpirit != false) {
        output.WriteRawTag(176, 3);
        output.WriteBool(FeralSpirit);
      }
      if (ImprovedHealingWave != 0) {
        output.WriteRawTag(184, 3);
        output.WriteInt32(ImprovedHealingWave);
      }
      if (TotemicFocus != 0) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(TotemicFocus);
      }
      if (ImprovedReincarnation != 0) {
        output.WriteRawTag(200, 3);
        output.WriteInt32(ImprovedReincarnation);
      }
      if (HealingGrace != 0) {
        output.WriteRawTag(208, 3);
        output.WriteInt32(HealingGrace);
      }
      if (TidalFocus != 0) {
        output.WriteRawTag(216, 3);
        output.WriteInt32(TidalFocus);
      }
      if (ImprovedWaterShield != 0) {
        output.WriteRawTag(224, 3);
        output.WriteInt32(ImprovedWaterShield);
      }
      if (HealingFocus != 0) {
        output.WriteRawTag(232, 3);
        output.WriteInt32(HealingFocus);
      }
      if (TidalForce != false) {
        output.WriteRawTag(240, 3);
        output.WriteBool(TidalForce);
      }
      if (AncestralHealing != 0) {
        output.WriteRawTag(248, 3);
        output.WriteInt32(AncestralHealing);
      }
      if (RestorativeTotems != 0) {
        output.WriteRawTag(128, 4);
        output.WriteInt32(RestorativeTotems);
      }
      if (TidalMastery != 0) {
        output.WriteRawTag(136, 4);
        output.WriteInt32(TidalMastery);
      }
      if (HealingWay != 0) {
        output.WriteRawTag(144, 4);
        output.WriteInt32(HealingWay);
      }
      if (NaturesSwiftness != false) {
        output.WriteRawTag(152, 4);
        output.WriteBool(NaturesSwiftness);
      }
      if (FocusedMind != 0) {
        output.WriteRawTag(160, 4);
        output.WriteInt32(FocusedMind);
      }
      if (Purification != 0) {
        output.WriteRawTag(168, 4);
        output.WriteInt32(Purification);
      }
      if (NaturesGuardian != 0) {
        output.WriteRawTag(176, 4);
        output.WriteInt32(NaturesGuardian);
      }
      if (ManaTideTotem != false) {
        output.WriteRawTag(184, 4);
        output.WriteBool(ManaTideTotem);
      }
      if (CleanseSpirit != false) {
        output.WriteRawTag(192, 4);
        output.WriteBool(CleanseSpirit);
      }
      if (BlessingOfTheEternals != 0) {
        output.WriteRawTag(200, 4);
        output.WriteInt32(BlessingOfTheEternals);
      }
      if (ImprovedChainHeal != 0) {
        output.WriteRawTag(208, 4);
        output.WriteInt32(ImprovedChainHeal);
      }
      if (NaturesBlessing != 0) {
        output.WriteRawTag(216, 4);
        output.WriteInt32(NaturesBlessing);
      }
      if (AncestralAwakening != 0) {
        output.WriteRawTag(224, 4);
        output.WriteInt32(AncestralAwakening);
      }
      if (EarthShield != false) {
        output.WriteRawTag(232, 4);
        output.WriteBool(EarthShield);
      }
      if (ImprovedEarthShield != 0) {
        output.WriteRawTag(240, 4);
        output.WriteInt32(ImprovedEarthShield);
      }
      if (TidalWaves != 0) {
        output.WriteRawTag(248, 4);
        output.WriteInt32(TidalWaves);
      }
      if (Riptide != false) {
        output.WriteRawTag(128, 5);
        output.WriteBool(Riptide);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Convection != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Convection);
      }
      if (Concussion != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Concussion);
      }
      if (CallOfFlame != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CallOfFlame);
      }
      if (ElementalWarding != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ElementalWarding);
      }
      if (ElementalDevastation != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ElementalDevastation);
      }
      if (Reverberation != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Reverberation);
      }
      if (ElementalFocus != false) {
        output.WriteRawTag(56);
        output.WriteBool(ElementalFocus);
      }
      if (ElementalFury != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ElementalFury);
      }
      if (ImprovedFireNova != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ImprovedFireNova);
      }
      if (EyeOfTheStorm != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EyeOfTheStorm);
      }
      if (ElementalReach != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(ElementalReach);
      }
      if (CallOfThunder != false) {
        output.WriteRawTag(96);
        output.WriteBool(CallOfThunder);
      }
      if (UnrelentingStorm != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(UnrelentingStorm);
      }
      if (ElementalPrecision != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(ElementalPrecision);
      }
      if (LightningMastery != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(LightningMastery);
      }
      if (ElementalMastery != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(ElementalMastery);
      }
      if (StormEarthAndFire != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(StormEarthAndFire);
      }
      if (BoomingEchoes != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(BoomingEchoes);
      }
      if (ElementalOath != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(ElementalOath);
      }
      if (LightningOverload != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(LightningOverload);
      }
      if (AstralShift != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(AstralShift);
      }
      if (TotemOfWrath != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(TotemOfWrath);
      }
      if (LavaFlows != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(LavaFlows);
      }
      if (Shamanism != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(Shamanism);
      }
      if (Thunderstorm != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(Thunderstorm);
      }
      if (EnhancingTotems != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(EnhancingTotems);
      }
      if (EarthsGrasp != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(EarthsGrasp);
      }
      if (AncestralKnowledge != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(AncestralKnowledge);
      }
      if (GuardianTotems != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(GuardianTotems);
      }
      if (ThunderingStrikes != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(ThunderingStrikes);
      }
      if (ImprovedGhostWolf != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(ImprovedGhostWolf);
      }
      if (ImprovedShields != 0) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(ImprovedShields);
      }
      if (ElementalWeapons != 0) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(ElementalWeapons);
      }
      if (ShamanisticFocus != false) {
        output.WriteRawTag(144, 2);
        output.WriteBool(ShamanisticFocus);
      }
      if (Anticipation != 0) {
        output.WriteRawTag(152, 2);
        output.WriteInt32(Anticipation);
      }
      if (Flurry != 0) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(Flurry);
      }
      if (Toughness != 0) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(Toughness);
      }
      if (ImprovedWindfuryTotem != 0) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(ImprovedWindfuryTotem);
      }
      if (SpiritWeapons != false) {
        output.WriteRawTag(184, 2);
        output.WriteBool(SpiritWeapons);
      }
      if (MentalDexterity != 0) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(MentalDexterity);
      }
      if (UnleashedRage != 0) {
        output.WriteRawTag(200, 2);
        output.WriteInt32(UnleashedRage);
      }
      if (WeaponMastery != 0) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(WeaponMastery);
      }
      if (FrozenPower != 0) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(FrozenPower);
      }
      if (DualWieldSpecialization != 0) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(DualWieldSpecialization);
      }
      if (DualWield != false) {
        output.WriteRawTag(232, 2);
        output.WriteBool(DualWield);
      }
      if (Stormstrike != false) {
        output.WriteRawTag(240, 2);
        output.WriteBool(Stormstrike);
      }
      if (StaticShock != 0) {
        output.WriteRawTag(248, 2);
        output.WriteInt32(StaticShock);
      }
      if (LavaLash != false) {
        output.WriteRawTag(128, 3);
        output.WriteBool(LavaLash);
      }
      if (ImprovedStormstrike != 0) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(ImprovedStormstrike);
      }
      if (MentalQuickness != 0) {
        output.WriteRawTag(144, 3);
        output.WriteInt32(MentalQuickness);
      }
      if (ShamanisticRage != false) {
        output.WriteRawTag(152, 3);
        output.WriteBool(ShamanisticRage);
      }
      if (EarthenPower != 0) {
        output.WriteRawTag(160, 3);
        output.WriteInt32(EarthenPower);
      }
      if (MaelstromWeapon != 0) {
        output.WriteRawTag(168, 3);
        output.WriteInt32(MaelstromWeapon);
      }
      if (FeralSpirit != false) {
        output.WriteRawTag(176, 3);
        output.WriteBool(FeralSpirit);
      }
      if (ImprovedHealingWave != 0) {
        output.WriteRawTag(184, 3);
        output.WriteInt32(ImprovedHealingWave);
      }
      if (TotemicFocus != 0) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(TotemicFocus);
      }
      if (ImprovedReincarnation != 0) {
        output.WriteRawTag(200, 3);
        output.WriteInt32(ImprovedReincarnation);
      }
      if (HealingGrace != 0) {
        output.WriteRawTag(208, 3);
        output.WriteInt32(HealingGrace);
      }
      if (TidalFocus != 0) {
        output.WriteRawTag(216, 3);
        output.WriteInt32(TidalFocus);
      }
      if (ImprovedWaterShield != 0) {
        output.WriteRawTag(224, 3);
        output.WriteInt32(ImprovedWaterShield);
      }
      if (HealingFocus != 0) {
        output.WriteRawTag(232, 3);
        output.WriteInt32(HealingFocus);
      }
      if (TidalForce != false) {
        output.WriteRawTag(240, 3);
        output.WriteBool(TidalForce);
      }
      if (AncestralHealing != 0) {
        output.WriteRawTag(248, 3);
        output.WriteInt32(AncestralHealing);
      }
      if (RestorativeTotems != 0) {
        output.WriteRawTag(128, 4);
        output.WriteInt32(RestorativeTotems);
      }
      if (TidalMastery != 0) {
        output.WriteRawTag(136, 4);
        output.WriteInt32(TidalMastery);
      }
      if (HealingWay != 0) {
        output.WriteRawTag(144, 4);
        output.WriteInt32(HealingWay);
      }
      if (NaturesSwiftness != false) {
        output.WriteRawTag(152, 4);
        output.WriteBool(NaturesSwiftness);
      }
      if (FocusedMind != 0) {
        output.WriteRawTag(160, 4);
        output.WriteInt32(FocusedMind);
      }
      if (Purification != 0) {
        output.WriteRawTag(168, 4);
        output.WriteInt32(Purification);
      }
      if (NaturesGuardian != 0) {
        output.WriteRawTag(176, 4);
        output.WriteInt32(NaturesGuardian);
      }
      if (ManaTideTotem != false) {
        output.WriteRawTag(184, 4);
        output.WriteBool(ManaTideTotem);
      }
      if (CleanseSpirit != false) {
        output.WriteRawTag(192, 4);
        output.WriteBool(CleanseSpirit);
      }
      if (BlessingOfTheEternals != 0) {
        output.WriteRawTag(200, 4);
        output.WriteInt32(BlessingOfTheEternals);
      }
      if (ImprovedChainHeal != 0) {
        output.WriteRawTag(208, 4);
        output.WriteInt32(ImprovedChainHeal);
      }
      if (NaturesBlessing != 0) {
        output.WriteRawTag(216, 4);
        output.WriteInt32(NaturesBlessing);
      }
      if (AncestralAwakening != 0) {
        output.WriteRawTag(224, 4);
        output.WriteInt32(AncestralAwakening);
      }
      if (EarthShield != false) {
        output.WriteRawTag(232, 4);
        output.WriteBool(EarthShield);
      }
      if (ImprovedEarthShield != 0) {
        output.WriteRawTag(240, 4);
        output.WriteInt32(ImprovedEarthShield);
      }
      if (TidalWaves != 0) {
        output.WriteRawTag(248, 4);
        output.WriteInt32(TidalWaves);
      }
      if (Riptide != false) {
        output.WriteRawTag(128, 5);
        output.WriteBool(Riptide);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Convection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Convection);
      }
      if (Concussion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Concussion);
      }
      if (CallOfFlame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CallOfFlame);
      }
      if (ElementalWarding != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ElementalWarding);
      }
      if (ElementalDevastation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ElementalDevastation);
      }
      if (Reverberation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Reverberation);
      }
      if (ElementalFocus != false) {
        size += 1 + 1;
      }
      if (ElementalFury != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ElementalFury);
      }
      if (ImprovedFireNova != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImprovedFireNova);
      }
      if (EyeOfTheStorm != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EyeOfTheStorm);
      }
      if (ElementalReach != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ElementalReach);
      }
      if (CallOfThunder != false) {
        size += 1 + 1;
      }
      if (UnrelentingStorm != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnrelentingStorm);
      }
      if (ElementalPrecision != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ElementalPrecision);
      }
      if (LightningMastery != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LightningMastery);
      }
      if (ElementalMastery != false) {
        size += 2 + 1;
      }
      if (StormEarthAndFire != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(StormEarthAndFire);
      }
      if (BoomingEchoes != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BoomingEchoes);
      }
      if (ElementalOath != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ElementalOath);
      }
      if (LightningOverload != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LightningOverload);
      }
      if (AstralShift != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AstralShift);
      }
      if (TotemOfWrath != false) {
        size += 2 + 1;
      }
      if (LavaFlows != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LavaFlows);
      }
      if (Shamanism != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Shamanism);
      }
      if (Thunderstorm != false) {
        size += 2 + 1;
      }
      if (EnhancingTotems != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EnhancingTotems);
      }
      if (EarthsGrasp != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EarthsGrasp);
      }
      if (AncestralKnowledge != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AncestralKnowledge);
      }
      if (GuardianTotems != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GuardianTotems);
      }
      if (ThunderingStrikes != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ThunderingStrikes);
      }
      if (ImprovedGhostWolf != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedGhostWolf);
      }
      if (ImprovedShields != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedShields);
      }
      if (ElementalWeapons != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ElementalWeapons);
      }
      if (ShamanisticFocus != false) {
        size += 2 + 1;
      }
      if (Anticipation != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Anticipation);
      }
      if (Flurry != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Flurry);
      }
      if (Toughness != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Toughness);
      }
      if (ImprovedWindfuryTotem != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedWindfuryTotem);
      }
      if (SpiritWeapons != false) {
        size += 2 + 1;
      }
      if (MentalDexterity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MentalDexterity);
      }
      if (UnleashedRage != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnleashedRage);
      }
      if (WeaponMastery != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(WeaponMastery);
      }
      if (FrozenPower != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FrozenPower);
      }
      if (DualWieldSpecialization != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DualWieldSpecialization);
      }
      if (DualWield != false) {
        size += 2 + 1;
      }
      if (Stormstrike != false) {
        size += 2 + 1;
      }
      if (StaticShock != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(StaticShock);
      }
      if (LavaLash != false) {
        size += 2 + 1;
      }
      if (ImprovedStormstrike != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedStormstrike);
      }
      if (MentalQuickness != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MentalQuickness);
      }
      if (ShamanisticRage != false) {
        size += 2 + 1;
      }
      if (EarthenPower != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EarthenPower);
      }
      if (MaelstromWeapon != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaelstromWeapon);
      }
      if (FeralSpirit != false) {
        size += 2 + 1;
      }
      if (ImprovedHealingWave != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedHealingWave);
      }
      if (TotemicFocus != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TotemicFocus);
      }
      if (ImprovedReincarnation != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedReincarnation);
      }
      if (HealingGrace != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HealingGrace);
      }
      if (TidalFocus != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TidalFocus);
      }
      if (ImprovedWaterShield != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedWaterShield);
      }
      if (HealingFocus != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HealingFocus);
      }
      if (TidalForce != false) {
        size += 2 + 1;
      }
      if (AncestralHealing != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AncestralHealing);
      }
      if (RestorativeTotems != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RestorativeTotems);
      }
      if (TidalMastery != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TidalMastery);
      }
      if (HealingWay != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HealingWay);
      }
      if (NaturesSwiftness != false) {
        size += 2 + 1;
      }
      if (FocusedMind != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FocusedMind);
      }
      if (Purification != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Purification);
      }
      if (NaturesGuardian != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NaturesGuardian);
      }
      if (ManaTideTotem != false) {
        size += 2 + 1;
      }
      if (CleanseSpirit != false) {
        size += 2 + 1;
      }
      if (BlessingOfTheEternals != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BlessingOfTheEternals);
      }
      if (ImprovedChainHeal != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedChainHeal);
      }
      if (NaturesBlessing != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NaturesBlessing);
      }
      if (AncestralAwakening != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AncestralAwakening);
      }
      if (EarthShield != false) {
        size += 2 + 1;
      }
      if (ImprovedEarthShield != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedEarthShield);
      }
      if (TidalWaves != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TidalWaves);
      }
      if (Riptide != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ShamanTalents other) {
      if (other == null) {
        return;
      }
      if (other.Convection != 0) {
        Convection = other.Convection;
      }
      if (other.Concussion != 0) {
        Concussion = other.Concussion;
      }
      if (other.CallOfFlame != 0) {
        CallOfFlame = other.CallOfFlame;
      }
      if (other.ElementalWarding != 0) {
        ElementalWarding = other.ElementalWarding;
      }
      if (other.ElementalDevastation != 0) {
        ElementalDevastation = other.ElementalDevastation;
      }
      if (other.Reverberation != 0) {
        Reverberation = other.Reverberation;
      }
      if (other.ElementalFocus != false) {
        ElementalFocus = other.ElementalFocus;
      }
      if (other.ElementalFury != 0) {
        ElementalFury = other.ElementalFury;
      }
      if (other.ImprovedFireNova != 0) {
        ImprovedFireNova = other.ImprovedFireNova;
      }
      if (other.EyeOfTheStorm != 0) {
        EyeOfTheStorm = other.EyeOfTheStorm;
      }
      if (other.ElementalReach != 0) {
        ElementalReach = other.ElementalReach;
      }
      if (other.CallOfThunder != false) {
        CallOfThunder = other.CallOfThunder;
      }
      if (other.UnrelentingStorm != 0) {
        UnrelentingStorm = other.UnrelentingStorm;
      }
      if (other.ElementalPrecision != 0) {
        ElementalPrecision = other.ElementalPrecision;
      }
      if (other.LightningMastery != 0) {
        LightningMastery = other.LightningMastery;
      }
      if (other.ElementalMastery != false) {
        ElementalMastery = other.ElementalMastery;
      }
      if (other.StormEarthAndFire != 0) {
        StormEarthAndFire = other.StormEarthAndFire;
      }
      if (other.BoomingEchoes != 0) {
        BoomingEchoes = other.BoomingEchoes;
      }
      if (other.ElementalOath != 0) {
        ElementalOath = other.ElementalOath;
      }
      if (other.LightningOverload != 0) {
        LightningOverload = other.LightningOverload;
      }
      if (other.AstralShift != 0) {
        AstralShift = other.AstralShift;
      }
      if (other.TotemOfWrath != false) {
        TotemOfWrath = other.TotemOfWrath;
      }
      if (other.LavaFlows != 0) {
        LavaFlows = other.LavaFlows;
      }
      if (other.Shamanism != 0) {
        Shamanism = other.Shamanism;
      }
      if (other.Thunderstorm != false) {
        Thunderstorm = other.Thunderstorm;
      }
      if (other.EnhancingTotems != 0) {
        EnhancingTotems = other.EnhancingTotems;
      }
      if (other.EarthsGrasp != 0) {
        EarthsGrasp = other.EarthsGrasp;
      }
      if (other.AncestralKnowledge != 0) {
        AncestralKnowledge = other.AncestralKnowledge;
      }
      if (other.GuardianTotems != 0) {
        GuardianTotems = other.GuardianTotems;
      }
      if (other.ThunderingStrikes != 0) {
        ThunderingStrikes = other.ThunderingStrikes;
      }
      if (other.ImprovedGhostWolf != 0) {
        ImprovedGhostWolf = other.ImprovedGhostWolf;
      }
      if (other.ImprovedShields != 0) {
        ImprovedShields = other.ImprovedShields;
      }
      if (other.ElementalWeapons != 0) {
        ElementalWeapons = other.ElementalWeapons;
      }
      if (other.ShamanisticFocus != false) {
        ShamanisticFocus = other.ShamanisticFocus;
      }
      if (other.Anticipation != 0) {
        Anticipation = other.Anticipation;
      }
      if (other.Flurry != 0) {
        Flurry = other.Flurry;
      }
      if (other.Toughness != 0) {
        Toughness = other.Toughness;
      }
      if (other.ImprovedWindfuryTotem != 0) {
        ImprovedWindfuryTotem = other.ImprovedWindfuryTotem;
      }
      if (other.SpiritWeapons != false) {
        SpiritWeapons = other.SpiritWeapons;
      }
      if (other.MentalDexterity != 0) {
        MentalDexterity = other.MentalDexterity;
      }
      if (other.UnleashedRage != 0) {
        UnleashedRage = other.UnleashedRage;
      }
      if (other.WeaponMastery != 0) {
        WeaponMastery = other.WeaponMastery;
      }
      if (other.FrozenPower != 0) {
        FrozenPower = other.FrozenPower;
      }
      if (other.DualWieldSpecialization != 0) {
        DualWieldSpecialization = other.DualWieldSpecialization;
      }
      if (other.DualWield != false) {
        DualWield = other.DualWield;
      }
      if (other.Stormstrike != false) {
        Stormstrike = other.Stormstrike;
      }
      if (other.StaticShock != 0) {
        StaticShock = other.StaticShock;
      }
      if (other.LavaLash != false) {
        LavaLash = other.LavaLash;
      }
      if (other.ImprovedStormstrike != 0) {
        ImprovedStormstrike = other.ImprovedStormstrike;
      }
      if (other.MentalQuickness != 0) {
        MentalQuickness = other.MentalQuickness;
      }
      if (other.ShamanisticRage != false) {
        ShamanisticRage = other.ShamanisticRage;
      }
      if (other.EarthenPower != 0) {
        EarthenPower = other.EarthenPower;
      }
      if (other.MaelstromWeapon != 0) {
        MaelstromWeapon = other.MaelstromWeapon;
      }
      if (other.FeralSpirit != false) {
        FeralSpirit = other.FeralSpirit;
      }
      if (other.ImprovedHealingWave != 0) {
        ImprovedHealingWave = other.ImprovedHealingWave;
      }
      if (other.TotemicFocus != 0) {
        TotemicFocus = other.TotemicFocus;
      }
      if (other.ImprovedReincarnation != 0) {
        ImprovedReincarnation = other.ImprovedReincarnation;
      }
      if (other.HealingGrace != 0) {
        HealingGrace = other.HealingGrace;
      }
      if (other.TidalFocus != 0) {
        TidalFocus = other.TidalFocus;
      }
      if (other.ImprovedWaterShield != 0) {
        ImprovedWaterShield = other.ImprovedWaterShield;
      }
      if (other.HealingFocus != 0) {
        HealingFocus = other.HealingFocus;
      }
      if (other.TidalForce != false) {
        TidalForce = other.TidalForce;
      }
      if (other.AncestralHealing != 0) {
        AncestralHealing = other.AncestralHealing;
      }
      if (other.RestorativeTotems != 0) {
        RestorativeTotems = other.RestorativeTotems;
      }
      if (other.TidalMastery != 0) {
        TidalMastery = other.TidalMastery;
      }
      if (other.HealingWay != 0) {
        HealingWay = other.HealingWay;
      }
      if (other.NaturesSwiftness != false) {
        NaturesSwiftness = other.NaturesSwiftness;
      }
      if (other.FocusedMind != 0) {
        FocusedMind = other.FocusedMind;
      }
      if (other.Purification != 0) {
        Purification = other.Purification;
      }
      if (other.NaturesGuardian != 0) {
        NaturesGuardian = other.NaturesGuardian;
      }
      if (other.ManaTideTotem != false) {
        ManaTideTotem = other.ManaTideTotem;
      }
      if (other.CleanseSpirit != false) {
        CleanseSpirit = other.CleanseSpirit;
      }
      if (other.BlessingOfTheEternals != 0) {
        BlessingOfTheEternals = other.BlessingOfTheEternals;
      }
      if (other.ImprovedChainHeal != 0) {
        ImprovedChainHeal = other.ImprovedChainHeal;
      }
      if (other.NaturesBlessing != 0) {
        NaturesBlessing = other.NaturesBlessing;
      }
      if (other.AncestralAwakening != 0) {
        AncestralAwakening = other.AncestralAwakening;
      }
      if (other.EarthShield != false) {
        EarthShield = other.EarthShield;
      }
      if (other.ImprovedEarthShield != 0) {
        ImprovedEarthShield = other.ImprovedEarthShield;
      }
      if (other.TidalWaves != 0) {
        TidalWaves = other.TidalWaves;
      }
      if (other.Riptide != false) {
        Riptide = other.Riptide;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Convection = input.ReadInt32();
            break;
          }
          case 16: {
            Concussion = input.ReadInt32();
            break;
          }
          case 24: {
            CallOfFlame = input.ReadInt32();
            break;
          }
          case 32: {
            ElementalWarding = input.ReadInt32();
            break;
          }
          case 40: {
            ElementalDevastation = input.ReadInt32();
            break;
          }
          case 48: {
            Reverberation = input.ReadInt32();
            break;
          }
          case 56: {
            ElementalFocus = input.ReadBool();
            break;
          }
          case 64: {
            ElementalFury = input.ReadInt32();
            break;
          }
          case 72: {
            ImprovedFireNova = input.ReadInt32();
            break;
          }
          case 80: {
            EyeOfTheStorm = input.ReadInt32();
            break;
          }
          case 88: {
            ElementalReach = input.ReadInt32();
            break;
          }
          case 96: {
            CallOfThunder = input.ReadBool();
            break;
          }
          case 104: {
            UnrelentingStorm = input.ReadInt32();
            break;
          }
          case 112: {
            ElementalPrecision = input.ReadInt32();
            break;
          }
          case 120: {
            LightningMastery = input.ReadInt32();
            break;
          }
          case 128: {
            ElementalMastery = input.ReadBool();
            break;
          }
          case 136: {
            StormEarthAndFire = input.ReadInt32();
            break;
          }
          case 144: {
            BoomingEchoes = input.ReadInt32();
            break;
          }
          case 152: {
            ElementalOath = input.ReadInt32();
            break;
          }
          case 160: {
            LightningOverload = input.ReadInt32();
            break;
          }
          case 168: {
            AstralShift = input.ReadInt32();
            break;
          }
          case 176: {
            TotemOfWrath = input.ReadBool();
            break;
          }
          case 184: {
            LavaFlows = input.ReadInt32();
            break;
          }
          case 192: {
            Shamanism = input.ReadInt32();
            break;
          }
          case 200: {
            Thunderstorm = input.ReadBool();
            break;
          }
          case 208: {
            EnhancingTotems = input.ReadInt32();
            break;
          }
          case 216: {
            EarthsGrasp = input.ReadInt32();
            break;
          }
          case 224: {
            AncestralKnowledge = input.ReadInt32();
            break;
          }
          case 232: {
            GuardianTotems = input.ReadInt32();
            break;
          }
          case 240: {
            ThunderingStrikes = input.ReadInt32();
            break;
          }
          case 248: {
            ImprovedGhostWolf = input.ReadInt32();
            break;
          }
          case 256: {
            ImprovedShields = input.ReadInt32();
            break;
          }
          case 264: {
            ElementalWeapons = input.ReadInt32();
            break;
          }
          case 272: {
            ShamanisticFocus = input.ReadBool();
            break;
          }
          case 280: {
            Anticipation = input.ReadInt32();
            break;
          }
          case 288: {
            Flurry = input.ReadInt32();
            break;
          }
          case 296: {
            Toughness = input.ReadInt32();
            break;
          }
          case 304: {
            ImprovedWindfuryTotem = input.ReadInt32();
            break;
          }
          case 312: {
            SpiritWeapons = input.ReadBool();
            break;
          }
          case 320: {
            MentalDexterity = input.ReadInt32();
            break;
          }
          case 328: {
            UnleashedRage = input.ReadInt32();
            break;
          }
          case 336: {
            WeaponMastery = input.ReadInt32();
            break;
          }
          case 344: {
            FrozenPower = input.ReadInt32();
            break;
          }
          case 352: {
            DualWieldSpecialization = input.ReadInt32();
            break;
          }
          case 360: {
            DualWield = input.ReadBool();
            break;
          }
          case 368: {
            Stormstrike = input.ReadBool();
            break;
          }
          case 376: {
            StaticShock = input.ReadInt32();
            break;
          }
          case 384: {
            LavaLash = input.ReadBool();
            break;
          }
          case 392: {
            ImprovedStormstrike = input.ReadInt32();
            break;
          }
          case 400: {
            MentalQuickness = input.ReadInt32();
            break;
          }
          case 408: {
            ShamanisticRage = input.ReadBool();
            break;
          }
          case 416: {
            EarthenPower = input.ReadInt32();
            break;
          }
          case 424: {
            MaelstromWeapon = input.ReadInt32();
            break;
          }
          case 432: {
            FeralSpirit = input.ReadBool();
            break;
          }
          case 440: {
            ImprovedHealingWave = input.ReadInt32();
            break;
          }
          case 448: {
            TotemicFocus = input.ReadInt32();
            break;
          }
          case 456: {
            ImprovedReincarnation = input.ReadInt32();
            break;
          }
          case 464: {
            HealingGrace = input.ReadInt32();
            break;
          }
          case 472: {
            TidalFocus = input.ReadInt32();
            break;
          }
          case 480: {
            ImprovedWaterShield = input.ReadInt32();
            break;
          }
          case 488: {
            HealingFocus = input.ReadInt32();
            break;
          }
          case 496: {
            TidalForce = input.ReadBool();
            break;
          }
          case 504: {
            AncestralHealing = input.ReadInt32();
            break;
          }
          case 512: {
            RestorativeTotems = input.ReadInt32();
            break;
          }
          case 520: {
            TidalMastery = input.ReadInt32();
            break;
          }
          case 528: {
            HealingWay = input.ReadInt32();
            break;
          }
          case 536: {
            NaturesSwiftness = input.ReadBool();
            break;
          }
          case 544: {
            FocusedMind = input.ReadInt32();
            break;
          }
          case 552: {
            Purification = input.ReadInt32();
            break;
          }
          case 560: {
            NaturesGuardian = input.ReadInt32();
            break;
          }
          case 568: {
            ManaTideTotem = input.ReadBool();
            break;
          }
          case 576: {
            CleanseSpirit = input.ReadBool();
            break;
          }
          case 584: {
            BlessingOfTheEternals = input.ReadInt32();
            break;
          }
          case 592: {
            ImprovedChainHeal = input.ReadInt32();
            break;
          }
          case 600: {
            NaturesBlessing = input.ReadInt32();
            break;
          }
          case 608: {
            AncestralAwakening = input.ReadInt32();
            break;
          }
          case 616: {
            EarthShield = input.ReadBool();
            break;
          }
          case 624: {
            ImprovedEarthShield = input.ReadInt32();
            break;
          }
          case 632: {
            TidalWaves = input.ReadInt32();
            break;
          }
          case 640: {
            Riptide = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Convection = input.ReadInt32();
            break;
          }
          case 16: {
            Concussion = input.ReadInt32();
            break;
          }
          case 24: {
            CallOfFlame = input.ReadInt32();
            break;
          }
          case 32: {
            ElementalWarding = input.ReadInt32();
            break;
          }
          case 40: {
            ElementalDevastation = input.ReadInt32();
            break;
          }
          case 48: {
            Reverberation = input.ReadInt32();
            break;
          }
          case 56: {
            ElementalFocus = input.ReadBool();
            break;
          }
          case 64: {
            ElementalFury = input.ReadInt32();
            break;
          }
          case 72: {
            ImprovedFireNova = input.ReadInt32();
            break;
          }
          case 80: {
            EyeOfTheStorm = input.ReadInt32();
            break;
          }
          case 88: {
            ElementalReach = input.ReadInt32();
            break;
          }
          case 96: {
            CallOfThunder = input.ReadBool();
            break;
          }
          case 104: {
            UnrelentingStorm = input.ReadInt32();
            break;
          }
          case 112: {
            ElementalPrecision = input.ReadInt32();
            break;
          }
          case 120: {
            LightningMastery = input.ReadInt32();
            break;
          }
          case 128: {
            ElementalMastery = input.ReadBool();
            break;
          }
          case 136: {
            StormEarthAndFire = input.ReadInt32();
            break;
          }
          case 144: {
            BoomingEchoes = input.ReadInt32();
            break;
          }
          case 152: {
            ElementalOath = input.ReadInt32();
            break;
          }
          case 160: {
            LightningOverload = input.ReadInt32();
            break;
          }
          case 168: {
            AstralShift = input.ReadInt32();
            break;
          }
          case 176: {
            TotemOfWrath = input.ReadBool();
            break;
          }
          case 184: {
            LavaFlows = input.ReadInt32();
            break;
          }
          case 192: {
            Shamanism = input.ReadInt32();
            break;
          }
          case 200: {
            Thunderstorm = input.ReadBool();
            break;
          }
          case 208: {
            EnhancingTotems = input.ReadInt32();
            break;
          }
          case 216: {
            EarthsGrasp = input.ReadInt32();
            break;
          }
          case 224: {
            AncestralKnowledge = input.ReadInt32();
            break;
          }
          case 232: {
            GuardianTotems = input.ReadInt32();
            break;
          }
          case 240: {
            ThunderingStrikes = input.ReadInt32();
            break;
          }
          case 248: {
            ImprovedGhostWolf = input.ReadInt32();
            break;
          }
          case 256: {
            ImprovedShields = input.ReadInt32();
            break;
          }
          case 264: {
            ElementalWeapons = input.ReadInt32();
            break;
          }
          case 272: {
            ShamanisticFocus = input.ReadBool();
            break;
          }
          case 280: {
            Anticipation = input.ReadInt32();
            break;
          }
          case 288: {
            Flurry = input.ReadInt32();
            break;
          }
          case 296: {
            Toughness = input.ReadInt32();
            break;
          }
          case 304: {
            ImprovedWindfuryTotem = input.ReadInt32();
            break;
          }
          case 312: {
            SpiritWeapons = input.ReadBool();
            break;
          }
          case 320: {
            MentalDexterity = input.ReadInt32();
            break;
          }
          case 328: {
            UnleashedRage = input.ReadInt32();
            break;
          }
          case 336: {
            WeaponMastery = input.ReadInt32();
            break;
          }
          case 344: {
            FrozenPower = input.ReadInt32();
            break;
          }
          case 352: {
            DualWieldSpecialization = input.ReadInt32();
            break;
          }
          case 360: {
            DualWield = input.ReadBool();
            break;
          }
          case 368: {
            Stormstrike = input.ReadBool();
            break;
          }
          case 376: {
            StaticShock = input.ReadInt32();
            break;
          }
          case 384: {
            LavaLash = input.ReadBool();
            break;
          }
          case 392: {
            ImprovedStormstrike = input.ReadInt32();
            break;
          }
          case 400: {
            MentalQuickness = input.ReadInt32();
            break;
          }
          case 408: {
            ShamanisticRage = input.ReadBool();
            break;
          }
          case 416: {
            EarthenPower = input.ReadInt32();
            break;
          }
          case 424: {
            MaelstromWeapon = input.ReadInt32();
            break;
          }
          case 432: {
            FeralSpirit = input.ReadBool();
            break;
          }
          case 440: {
            ImprovedHealingWave = input.ReadInt32();
            break;
          }
          case 448: {
            TotemicFocus = input.ReadInt32();
            break;
          }
          case 456: {
            ImprovedReincarnation = input.ReadInt32();
            break;
          }
          case 464: {
            HealingGrace = input.ReadInt32();
            break;
          }
          case 472: {
            TidalFocus = input.ReadInt32();
            break;
          }
          case 480: {
            ImprovedWaterShield = input.ReadInt32();
            break;
          }
          case 488: {
            HealingFocus = input.ReadInt32();
            break;
          }
          case 496: {
            TidalForce = input.ReadBool();
            break;
          }
          case 504: {
            AncestralHealing = input.ReadInt32();
            break;
          }
          case 512: {
            RestorativeTotems = input.ReadInt32();
            break;
          }
          case 520: {
            TidalMastery = input.ReadInt32();
            break;
          }
          case 528: {
            HealingWay = input.ReadInt32();
            break;
          }
          case 536: {
            NaturesSwiftness = input.ReadBool();
            break;
          }
          case 544: {
            FocusedMind = input.ReadInt32();
            break;
          }
          case 552: {
            Purification = input.ReadInt32();
            break;
          }
          case 560: {
            NaturesGuardian = input.ReadInt32();
            break;
          }
          case 568: {
            ManaTideTotem = input.ReadBool();
            break;
          }
          case 576: {
            CleanseSpirit = input.ReadBool();
            break;
          }
          case 584: {
            BlessingOfTheEternals = input.ReadInt32();
            break;
          }
          case 592: {
            ImprovedChainHeal = input.ReadInt32();
            break;
          }
          case 600: {
            NaturesBlessing = input.ReadInt32();
            break;
          }
          case 608: {
            AncestralAwakening = input.ReadInt32();
            break;
          }
          case 616: {
            EarthShield = input.ReadBool();
            break;
          }
          case 624: {
            ImprovedEarthShield = input.ReadInt32();
            break;
          }
          case 632: {
            TidalWaves = input.ReadInt32();
            break;
          }
          case 640: {
            Riptide = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShamanTotems : pb::IMessage<ShamanTotems>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShamanTotems> _parser = new pb::MessageParser<ShamanTotems>(() => new ShamanTotems());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ShamanTotems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.ShamanReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShamanTotems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShamanTotems(ShamanTotems other) : this() {
      earth_ = other.earth_;
      air_ = other.air_;
      fire_ = other.fire_;
      water_ = other.water_;
      useFireElemental_ = other.useFireElemental_;
      bonusSpellpower_ = other.bonusSpellpower_;
      enhTierTenBonus_ = other.enhTierTenBonus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShamanTotems Clone() {
      return new ShamanTotems(this);
    }

    /// <summary>Field number for the "earth" field.</summary>
    public const int EarthFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.EarthTotem earth_ = global::SirusDbScrapper.UIDatabase.EarthTotem.NoEarthTotem;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.EarthTotem Earth {
      get { return earth_; }
      set {
        earth_ = value;
      }
    }

    /// <summary>Field number for the "air" field.</summary>
    public const int AirFieldNumber = 2;
    private global::SirusDbScrapper.UIDatabase.AirTotem air_ = global::SirusDbScrapper.UIDatabase.AirTotem.NoAirTotem;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.AirTotem Air {
      get { return air_; }
      set {
        air_ = value;
      }
    }

    /// <summary>Field number for the "fire" field.</summary>
    public const int FireFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.FireTotem fire_ = global::SirusDbScrapper.UIDatabase.FireTotem.NoFireTotem;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.FireTotem Fire {
      get { return fire_; }
      set {
        fire_ = value;
      }
    }

    /// <summary>Field number for the "water" field.</summary>
    public const int WaterFieldNumber = 4;
    private global::SirusDbScrapper.UIDatabase.WaterTotem water_ = global::SirusDbScrapper.UIDatabase.WaterTotem.NoWaterTotem;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.WaterTotem Water {
      get { return water_; }
      set {
        water_ = value;
      }
    }

    /// <summary>Field number for the "use_fire_elemental" field.</summary>
    public const int UseFireElementalFieldNumber = 6;
    private bool useFireElemental_;
    /// <summary>
    /// If set, will use fire elemental totem at the start and revert to regular
    /// fire totems when it expires.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseFireElemental {
      get { return useFireElemental_; }
      set {
        useFireElemental_ = value;
      }
    }

    /// <summary>Field number for the "bonus_spellpower" field.</summary>
    public const int BonusSpellpowerFieldNumber = 10;
    private int bonusSpellpower_;
    /// <summary>
    /// Bonus spell power for fire elemental snapshotting.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BonusSpellpower {
      get { return bonusSpellpower_; }
      set {
        bonusSpellpower_ = value;
      }
    }

    /// <summary>Field number for the "enh_tier_ten_bonus" field.</summary>
    public const int EnhTierTenBonusFieldNumber = 11;
    private bool enhTierTenBonus_;
    /// <summary>
    /// Snapshot fire elemental using Tier 10 4 set bonus.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnhTierTenBonus {
      get { return enhTierTenBonus_; }
      set {
        enhTierTenBonus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ShamanTotems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ShamanTotems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Earth != other.Earth) return false;
      if (Air != other.Air) return false;
      if (Fire != other.Fire) return false;
      if (Water != other.Water) return false;
      if (UseFireElemental != other.UseFireElemental) return false;
      if (BonusSpellpower != other.BonusSpellpower) return false;
      if (EnhTierTenBonus != other.EnhTierTenBonus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Earth != global::SirusDbScrapper.UIDatabase.EarthTotem.NoEarthTotem) hash ^= Earth.GetHashCode();
      if (Air != global::SirusDbScrapper.UIDatabase.AirTotem.NoAirTotem) hash ^= Air.GetHashCode();
      if (Fire != global::SirusDbScrapper.UIDatabase.FireTotem.NoFireTotem) hash ^= Fire.GetHashCode();
      if (Water != global::SirusDbScrapper.UIDatabase.WaterTotem.NoWaterTotem) hash ^= Water.GetHashCode();
      if (UseFireElemental != false) hash ^= UseFireElemental.GetHashCode();
      if (BonusSpellpower != 0) hash ^= BonusSpellpower.GetHashCode();
      if (EnhTierTenBonus != false) hash ^= EnhTierTenBonus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Earth != global::SirusDbScrapper.UIDatabase.EarthTotem.NoEarthTotem) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Earth);
      }
      if (Air != global::SirusDbScrapper.UIDatabase.AirTotem.NoAirTotem) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Air);
      }
      if (Fire != global::SirusDbScrapper.UIDatabase.FireTotem.NoFireTotem) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Fire);
      }
      if (Water != global::SirusDbScrapper.UIDatabase.WaterTotem.NoWaterTotem) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Water);
      }
      if (UseFireElemental != false) {
        output.WriteRawTag(48);
        output.WriteBool(UseFireElemental);
      }
      if (BonusSpellpower != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(BonusSpellpower);
      }
      if (EnhTierTenBonus != false) {
        output.WriteRawTag(88);
        output.WriteBool(EnhTierTenBonus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Earth != global::SirusDbScrapper.UIDatabase.EarthTotem.NoEarthTotem) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Earth);
      }
      if (Air != global::SirusDbScrapper.UIDatabase.AirTotem.NoAirTotem) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Air);
      }
      if (Fire != global::SirusDbScrapper.UIDatabase.FireTotem.NoFireTotem) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Fire);
      }
      if (Water != global::SirusDbScrapper.UIDatabase.WaterTotem.NoWaterTotem) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Water);
      }
      if (UseFireElemental != false) {
        output.WriteRawTag(48);
        output.WriteBool(UseFireElemental);
      }
      if (BonusSpellpower != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(BonusSpellpower);
      }
      if (EnhTierTenBonus != false) {
        output.WriteRawTag(88);
        output.WriteBool(EnhTierTenBonus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Earth != global::SirusDbScrapper.UIDatabase.EarthTotem.NoEarthTotem) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Earth);
      }
      if (Air != global::SirusDbScrapper.UIDatabase.AirTotem.NoAirTotem) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Air);
      }
      if (Fire != global::SirusDbScrapper.UIDatabase.FireTotem.NoFireTotem) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Fire);
      }
      if (Water != global::SirusDbScrapper.UIDatabase.WaterTotem.NoWaterTotem) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Water);
      }
      if (UseFireElemental != false) {
        size += 1 + 1;
      }
      if (BonusSpellpower != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BonusSpellpower);
      }
      if (EnhTierTenBonus != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ShamanTotems other) {
      if (other == null) {
        return;
      }
      if (other.Earth != global::SirusDbScrapper.UIDatabase.EarthTotem.NoEarthTotem) {
        Earth = other.Earth;
      }
      if (other.Air != global::SirusDbScrapper.UIDatabase.AirTotem.NoAirTotem) {
        Air = other.Air;
      }
      if (other.Fire != global::SirusDbScrapper.UIDatabase.FireTotem.NoFireTotem) {
        Fire = other.Fire;
      }
      if (other.Water != global::SirusDbScrapper.UIDatabase.WaterTotem.NoWaterTotem) {
        Water = other.Water;
      }
      if (other.UseFireElemental != false) {
        UseFireElemental = other.UseFireElemental;
      }
      if (other.BonusSpellpower != 0) {
        BonusSpellpower = other.BonusSpellpower;
      }
      if (other.EnhTierTenBonus != false) {
        EnhTierTenBonus = other.EnhTierTenBonus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Earth = (global::SirusDbScrapper.UIDatabase.EarthTotem) input.ReadEnum();
            break;
          }
          case 16: {
            Air = (global::SirusDbScrapper.UIDatabase.AirTotem) input.ReadEnum();
            break;
          }
          case 24: {
            Fire = (global::SirusDbScrapper.UIDatabase.FireTotem) input.ReadEnum();
            break;
          }
          case 32: {
            Water = (global::SirusDbScrapper.UIDatabase.WaterTotem) input.ReadEnum();
            break;
          }
          case 48: {
            UseFireElemental = input.ReadBool();
            break;
          }
          case 80: {
            BonusSpellpower = input.ReadInt32();
            break;
          }
          case 88: {
            EnhTierTenBonus = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Earth = (global::SirusDbScrapper.UIDatabase.EarthTotem) input.ReadEnum();
            break;
          }
          case 16: {
            Air = (global::SirusDbScrapper.UIDatabase.AirTotem) input.ReadEnum();
            break;
          }
          case 24: {
            Fire = (global::SirusDbScrapper.UIDatabase.FireTotem) input.ReadEnum();
            break;
          }
          case 32: {
            Water = (global::SirusDbScrapper.UIDatabase.WaterTotem) input.ReadEnum();
            break;
          }
          case 48: {
            UseFireElemental = input.ReadBool();
            break;
          }
          case 80: {
            BonusSpellpower = input.ReadInt32();
            break;
          }
          case 88: {
            EnhTierTenBonus = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ShamanTotems message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Not used here, but used by APL
      /// </summary>
      public enum TotemType {
        [pbr::OriginalName("TypeUnknown")] TypeUnknown = 0,
        [pbr::OriginalName("Earth")] Earth = 1,
        [pbr::OriginalName("Air")] Air = 2,
        [pbr::OriginalName("Fire")] Fire = 3,
        [pbr::OriginalName("Water")] Water = 4,
      }

    }
    #endregion

  }

  public sealed partial class ElementalShaman : pb::IMessage<ElementalShaman>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ElementalShaman> _parser = new pb::MessageParser<ElementalShaman>(() => new ElementalShaman());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ElementalShaman> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.ShamanReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ElementalShaman() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ElementalShaman(ElementalShaman other) : this() {
      options_ = other.options_ != null ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ElementalShaman Clone() {
      return new ElementalShaman(this);
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ElementalShaman);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ElementalShaman other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (options_ != null) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ElementalShaman other) {
      if (other == null) {
        return;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          Options = new global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            if (options_ == null) {
              Options = new global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            if (options_ == null) {
              Options = new global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ElementalShaman message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Rotation : pb::IMessage<Rotation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Rotation> _parser = new pb::MessageParser<Rotation>(() => new Rotation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Rotation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SirusDbScrapper.UIDatabase.ElementalShaman.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation(Rotation other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation Clone() {
          return new Rotation(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Rotation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Rotation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Rotation other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class Options : pb::IMessage<Options>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Options> _parser = new pb::MessageParser<Options>(() => new Options());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Options> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SirusDbScrapper.UIDatabase.ElementalShaman.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options(Options other) : this() {
          shield_ = other.shield_;
          totems_ = other.totems_ != null ? other.totems_.Clone() : null;
          thunderstormRange_ = other.thunderstormRange_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options Clone() {
          return new Options(this);
        }

        /// <summary>Field number for the "shield" field.</summary>
        public const int ShieldFieldNumber = 1;
        private global::SirusDbScrapper.UIDatabase.ShamanShield shield_ = global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.ShamanShield Shield {
          get { return shield_; }
          set {
            shield_ = value;
          }
        }

        /// <summary>Field number for the "totems" field.</summary>
        public const int TotemsFieldNumber = 3;
        private global::SirusDbScrapper.UIDatabase.ShamanTotems totems_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.ShamanTotems Totems {
          get { return totems_; }
          set {
            totems_ = value;
          }
        }

        /// <summary>Field number for the "thunderstormRange" field.</summary>
        public const int ThunderstormRangeFieldNumber = 4;
        private global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options.Types.ThunderstormRange thunderstormRange_ = global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options.Types.ThunderstormRange.UnsetTsrange;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options.Types.ThunderstormRange ThunderstormRange {
          get { return thunderstormRange_; }
          set {
            thunderstormRange_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Options);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Options other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Shield != other.Shield) return false;
          if (!object.Equals(Totems, other.Totems)) return false;
          if (ThunderstormRange != other.ThunderstormRange) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Shield != global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield) hash ^= Shield.GetHashCode();
          if (totems_ != null) hash ^= Totems.GetHashCode();
          if (ThunderstormRange != global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options.Types.ThunderstormRange.UnsetTsrange) hash ^= ThunderstormRange.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Shield != global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Shield);
          }
          if (totems_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Totems);
          }
          if (ThunderstormRange != global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options.Types.ThunderstormRange.UnsetTsrange) {
            output.WriteRawTag(32);
            output.WriteEnum((int) ThunderstormRange);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Shield != global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Shield);
          }
          if (totems_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Totems);
          }
          if (ThunderstormRange != global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options.Types.ThunderstormRange.UnsetTsrange) {
            output.WriteRawTag(32);
            output.WriteEnum((int) ThunderstormRange);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Shield != global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Shield);
          }
          if (totems_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Totems);
          }
          if (ThunderstormRange != global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options.Types.ThunderstormRange.UnsetTsrange) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ThunderstormRange);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Options other) {
          if (other == null) {
            return;
          }
          if (other.Shield != global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield) {
            Shield = other.Shield;
          }
          if (other.totems_ != null) {
            if (totems_ == null) {
              Totems = new global::SirusDbScrapper.UIDatabase.ShamanTotems();
            }
            Totems.MergeFrom(other.Totems);
          }
          if (other.ThunderstormRange != global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options.Types.ThunderstormRange.UnsetTsrange) {
            ThunderstormRange = other.ThunderstormRange;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Shield = (global::SirusDbScrapper.UIDatabase.ShamanShield) input.ReadEnum();
                break;
              }
              case 26: {
                if (totems_ == null) {
                  Totems = new global::SirusDbScrapper.UIDatabase.ShamanTotems();
                }
                input.ReadMessage(Totems);
                break;
              }
              case 32: {
                ThunderstormRange = (global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options.Types.ThunderstormRange) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Shield = (global::SirusDbScrapper.UIDatabase.ShamanShield) input.ReadEnum();
                break;
              }
              case 26: {
                if (totems_ == null) {
                  Totems = new global::SirusDbScrapper.UIDatabase.ShamanTotems();
                }
                input.ReadMessage(Totems);
                break;
              }
              case 32: {
                ThunderstormRange = (global::SirusDbScrapper.UIDatabase.ElementalShaman.Types.Options.Types.ThunderstormRange) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Options message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public enum ThunderstormRange {
            [pbr::OriginalName("UnsetTSRange")] UnsetTsrange = 0,
            [pbr::OriginalName("TSInRange")] TsinRange = 1,
            [pbr::OriginalName("TSOutofRange")] TsoutofRange = 2,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class EnhancementShaman : pb::IMessage<EnhancementShaman>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnhancementShaman> _parser = new pb::MessageParser<EnhancementShaman>(() => new EnhancementShaman());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EnhancementShaman> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.ShamanReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnhancementShaman() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnhancementShaman(EnhancementShaman other) : this() {
      options_ = other.options_ != null ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnhancementShaman Clone() {
      return new EnhancementShaman(this);
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.EnhancementShaman.Types.Options options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.EnhancementShaman.Types.Options Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EnhancementShaman);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EnhancementShaman other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (options_ != null) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EnhancementShaman other) {
      if (other == null) {
        return;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          Options = new global::SirusDbScrapper.UIDatabase.EnhancementShaman.Types.Options();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            if (options_ == null) {
              Options = new global::SirusDbScrapper.UIDatabase.EnhancementShaman.Types.Options();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            if (options_ == null) {
              Options = new global::SirusDbScrapper.UIDatabase.EnhancementShaman.Types.Options();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the EnhancementShaman message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Rotation : pb::IMessage<Rotation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Rotation> _parser = new pb::MessageParser<Rotation>(() => new Rotation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Rotation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SirusDbScrapper.UIDatabase.EnhancementShaman.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation(Rotation other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation Clone() {
          return new Rotation(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Rotation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Rotation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Rotation other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class Options : pb::IMessage<Options>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Options> _parser = new pb::MessageParser<Options>(() => new Options());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Options> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SirusDbScrapper.UIDatabase.EnhancementShaman.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options(Options other) : this() {
          shield_ = other.shield_;
          syncType_ = other.syncType_;
          imbueMh_ = other.imbueMh_;
          imbueOh_ = other.imbueOh_;
          totems_ = other.totems_ != null ? other.totems_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options Clone() {
          return new Options(this);
        }

        /// <summary>Field number for the "shield" field.</summary>
        public const int ShieldFieldNumber = 1;
        private global::SirusDbScrapper.UIDatabase.ShamanShield shield_ = global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.ShamanShield Shield {
          get { return shield_; }
          set {
            shield_ = value;
          }
        }

        /// <summary>Field number for the "sync_type" field.</summary>
        public const int SyncTypeFieldNumber = 3;
        private global::SirusDbScrapper.UIDatabase.ShamanSyncType syncType_ = global::SirusDbScrapper.UIDatabase.ShamanSyncType.NoSync;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.ShamanSyncType SyncType {
          get { return syncType_; }
          set {
            syncType_ = value;
          }
        }

        /// <summary>Field number for the "imbue_mh" field.</summary>
        public const int ImbueMhFieldNumber = 4;
        private global::SirusDbScrapper.UIDatabase.ShamanImbue imbueMh_ = global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.ShamanImbue ImbueMh {
          get { return imbueMh_; }
          set {
            imbueMh_ = value;
          }
        }

        /// <summary>Field number for the "imbue_oh" field.</summary>
        public const int ImbueOhFieldNumber = 5;
        private global::SirusDbScrapper.UIDatabase.ShamanImbue imbueOh_ = global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.ShamanImbue ImbueOh {
          get { return imbueOh_; }
          set {
            imbueOh_ = value;
          }
        }

        /// <summary>Field number for the "totems" field.</summary>
        public const int TotemsFieldNumber = 6;
        private global::SirusDbScrapper.UIDatabase.ShamanTotems totems_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.ShamanTotems Totems {
          get { return totems_; }
          set {
            totems_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Options);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Options other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Shield != other.Shield) return false;
          if (SyncType != other.SyncType) return false;
          if (ImbueMh != other.ImbueMh) return false;
          if (ImbueOh != other.ImbueOh) return false;
          if (!object.Equals(Totems, other.Totems)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Shield != global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield) hash ^= Shield.GetHashCode();
          if (SyncType != global::SirusDbScrapper.UIDatabase.ShamanSyncType.NoSync) hash ^= SyncType.GetHashCode();
          if (ImbueMh != global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue) hash ^= ImbueMh.GetHashCode();
          if (ImbueOh != global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue) hash ^= ImbueOh.GetHashCode();
          if (totems_ != null) hash ^= Totems.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Shield != global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Shield);
          }
          if (SyncType != global::SirusDbScrapper.UIDatabase.ShamanSyncType.NoSync) {
            output.WriteRawTag(24);
            output.WriteEnum((int) SyncType);
          }
          if (ImbueMh != global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue) {
            output.WriteRawTag(32);
            output.WriteEnum((int) ImbueMh);
          }
          if (ImbueOh != global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue) {
            output.WriteRawTag(40);
            output.WriteEnum((int) ImbueOh);
          }
          if (totems_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(Totems);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Shield != global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Shield);
          }
          if (SyncType != global::SirusDbScrapper.UIDatabase.ShamanSyncType.NoSync) {
            output.WriteRawTag(24);
            output.WriteEnum((int) SyncType);
          }
          if (ImbueMh != global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue) {
            output.WriteRawTag(32);
            output.WriteEnum((int) ImbueMh);
          }
          if (ImbueOh != global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue) {
            output.WriteRawTag(40);
            output.WriteEnum((int) ImbueOh);
          }
          if (totems_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(Totems);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Shield != global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Shield);
          }
          if (SyncType != global::SirusDbScrapper.UIDatabase.ShamanSyncType.NoSync) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SyncType);
          }
          if (ImbueMh != global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ImbueMh);
          }
          if (ImbueOh != global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ImbueOh);
          }
          if (totems_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Totems);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Options other) {
          if (other == null) {
            return;
          }
          if (other.Shield != global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield) {
            Shield = other.Shield;
          }
          if (other.SyncType != global::SirusDbScrapper.UIDatabase.ShamanSyncType.NoSync) {
            SyncType = other.SyncType;
          }
          if (other.ImbueMh != global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue) {
            ImbueMh = other.ImbueMh;
          }
          if (other.ImbueOh != global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue) {
            ImbueOh = other.ImbueOh;
          }
          if (other.totems_ != null) {
            if (totems_ == null) {
              Totems = new global::SirusDbScrapper.UIDatabase.ShamanTotems();
            }
            Totems.MergeFrom(other.Totems);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Shield = (global::SirusDbScrapper.UIDatabase.ShamanShield) input.ReadEnum();
                break;
              }
              case 24: {
                SyncType = (global::SirusDbScrapper.UIDatabase.ShamanSyncType) input.ReadEnum();
                break;
              }
              case 32: {
                ImbueMh = (global::SirusDbScrapper.UIDatabase.ShamanImbue) input.ReadEnum();
                break;
              }
              case 40: {
                ImbueOh = (global::SirusDbScrapper.UIDatabase.ShamanImbue) input.ReadEnum();
                break;
              }
              case 50: {
                if (totems_ == null) {
                  Totems = new global::SirusDbScrapper.UIDatabase.ShamanTotems();
                }
                input.ReadMessage(Totems);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Shield = (global::SirusDbScrapper.UIDatabase.ShamanShield) input.ReadEnum();
                break;
              }
              case 24: {
                SyncType = (global::SirusDbScrapper.UIDatabase.ShamanSyncType) input.ReadEnum();
                break;
              }
              case 32: {
                ImbueMh = (global::SirusDbScrapper.UIDatabase.ShamanImbue) input.ReadEnum();
                break;
              }
              case 40: {
                ImbueOh = (global::SirusDbScrapper.UIDatabase.ShamanImbue) input.ReadEnum();
                break;
              }
              case 50: {
                if (totems_ == null) {
                  Totems = new global::SirusDbScrapper.UIDatabase.ShamanTotems();
                }
                input.ReadMessage(Totems);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class RestorationShaman : pb::IMessage<RestorationShaman>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RestorationShaman> _parser = new pb::MessageParser<RestorationShaman>(() => new RestorationShaman());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RestorationShaman> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.ShamanReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RestorationShaman() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RestorationShaman(RestorationShaman other) : this() {
      options_ = other.options_ != null ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RestorationShaman Clone() {
      return new RestorationShaman(this);
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.RestorationShaman.Types.Options options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.RestorationShaman.Types.Options Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RestorationShaman);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RestorationShaman other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (options_ != null) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RestorationShaman other) {
      if (other == null) {
        return;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          Options = new global::SirusDbScrapper.UIDatabase.RestorationShaman.Types.Options();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            if (options_ == null) {
              Options = new global::SirusDbScrapper.UIDatabase.RestorationShaman.Types.Options();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            if (options_ == null) {
              Options = new global::SirusDbScrapper.UIDatabase.RestorationShaman.Types.Options();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RestorationShaman message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Rotation : pb::IMessage<Rotation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Rotation> _parser = new pb::MessageParser<Rotation>(() => new Rotation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Rotation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SirusDbScrapper.UIDatabase.RestorationShaman.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation(Rotation other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation Clone() {
          return new Rotation(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Rotation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Rotation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Rotation other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class Options : pb::IMessage<Options>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Options> _parser = new pb::MessageParser<Options>(() => new Options());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Options> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SirusDbScrapper.UIDatabase.RestorationShaman.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options(Options other) : this() {
          shield_ = other.shield_;
          imbueMh_ = other.imbueMh_;
          earthShieldPPM_ = other.earthShieldPPM_;
          totems_ = other.totems_ != null ? other.totems_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options Clone() {
          return new Options(this);
        }

        /// <summary>Field number for the "shield" field.</summary>
        public const int ShieldFieldNumber = 1;
        private global::SirusDbScrapper.UIDatabase.ShamanShield shield_ = global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.ShamanShield Shield {
          get { return shield_; }
          set {
            shield_ = value;
          }
        }

        /// <summary>Field number for the "imbue_mh" field.</summary>
        public const int ImbueMhFieldNumber = 4;
        private global::SirusDbScrapper.UIDatabase.ShamanImbue imbueMh_ = global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.ShamanImbue ImbueMh {
          get { return imbueMh_; }
          set {
            imbueMh_ = value;
          }
        }

        /// <summary>Field number for the "earth_shield_p_p_m" field.</summary>
        public const int EarthShieldPPMFieldNumber = 5;
        private int earthShieldPPM_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int EarthShieldPPM {
          get { return earthShieldPPM_; }
          set {
            earthShieldPPM_ = value;
          }
        }

        /// <summary>Field number for the "totems" field.</summary>
        public const int TotemsFieldNumber = 6;
        private global::SirusDbScrapper.UIDatabase.ShamanTotems totems_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.ShamanTotems Totems {
          get { return totems_; }
          set {
            totems_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Options);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Options other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Shield != other.Shield) return false;
          if (ImbueMh != other.ImbueMh) return false;
          if (EarthShieldPPM != other.EarthShieldPPM) return false;
          if (!object.Equals(Totems, other.Totems)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Shield != global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield) hash ^= Shield.GetHashCode();
          if (ImbueMh != global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue) hash ^= ImbueMh.GetHashCode();
          if (EarthShieldPPM != 0) hash ^= EarthShieldPPM.GetHashCode();
          if (totems_ != null) hash ^= Totems.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Shield != global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Shield);
          }
          if (ImbueMh != global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue) {
            output.WriteRawTag(32);
            output.WriteEnum((int) ImbueMh);
          }
          if (EarthShieldPPM != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(EarthShieldPPM);
          }
          if (totems_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(Totems);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Shield != global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Shield);
          }
          if (ImbueMh != global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue) {
            output.WriteRawTag(32);
            output.WriteEnum((int) ImbueMh);
          }
          if (EarthShieldPPM != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(EarthShieldPPM);
          }
          if (totems_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(Totems);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Shield != global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Shield);
          }
          if (ImbueMh != global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ImbueMh);
          }
          if (EarthShieldPPM != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(EarthShieldPPM);
          }
          if (totems_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Totems);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Options other) {
          if (other == null) {
            return;
          }
          if (other.Shield != global::SirusDbScrapper.UIDatabase.ShamanShield.NoShield) {
            Shield = other.Shield;
          }
          if (other.ImbueMh != global::SirusDbScrapper.UIDatabase.ShamanImbue.NoImbue) {
            ImbueMh = other.ImbueMh;
          }
          if (other.EarthShieldPPM != 0) {
            EarthShieldPPM = other.EarthShieldPPM;
          }
          if (other.totems_ != null) {
            if (totems_ == null) {
              Totems = new global::SirusDbScrapper.UIDatabase.ShamanTotems();
            }
            Totems.MergeFrom(other.Totems);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Shield = (global::SirusDbScrapper.UIDatabase.ShamanShield) input.ReadEnum();
                break;
              }
              case 32: {
                ImbueMh = (global::SirusDbScrapper.UIDatabase.ShamanImbue) input.ReadEnum();
                break;
              }
              case 40: {
                EarthShieldPPM = input.ReadInt32();
                break;
              }
              case 50: {
                if (totems_ == null) {
                  Totems = new global::SirusDbScrapper.UIDatabase.ShamanTotems();
                }
                input.ReadMessage(Totems);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Shield = (global::SirusDbScrapper.UIDatabase.ShamanShield) input.ReadEnum();
                break;
              }
              case 32: {
                ImbueMh = (global::SirusDbScrapper.UIDatabase.ShamanImbue) input.ReadEnum();
                break;
              }
              case 40: {
                EarthShieldPPM = input.ReadInt32();
                break;
              }
              case 50: {
                if (totems_ == null) {
                  Totems = new global::SirusDbScrapper.UIDatabase.ShamanTotems();
                }
                input.ReadMessage(Totems);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
