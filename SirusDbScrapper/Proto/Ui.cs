// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ui.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SirusDbScrapper.UIDatabase {

  /// <summary>Holder for reflection information generated from ui.proto</summary>
  public static partial class UiReflection {

    #region Descriptor
    /// <summary>File descriptor for ui.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgh1aS5wcm90bxIFcHJvdG8aCWFwaS5wcm90bxoJYXBsLnByb3RvGgxjb21t",
            "b24ucHJvdG8aDXBhbGFkaW4ucHJvdG8ivgIKClVJRGF0YWJhc2USHAoFaXRl",
            "bXMYASADKAsyDS5wcm90by5VSUl0ZW0SIgoIZW5jaGFudHMYAiADKAsyEC5w",
            "cm90by5VSUVuY2hhbnQSGgoEZ2VtcxgDIAMoCzIMLnByb3RvLlVJR2VtEioK",
            "CmVuY291bnRlcnMYBiADKAsyFi5wcm90by5QcmVzZXRFbmNvdW50ZXISHAoF",
            "em9uZXMYCCADKAsyDS5wcm90by5VSVpvbmUSGgoEbnBjcxgJIAMoCzIMLnBy",
            "b3RvLlVJTlBDEiMKCml0ZW1faWNvbnMYBCADKAsyDy5wcm90by5JY29uRGF0",
            "YRIkCgtzcGVsbF9pY29ucxgFIAMoCzIPLnByb3RvLkljb25EYXRhEiEKCWds",
            "eXBoX2lkcxgHIAMoCzIOLnByb3RvLkdseXBoSUQiRwoGVUlab25lEgoKAmlk",
            "GAEgASgFEgwKBG5hbWUYAiABKAkSIwoJZXhwYW5zaW9uGAMgASgOMhAucHJv",
            "dG8uRXhwYW5zaW9uIjIKBVVJTlBDEgoKAmlkGAEgASgFEgwKBG5hbWUYAiAB",
            "KAkSDwoHem9uZV9pZBgDIAEoBSLoBgoGVUlJdGVtEgoKAmlkGAEgASgFEgwK",
            "BG5hbWUYAiABKAkSDAoEaWNvbhgDIAEoCRIdCgR0eXBlGAQgASgOMg8ucHJv",
            "dG8uSXRlbVR5cGUSJAoKYXJtb3JfdHlwZRgFIAEoDjIQLnByb3RvLkFybW9y",
            "VHlwZRImCgt3ZWFwb25fdHlwZRgGIAEoDjIRLnByb3RvLldlYXBvblR5cGUS",
            "IgoJaGFuZF90eXBlGAcgASgOMg8ucHJvdG8uSGFuZFR5cGUSMwoScmFuZ2Vk",
            "X3dlYXBvbl90eXBlGAggASgOMhcucHJvdG8uUmFuZ2VkV2VhcG9uVHlwZRIN",
            "CgVzdGF0cxgJIAMoARIkCgtnZW1fc29ja2V0cxgKIAMoDjIPLnByb3RvLkdl",
            "bUNvbG9yEhMKC3NvY2tldEJvbnVzGAsgAygBEhkKEXdlYXBvbl9kYW1hZ2Vf",
            "bWluGAwgASgBEhkKEXdlYXBvbl9kYW1hZ2VfbWF4GA0gASgBEhQKDHdlYXBv",
            "bl9zcGVlZBgOIAEoARIMCgRpbHZsGA8gASgFEg0KBXBoYXNlGBAgASgFEiMK",
            "B3F1YWxpdHkYESABKA4yEi5wcm90by5JdGVtUXVhbGl0eRIOCgZ1bmlxdWUY",
            "EiABKAgSDgoGaGVyb2ljGBMgASgIEiUKD2NsYXNzX2FsbG93bGlzdBgUIAMo",
            "DjIMLnByb3RvLkNsYXNzEi4KE3JlcXVpcmVkX3Byb2Zlc3Npb24YFSABKA4y",
            "ES5wcm90by5Qcm9mZXNzaW9uEhAKCHNldF9uYW1lGBYgASgJEiMKCWV4cGFu",
            "c2lvbhgYIAEoDjIQLnByb3RvLkV4cGFuc2lvbhIkCgdzb3VyY2VzGBcgAygL",
            "MhMucHJvdG8uVUlJdGVtU291cmNlEj0KE2ZhY3Rpb25fcmVzdHJpY3Rpb24Y",
            "GSABKA4yIC5wcm90by5VSUl0ZW0uRmFjdGlvblJlc3RyaWN0aW9uIoQBChJG",
            "YWN0aW9uUmVzdHJpY3Rpb24SIwofRkFDVElPTl9SRVNUUklDVElPTl9VTlNQ",
            "RUNJRklFRBAAEiUKIUZBQ1RJT05fUkVTVFJJQ1RJT05fQUxMSUFOQ0VfT05M",
            "WRABEiIKHkZBQ1RJT05fUkVTVFJJQ1RJT05fSE9SREVfT05MWRACIrEBCgxV",
            "SUl0ZW1Tb3VyY2USJwoHY3JhZnRlZBgBIAEoCzIULnByb3RvLkNyYWZ0ZWRT",
            "b3VyY2VIABIhCgRkcm9wGAIgASgLMhEucHJvdG8uRHJvcFNvdXJjZUgAEiMK",
            "BXF1ZXN0GAMgASgLMhIucHJvdG8uUXVlc3RTb3VyY2VIABImCgdzb2xkX2J5",
            "GAQgASgLMhMucHJvdG8uU29sZEJ5U291cmNlSABCCAoGc291cmNlIkgKDUNy",
            "YWZ0ZWRTb3VyY2USJQoKcHJvZmVzc2lvbhgBIAEoDjIRLnByb3RvLlByb2Zl",
            "c3Npb24SEAoIc3BlbGxfaWQYAiABKAUigQEKCkRyb3BTb3VyY2USLAoKZGlm",
            "ZmljdWx0eRgBIAEoDjIYLnByb3RvLkR1bmdlb25EaWZmaWN1bHR5Eg4KBm5w",
            "Y19pZBgCIAEoBRIPCgd6b25lX2lkGAMgASgFEhIKCm90aGVyX25hbWUYBCAB",
            "KAkSEAoIY2F0ZWdvcnkYBSABKAkiJwoLUXVlc3RTb3VyY2USCgoCaWQYASAB",
            "KAUSDAoEbmFtZRgCIAEoCSJBCgxTb2xkQnlTb3VyY2USDgoGbnBjX2lkGAEg",
            "ASgFEhAKCG5wY19uYW1lGAIgASgJEg8KB3pvbmVfaWQYAyABKAUi5gIKCVVJ",
            "RW5jaGFudBIRCgllZmZlY3RfaWQYASABKAUSDwoHaXRlbV9pZBgCIAEoBRIQ",
            "CghzcGVsbF9pZBgDIAEoBRIMCgRuYW1lGAQgASgJEgwKBGljb24YBSABKAkS",
            "HQoEdHlwZRgGIAEoDjIPLnByb3RvLkl0ZW1UeXBlEiQKC2V4dHJhX3R5cGVz",
            "GA0gAygOMg8ucHJvdG8uSXRlbVR5cGUSKAoMZW5jaGFudF90eXBlGAcgASgO",
            "MhIucHJvdG8uRW5jaGFudFR5cGUSDQoFc3RhdHMYCCADKAESIwoHcXVhbGl0",
            "eRgJIAEoDjISLnByb3RvLkl0ZW1RdWFsaXR5Eg0KBXBoYXNlGAogASgFEiUK",
            "D2NsYXNzX2FsbG93bGlzdBgLIAMoDjIMLnByb3RvLkNsYXNzEi4KE3JlcXVp",
            "cmVkX3Byb2Zlc3Npb24YDCABKA4yES5wcm90by5Qcm9mZXNzaW9uItIBCgVV",
            "SUdlbRIKCgJpZBgBIAEoBRIMCgRuYW1lGAIgASgJEgwKBGljb24YAyABKAkS",
            "HgoFY29sb3IYBCABKA4yDy5wcm90by5HZW1Db2xvchINCgVzdGF0cxgFIAMo",
            "ARINCgVwaGFzZRgGIAEoBRIjCgdxdWFsaXR5GAcgASgOMhIucHJvdG8uSXRl",
            "bVF1YWxpdHkSDgoGdW5pcXVlGAggASgIEi4KE3JlcXVpcmVkX3Byb2Zlc3Np",
            "b24YCSABKA4yES5wcm90by5Qcm9mZXNzaW9uIjIKCEljb25EYXRhEgoKAmlk",
            "GAEgASgFEgwKBG5hbWUYAiABKAkSDAoEaWNvbhgDIAEoCSIsCgdHbHlwaElE",
            "Eg8KB2l0ZW1faWQYASABKAUSEAoIc3BlbGxfaWQYAiABKAUi/gQKD0RhdGFi",
            "YXNlRmlsdGVycxIlCgthcm1vcl90eXBlcxgBIAMoDjIQLnByb3RvLkFybW9y",
            "VHlwZRInCgx3ZWFwb25fdHlwZXMYAiADKA4yES5wcm90by5XZWFwb25UeXBl",
            "EjQKE3JhbmdlZF93ZWFwb25fdHlwZXMYECADKA4yFy5wcm90by5SYW5nZWRX",
            "ZWFwb25UeXBlEioKB3NvdXJjZXMYESADKA4yGS5wcm90by5Tb3VyY2VGaWx0",
            "ZXJPcHRpb24SJgoFcmFpZHMYEiADKA4yFy5wcm90by5SYWlkRmlsdGVyT3B0",
            "aW9uEj0KE2ZhY3Rpb25fcmVzdHJpY3Rpb24YEyABKA4yIC5wcm90by5VSUl0",
            "ZW0uRmFjdGlvblJlc3RyaWN0aW9uEhsKE21pbl9taF93ZWFwb25fc3BlZWQY",
            "BCABKAESGwoTbWF4X21oX3dlYXBvbl9zcGVlZBgFIAEoARIbChNtaW5fb2hf",
            "d2VhcG9uX3NwZWVkGAkgASgBEhsKE21heF9vaF93ZWFwb25fc3BlZWQYCiAB",
            "KAESHwoXbWluX3JhbmdlZF93ZWFwb25fc3BlZWQYDiABKAESHwoXbWF4X3Jh",
            "bmdlZF93ZWFwb25fc3BlZWQYDyABKAESGgoSb25lX2hhbmRlZF93ZWFwb25z",
            "GAYgASgIEhoKEnR3b19oYW5kZWRfd2VhcG9ucxgHIAEoCBIaChJtYXRjaGlu",
            "Z19nZW1zX29ubHkYCCABKAgSFgoOZmF2b3JpdGVfaXRlbXMYCyADKAUSFQoN",
            "ZmF2b3JpdGVfZ2VtcxgMIAMoBRIZChFmYXZvcml0ZV9lbmNoYW50cxgNIAMo",
            "CSKvAgoLU2ltU2V0dGluZ3MSEgoKaXRlcmF0aW9ucxgBIAEoBRINCgVwaGFz",
            "ZRgCIAEoBRIWCg5maXhlZF9ybmdfc2VlZBgDIAEoAxIbChNzaG93X2RhbWFn",
            "ZV9tZXRyaWNzGAggASgIEhsKE3Nob3dfdGhyZWF0X21ldHJpY3MYBCABKAgS",
            "HAoUc2hvd19oZWFsaW5nX21ldHJpY3MYByABKAgSGQoRc2hvd19leHBlcmlt",
            "ZW50YWwYBSABKAgSFgoOc2hvd19lcF92YWx1ZXMYCyABKAgSEAoIbGFuZ3Vh",
            "Z2UYCSABKAkSHwoHZmFjdGlvbhgGIAEoDjIOLnByb3RvLkZhY3Rpb24SJwoH",
            "ZmlsdGVycxgKIAEoCzIWLnByb3RvLkRhdGFiYXNlRmlsdGVycyLXAwoVSW5k",
            "aXZpZHVhbFNpbVNldHRpbmdzEiQKCHNldHRpbmdzGAUgASgLMhIucHJvdG8u",
            "U2ltU2V0dGluZ3MSJAoKcmFpZF9idWZmcxgBIAEoCzIQLnByb3RvLlJhaWRC",
            "dWZmcxIfCgdkZWJ1ZmZzGAggASgLMg4ucHJvdG8uRGVidWZmcxIjCgV0YW5r",
            "cxgHIAMoCzIULnByb3RvLlVuaXRSZWZlcmVuY2USJgoLcGFydHlfYnVmZnMY",
            "AiABKAsyES5wcm90by5QYXJ0eUJ1ZmZzEh0KBnBsYXllchgDIAEoCzINLnBy",
            "b3RvLlBsYXllchIjCgllbmNvdW50ZXIYBCABKAsyEC5wcm90by5FbmNvdW50",
            "ZXISFgoOdGFyZ2V0X2R1bW1pZXMYCSABKAUSKgoQZXBfd2VpZ2h0c19zdGF0",
            "cxgKIAEoCzIQLnByb3RvLlVuaXRTdGF0cxIRCgllcF9yYXRpb3MYCyADKAES",
            "IQoMZHBzX3JlZl9zdGF0GAwgASgOMgsucHJvdG8uU3RhdBIiCg1oZWFsX3Jl",
            "Zl9zdGF0GA0gASgOMgsucHJvdG8uU3RhdBIiCg10YW5rX3JlZl9zdGF0GA4g",
            "ASgOMgsucHJvdG8uU3RhdCJfCgxTYXZlZEdlYXJTZXQSIgoEZ2VhchgBIAEo",
            "CzIULnByb3RvLkVxdWlwbWVudFNwZWMSKwoRYm9udXNfc3RhdHNfc3RhdHMY",
            "AyABKAsyEC5wcm90by5Vbml0U3RhdHMiswQKDVNhdmVkU2V0dGluZ3MSJAoK",
            "cmFpZF9idWZmcxgBIAEoCzIQLnByb3RvLlJhaWRCdWZmcxImCgtwYXJ0eV9i",
            "dWZmcxgCIAEoCzIRLnByb3RvLlBhcnR5QnVmZnMSHwoHZGVidWZmcxgHIAEo",
            "CzIOLnByb3RvLkRlYnVmZnMSLAoMcGxheWVyX2J1ZmZzGAMgASgLMhYucHJv",
            "dG8uSW5kaXZpZHVhbEJ1ZmZzEiEKCGNvbnN1bWVzGAQgASgLMg8ucHJvdG8u",
            "Q29uc3VtZXMSGQoEcmFjZRgFIAEoDjILLnByb3RvLlJhY2USJgoLcHJvZmVz",
            "c2lvbnMYCSADKA4yES5wcm90by5Qcm9mZXNzaW9uEhgKEGVuYWJsZV9pdGVt",
            "X3N3YXAYEiABKAgSIgoJaXRlbV9zd2FwGBEgASgLMg8ucHJvdG8uSXRlbVN3",
            "YXASGAoQcmVhY3Rpb25fdGltZV9tcxgKIAEoBRIdChVjaGFubmVsX2NsaXBf",
            "ZGVsYXlfbXMYDiABKAUSGgoSaW5fZnJvbnRfb2ZfdGFyZ2V0GAsgASgIEhwK",
            "FGRpc3RhbmNlX2Zyb21fdGFyZ2V0GAwgASgBEioKDWhlYWxpbmdfbW9kZWwY",
            "DSABKAsyEy5wcm90by5IZWFsaW5nTW9kZWwSHgoWbmliZWx1bmdfYXZlcmFn",
            "ZV9jYXN0cxgPIAEoARIiChpuaWJlbHVuZ19hdmVyYWdlX2Nhc3RzX3NldBgQ",
            "IAEoCCJFCgxTYXZlZFRhbGVudHMSFgoOdGFsZW50c19zdHJpbmcYASABKAkS",
            "HQoGZ2x5cGhzGAIgASgLMg0ucHJvdG8uR2x5cGhzIjUKDVNhdmVkUm90YXRp",
            "b24SJAoIcm90YXRpb24YASABKAsyEi5wcm90by5BUExSb3RhdGlvbiI6ChNC",
            "bGVzc2luZ3NBc3NpZ25tZW50EiMKCWJsZXNzaW5ncxgBIAMoDjIQLnByb3Rv",
            "LkJsZXNzaW5ncyJEChRCbGVzc2luZ3NBc3NpZ25tZW50cxIsCghwYWxhZGlu",
            "cxgBIAMoCzIaLnByb3RvLkJsZXNzaW5nc0Fzc2lnbm1lbnQiNQoOU2F2ZWRF",
            "bmNvdW50ZXISIwoJZW5jb3VudGVyGAEgASgLMhAucHJvdG8uRW5jb3VudGVy",
            "IoYBCglTYXZlZFJhaWQSGQoEcmFpZBgBIAEoCzILLnByb3RvLlJhaWQSLgoJ",
            "Ymxlc3NpbmdzGAMgASgLMhsucHJvdG8uQmxlc3NpbmdzQXNzaWdubWVudHMS",
            "HwoHZmFjdGlvbhgEIAEoDjIOLnByb3RvLkZhY3Rpb24SDQoFcGhhc2UYBSAB",
            "KAUipwEKD1JhaWRTaW1TZXR0aW5ncxIkCghzZXR0aW5ncxgFIAEoCzISLnBy",
            "b3RvLlNpbVNldHRpbmdzEhkKBHJhaWQYASABKAsyCy5wcm90by5SYWlkEi4K",
            "CWJsZXNzaW5ncxgDIAEoCzIbLnByb3RvLkJsZXNzaW5nc0Fzc2lnbm1lbnRz",
            "EiMKCWVuY291bnRlchgEIAEoCzIQLnByb3RvLkVuY291bnRlciJWCgZTaW1S",
            "dW4SJgoHcmVxdWVzdBgBIAEoCzIVLnByb3RvLlJhaWRTaW1SZXF1ZXN0EiQK",
            "BnJlc3VsdBgCIAEoCzIULnByb3RvLlJhaWRTaW1SZXN1bHQiTgoKU2ltUnVu",
            "RGF0YRIaCgNydW4YASABKAsyDS5wcm90by5TaW1SdW4SJAoNcmVmZXJlbmNl",
            "X3J1bhgCIAEoCzINLnByb3RvLlNpbVJ1biJuChVEZXRhaWxlZFJlc3VsdHNV",
            "cGRhdGUSJQoIcnVuX2RhdGEYASABKAsyES5wcm90by5TaW1SdW5EYXRhSAAS",
            "JgoIc2V0dGluZ3MYAiABKAsyEi5wcm90by5TaW1TZXR0aW5nc0gAQgYKBGRh",
            "dGEqXQoJRXhwYW5zaW9uEhQKEEV4cGFuc2lvblVua25vd24QABIUChBFeHBh",
            "bnNpb25WYW5pbGxhEAESEAoMRXhwYW5zaW9uVGJjEAISEgoORXhwYW5zaW9u",
            "V290bGsQAyrrAQoRRHVuZ2VvbkRpZmZpY3VsdHkSFQoRRGlmZmljdWx0eVVu",
            "a25vd24QABIUChBEaWZmaWN1bHR5Tm9ybWFsEAESFAoQRGlmZmljdWx0eUhl",
            "cm9pYxACEhwKGERpZmZpY3VsdHlUaXRhblJ1bmVBbHBoYRAHEhsKF0RpZmZp",
            "Y3VsdHlUaXRhblJ1bmVCZXRhEAgSFAoQRGlmZmljdWx0eVJhaWQxMBADEhUK",
            "EURpZmZpY3VsdHlSYWlkMTBIEAQSFAoQRGlmZmljdWx0eVJhaWQyNRAFEhUK",
            "EURpZmZpY3VsdHlSYWlkMjVIEAYq6QEKElNvdXJjZUZpbHRlck9wdGlvbhIR",
            "Cg1Tb3VyY2VVbmtub3duEAASEgoOU291cmNlQ3JhZnRpbmcQARIPCgtTb3Vy",
            "Y2VRdWVzdBACEhEKDVNvdXJjZUR1bmdlb24QAxISCg5Tb3VyY2VEdW5nZW9u",
            "SBAEEhQKEFNvdXJjZUR1bmdlb25UUkEQCRIUChBTb3VyY2VEdW5nZW9uVFJC",
            "EAoSEAoMU291cmNlUmFpZDEwEAUSEQoNU291cmNlUmFpZDEwSBAGEhAKDFNv",
            "dXJjZVJhaWQyNRAHEhEKDVNvdXJjZVJhaWQyNUgQCCqMAgoQUmFpZEZpbHRl",
            "ck9wdGlvbhIPCgtSYWlkVW5rbm93bhAAEg8KC1JhaWRWYW5pbGxhEAESCwoH",
            "UmFpZFRiYxACEhEKDVJhaWROYXh4cmFtYXMQAxIVChFSYWlkRXllT2ZFdGVy",
            "bml0eRAEEhcKE1JhaWRPYnNpZGlhblNhbmN0dW0QBRIXChNSYWlkVmF1bHRP",
            "ZkFyY2hhdm9uEAYSDgoKUmFpZFVsZHVhchAHEhoKFlJhaWRUcmlhbE9mVGhl",
            "Q3J1c2FkZXIQCBITCg9SYWlkT255eGlhc0xhaXIQCRIXChNSYWlkSWNlY3Jv",
            "d25DaXRhZGVsEAoSEwoPUmFpZFJ1YnlTYW5jdHVtEAtCHaoCGlNpcnVzRGJT",
            "Y3JhcHBlci5VSURhdGFiYXNlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SirusDbScrapper.UIDatabase.ApiReflection.Descriptor, global::SirusDbScrapper.UIDatabase.AplReflection.Descriptor, global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor, global::SirusDbScrapper.UIDatabase.PaladinReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SirusDbScrapper.UIDatabase.Expansion), typeof(global::SirusDbScrapper.UIDatabase.DungeonDifficulty), typeof(global::SirusDbScrapper.UIDatabase.SourceFilterOption), typeof(global::SirusDbScrapper.UIDatabase.RaidFilterOption), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.UIDatabase), global::SirusDbScrapper.UIDatabase.UIDatabase.Parser, new[]{ "Items", "Enchants", "Gems", "Encounters", "Zones", "Npcs", "ItemIcons", "SpellIcons", "GlyphIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.UIZone), global::SirusDbScrapper.UIDatabase.UIZone.Parser, new[]{ "Id", "Name", "Expansion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.UINPC), global::SirusDbScrapper.UIDatabase.UINPC.Parser, new[]{ "Id", "Name", "ZoneId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.UIItem), global::SirusDbScrapper.UIDatabase.UIItem.Parser, new[]{ "Id", "Name", "Icon", "Type", "ArmorType", "WeaponType", "HandType", "RangedWeaponType", "Stats", "GemSockets", "SocketBonus", "WeaponDamageMin", "WeaponDamageMax", "WeaponSpeed", "Ilvl", "Phase", "Quality", "Unique", "Heroic", "ClassAllowlist", "RequiredProfession", "SetName", "Expansion", "Sources", "FactionRestriction" }, null, new[]{ typeof(global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.UIItemSource), global::SirusDbScrapper.UIDatabase.UIItemSource.Parser, new[]{ "Crafted", "Drop", "Quest", "SoldBy" }, new[]{ "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.CraftedSource), global::SirusDbScrapper.UIDatabase.CraftedSource.Parser, new[]{ "Profession", "SpellId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.DropSource), global::SirusDbScrapper.UIDatabase.DropSource.Parser, new[]{ "Difficulty", "NpcId", "ZoneId", "OtherName", "Category" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.QuestSource), global::SirusDbScrapper.UIDatabase.QuestSource.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.SoldBySource), global::SirusDbScrapper.UIDatabase.SoldBySource.Parser, new[]{ "NpcId", "NpcName", "ZoneId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.UIEnchant), global::SirusDbScrapper.UIDatabase.UIEnchant.Parser, new[]{ "EffectId", "ItemId", "SpellId", "Name", "Icon", "Type", "ExtraTypes", "EnchantType", "Stats", "Quality", "Phase", "ClassAllowlist", "RequiredProfession" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.UIGem), global::SirusDbScrapper.UIDatabase.UIGem.Parser, new[]{ "Id", "Name", "Icon", "Color", "Stats", "Phase", "Quality", "Unique", "RequiredProfession" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.IconData), global::SirusDbScrapper.UIDatabase.IconData.Parser, new[]{ "Id", "Name", "Icon" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.GlyphID), global::SirusDbScrapper.UIDatabase.GlyphID.Parser, new[]{ "ItemId", "SpellId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.DatabaseFilters), global::SirusDbScrapper.UIDatabase.DatabaseFilters.Parser, new[]{ "ArmorTypes", "WeaponTypes", "RangedWeaponTypes", "Sources", "Raids", "FactionRestriction", "MinMhWeaponSpeed", "MaxMhWeaponSpeed", "MinOhWeaponSpeed", "MaxOhWeaponSpeed", "MinRangedWeaponSpeed", "MaxRangedWeaponSpeed", "OneHandedWeapons", "TwoHandedWeapons", "MatchingGemsOnly", "FavoriteItems", "FavoriteGems", "FavoriteEnchants" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.SimSettings), global::SirusDbScrapper.UIDatabase.SimSettings.Parser, new[]{ "Iterations", "Phase", "FixedRngSeed", "ShowDamageMetrics", "ShowThreatMetrics", "ShowHealingMetrics", "ShowExperimental", "ShowEpValues", "Language", "Faction", "Filters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.IndividualSimSettings), global::SirusDbScrapper.UIDatabase.IndividualSimSettings.Parser, new[]{ "Settings", "RaidBuffs", "Debuffs", "Tanks", "PartyBuffs", "Player", "Encounter", "TargetDummies", "EpWeightsStats", "EpRatios", "DpsRefStat", "HealRefStat", "TankRefStat" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.SavedGearSet), global::SirusDbScrapper.UIDatabase.SavedGearSet.Parser, new[]{ "Gear", "BonusStatsStats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.SavedSettings), global::SirusDbScrapper.UIDatabase.SavedSettings.Parser, new[]{ "RaidBuffs", "PartyBuffs", "Debuffs", "PlayerBuffs", "Consumes", "Race", "Professions", "EnableItemSwap", "ItemSwap", "ReactionTimeMs", "ChannelClipDelayMs", "InFrontOfTarget", "DistanceFromTarget", "HealingModel", "NibelungAverageCasts", "NibelungAverageCastsSet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.SavedTalents), global::SirusDbScrapper.UIDatabase.SavedTalents.Parser, new[]{ "TalentsString", "Glyphs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.SavedRotation), global::SirusDbScrapper.UIDatabase.SavedRotation.Parser, new[]{ "Rotation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.BlessingsAssignment), global::SirusDbScrapper.UIDatabase.BlessingsAssignment.Parser, new[]{ "Blessings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.BlessingsAssignments), global::SirusDbScrapper.UIDatabase.BlessingsAssignments.Parser, new[]{ "Paladins" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.SavedEncounter), global::SirusDbScrapper.UIDatabase.SavedEncounter.Parser, new[]{ "Encounter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.SavedRaid), global::SirusDbScrapper.UIDatabase.SavedRaid.Parser, new[]{ "Raid", "Blessings", "Faction", "Phase" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.RaidSimSettings), global::SirusDbScrapper.UIDatabase.RaidSimSettings.Parser, new[]{ "Settings", "Raid", "Blessings", "Encounter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.SimRun), global::SirusDbScrapper.UIDatabase.SimRun.Parser, new[]{ "Request", "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.SimRunData), global::SirusDbScrapper.UIDatabase.SimRunData.Parser, new[]{ "Run", "ReferenceRun" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.DetailedResultsUpdate), global::SirusDbScrapper.UIDatabase.DetailedResultsUpdate.Parser, new[]{ "RunData", "Settings" }, new[]{ "Data" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Expansion {
    [pbr::OriginalName("ExpansionUnknown")] Unknown = 0,
    [pbr::OriginalName("ExpansionVanilla")] Vanilla = 1,
    [pbr::OriginalName("ExpansionTbc")] Tbc = 2,
    [pbr::OriginalName("ExpansionWotlk")] Wotlk = 3,
  }

  public enum DungeonDifficulty {
    [pbr::OriginalName("DifficultyUnknown")] DifficultyUnknown = 0,
    [pbr::OriginalName("DifficultyNormal")] DifficultyNormal = 1,
    [pbr::OriginalName("DifficultyHeroic")] DifficultyHeroic = 2,
    [pbr::OriginalName("DifficultyTitanRuneAlpha")] DifficultyTitanRuneAlpha = 7,
    [pbr::OriginalName("DifficultyTitanRuneBeta")] DifficultyTitanRuneBeta = 8,
    [pbr::OriginalName("DifficultyRaid10")] DifficultyRaid10 = 3,
    [pbr::OriginalName("DifficultyRaid10H")] DifficultyRaid10H = 4,
    [pbr::OriginalName("DifficultyRaid25")] DifficultyRaid25 = 5,
    [pbr::OriginalName("DifficultyRaid25H")] DifficultyRaid25H = 6,
  }

  public enum SourceFilterOption {
    [pbr::OriginalName("SourceUnknown")] SourceUnknown = 0,
    [pbr::OriginalName("SourceCrafting")] SourceCrafting = 1,
    [pbr::OriginalName("SourceQuest")] SourceQuest = 2,
    [pbr::OriginalName("SourceDungeon")] SourceDungeon = 3,
    [pbr::OriginalName("SourceDungeonH")] SourceDungeonH = 4,
    [pbr::OriginalName("SourceDungeonTRA")] SourceDungeonTra = 9,
    [pbr::OriginalName("SourceDungeonTRB")] SourceDungeonTrb = 10,
    [pbr::OriginalName("SourceRaid10")] SourceRaid10 = 5,
    [pbr::OriginalName("SourceRaid10H")] SourceRaid10H = 6,
    [pbr::OriginalName("SourceRaid25")] SourceRaid25 = 7,
    [pbr::OriginalName("SourceRaid25H")] SourceRaid25H = 8,
  }

  public enum RaidFilterOption {
    [pbr::OriginalName("RaidUnknown")] RaidUnknown = 0,
    [pbr::OriginalName("RaidVanilla")] RaidVanilla = 1,
    [pbr::OriginalName("RaidTbc")] RaidTbc = 2,
    [pbr::OriginalName("RaidNaxxramas")] RaidNaxxramas = 3,
    [pbr::OriginalName("RaidEyeOfEternity")] RaidEyeOfEternity = 4,
    [pbr::OriginalName("RaidObsidianSanctum")] RaidObsidianSanctum = 5,
    [pbr::OriginalName("RaidVaultOfArchavon")] RaidVaultOfArchavon = 6,
    [pbr::OriginalName("RaidUlduar")] RaidUlduar = 7,
    [pbr::OriginalName("RaidTrialOfTheCrusader")] RaidTrialOfTheCrusader = 8,
    [pbr::OriginalName("RaidOnyxiasLair")] RaidOnyxiasLair = 9,
    [pbr::OriginalName("RaidIcecrownCitadel")] RaidIcecrownCitadel = 10,
    [pbr::OriginalName("RaidRubySanctum")] RaidRubySanctum = 11,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Holds all WoW data for the UI.
  /// </summary>
  public sealed partial class UIDatabase : pb::IMessage<UIDatabase>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UIDatabase> _parser = new pb::MessageParser<UIDatabase>(() => new UIDatabase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UIDatabase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIDatabase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIDatabase(UIDatabase other) : this() {
      items_ = other.items_.Clone();
      enchants_ = other.enchants_.Clone();
      gems_ = other.gems_.Clone();
      encounters_ = other.encounters_.Clone();
      zones_ = other.zones_.Clone();
      npcs_ = other.npcs_.Clone();
      itemIcons_ = other.itemIcons_.Clone();
      spellIcons_ = other.spellIcons_.Clone();
      glyphIds_ = other.glyphIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIDatabase Clone() {
      return new UIDatabase(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.UIItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::SirusDbScrapper.UIDatabase.UIItem.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UIItem> items_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UIItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UIItem> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "enchants" field.</summary>
    public const int EnchantsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.UIEnchant> _repeated_enchants_codec
        = pb::FieldCodec.ForMessage(18, global::SirusDbScrapper.UIDatabase.UIEnchant.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UIEnchant> enchants_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UIEnchant>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UIEnchant> Enchants {
      get { return enchants_; }
    }

    /// <summary>Field number for the "gems" field.</summary>
    public const int GemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.UIGem> _repeated_gems_codec
        = pb::FieldCodec.ForMessage(26, global::SirusDbScrapper.UIDatabase.UIGem.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UIGem> gems_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UIGem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UIGem> Gems {
      get { return gems_; }
    }

    /// <summary>Field number for the "encounters" field.</summary>
    public const int EncountersFieldNumber = 6;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.PresetEncounter> _repeated_encounters_codec
        = pb::FieldCodec.ForMessage(50, global::SirusDbScrapper.UIDatabase.PresetEncounter.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.PresetEncounter> encounters_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.PresetEncounter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.PresetEncounter> Encounters {
      get { return encounters_; }
    }

    /// <summary>Field number for the "zones" field.</summary>
    public const int ZonesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.UIZone> _repeated_zones_codec
        = pb::FieldCodec.ForMessage(66, global::SirusDbScrapper.UIDatabase.UIZone.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UIZone> zones_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UIZone>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UIZone> Zones {
      get { return zones_; }
    }

    /// <summary>Field number for the "npcs" field.</summary>
    public const int NpcsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.UINPC> _repeated_npcs_codec
        = pb::FieldCodec.ForMessage(74, global::SirusDbScrapper.UIDatabase.UINPC.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UINPC> npcs_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UINPC>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UINPC> Npcs {
      get { return npcs_; }
    }

    /// <summary>Field number for the "item_icons" field.</summary>
    public const int ItemIconsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.IconData> _repeated_itemIcons_codec
        = pb::FieldCodec.ForMessage(34, global::SirusDbScrapper.UIDatabase.IconData.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.IconData> itemIcons_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.IconData>();
    /// <summary>
    /// Entities for which we just need a name/icon.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.IconData> ItemIcons {
      get { return itemIcons_; }
    }

    /// <summary>Field number for the "spell_icons" field.</summary>
    public const int SpellIconsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.IconData> _repeated_spellIcons_codec
        = pb::FieldCodec.ForMessage(42, global::SirusDbScrapper.UIDatabase.IconData.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.IconData> spellIcons_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.IconData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.IconData> SpellIcons {
      get { return spellIcons_; }
    }

    /// <summary>Field number for the "glyph_ids" field.</summary>
    public const int GlyphIdsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.GlyphID> _repeated_glyphIds_codec
        = pb::FieldCodec.ForMessage(58, global::SirusDbScrapper.UIDatabase.GlyphID.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.GlyphID> glyphIds_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.GlyphID>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.GlyphID> GlyphIds {
      get { return glyphIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UIDatabase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UIDatabase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      if(!enchants_.Equals(other.enchants_)) return false;
      if(!gems_.Equals(other.gems_)) return false;
      if(!encounters_.Equals(other.encounters_)) return false;
      if(!zones_.Equals(other.zones_)) return false;
      if(!npcs_.Equals(other.npcs_)) return false;
      if(!itemIcons_.Equals(other.itemIcons_)) return false;
      if(!spellIcons_.Equals(other.spellIcons_)) return false;
      if(!glyphIds_.Equals(other.glyphIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      hash ^= enchants_.GetHashCode();
      hash ^= gems_.GetHashCode();
      hash ^= encounters_.GetHashCode();
      hash ^= zones_.GetHashCode();
      hash ^= npcs_.GetHashCode();
      hash ^= itemIcons_.GetHashCode();
      hash ^= spellIcons_.GetHashCode();
      hash ^= glyphIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      enchants_.WriteTo(output, _repeated_enchants_codec);
      gems_.WriteTo(output, _repeated_gems_codec);
      itemIcons_.WriteTo(output, _repeated_itemIcons_codec);
      spellIcons_.WriteTo(output, _repeated_spellIcons_codec);
      encounters_.WriteTo(output, _repeated_encounters_codec);
      glyphIds_.WriteTo(output, _repeated_glyphIds_codec);
      zones_.WriteTo(output, _repeated_zones_codec);
      npcs_.WriteTo(output, _repeated_npcs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      enchants_.WriteTo(ref output, _repeated_enchants_codec);
      gems_.WriteTo(ref output, _repeated_gems_codec);
      itemIcons_.WriteTo(ref output, _repeated_itemIcons_codec);
      spellIcons_.WriteTo(ref output, _repeated_spellIcons_codec);
      encounters_.WriteTo(ref output, _repeated_encounters_codec);
      glyphIds_.WriteTo(ref output, _repeated_glyphIds_codec);
      zones_.WriteTo(ref output, _repeated_zones_codec);
      npcs_.WriteTo(ref output, _repeated_npcs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      size += enchants_.CalculateSize(_repeated_enchants_codec);
      size += gems_.CalculateSize(_repeated_gems_codec);
      size += encounters_.CalculateSize(_repeated_encounters_codec);
      size += zones_.CalculateSize(_repeated_zones_codec);
      size += npcs_.CalculateSize(_repeated_npcs_codec);
      size += itemIcons_.CalculateSize(_repeated_itemIcons_codec);
      size += spellIcons_.CalculateSize(_repeated_spellIcons_codec);
      size += glyphIds_.CalculateSize(_repeated_glyphIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UIDatabase other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      enchants_.Add(other.enchants_);
      gems_.Add(other.gems_);
      encounters_.Add(other.encounters_);
      zones_.Add(other.zones_);
      npcs_.Add(other.npcs_);
      itemIcons_.Add(other.itemIcons_);
      spellIcons_.Add(other.spellIcons_);
      glyphIds_.Add(other.glyphIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 18: {
            enchants_.AddEntriesFrom(input, _repeated_enchants_codec);
            break;
          }
          case 26: {
            gems_.AddEntriesFrom(input, _repeated_gems_codec);
            break;
          }
          case 34: {
            itemIcons_.AddEntriesFrom(input, _repeated_itemIcons_codec);
            break;
          }
          case 42: {
            spellIcons_.AddEntriesFrom(input, _repeated_spellIcons_codec);
            break;
          }
          case 50: {
            encounters_.AddEntriesFrom(input, _repeated_encounters_codec);
            break;
          }
          case 58: {
            glyphIds_.AddEntriesFrom(input, _repeated_glyphIds_codec);
            break;
          }
          case 66: {
            zones_.AddEntriesFrom(input, _repeated_zones_codec);
            break;
          }
          case 74: {
            npcs_.AddEntriesFrom(input, _repeated_npcs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
          case 18: {
            enchants_.AddEntriesFrom(ref input, _repeated_enchants_codec);
            break;
          }
          case 26: {
            gems_.AddEntriesFrom(ref input, _repeated_gems_codec);
            break;
          }
          case 34: {
            itemIcons_.AddEntriesFrom(ref input, _repeated_itemIcons_codec);
            break;
          }
          case 42: {
            spellIcons_.AddEntriesFrom(ref input, _repeated_spellIcons_codec);
            break;
          }
          case 50: {
            encounters_.AddEntriesFrom(ref input, _repeated_encounters_codec);
            break;
          }
          case 58: {
            glyphIds_.AddEntriesFrom(ref input, _repeated_glyphIds_codec);
            break;
          }
          case 66: {
            zones_.AddEntriesFrom(ref input, _repeated_zones_codec);
            break;
          }
          case 74: {
            npcs_.AddEntriesFrom(ref input, _repeated_npcs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UIZone : pb::IMessage<UIZone>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UIZone> _parser = new pb::MessageParser<UIZone>(() => new UIZone());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UIZone> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIZone() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIZone(UIZone other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      expansion_ = other.expansion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIZone Clone() {
      return new UIZone(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expansion" field.</summary>
    public const int ExpansionFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.Expansion expansion_ = global::SirusDbScrapper.UIDatabase.Expansion.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Expansion Expansion {
      get { return expansion_; }
      set {
        expansion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UIZone);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UIZone other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Expansion != other.Expansion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Expansion != global::SirusDbScrapper.UIDatabase.Expansion.Unknown) hash ^= Expansion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Expansion != global::SirusDbScrapper.UIDatabase.Expansion.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Expansion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Expansion != global::SirusDbScrapper.UIDatabase.Expansion.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Expansion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Expansion != global::SirusDbScrapper.UIDatabase.Expansion.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Expansion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UIZone other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Expansion != global::SirusDbScrapper.UIDatabase.Expansion.Unknown) {
        Expansion = other.Expansion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Expansion = (global::SirusDbScrapper.UIDatabase.Expansion) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Expansion = (global::SirusDbScrapper.UIDatabase.Expansion) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UINPC : pb::IMessage<UINPC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UINPC> _parser = new pb::MessageParser<UINPC>(() => new UINPC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UINPC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UINPC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UINPC(UINPC other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      zoneId_ = other.zoneId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UINPC Clone() {
      return new UINPC(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone_id" field.</summary>
    public const int ZoneIdFieldNumber = 3;
    private int zoneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UINPC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UINPC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (ZoneId != other.ZoneId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ZoneId != 0) hash ^= ZoneId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ZoneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ZoneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ZoneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UINPC other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ZoneId != 0) {
        ZoneId = other.ZoneId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            ZoneId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            ZoneId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains all information about an Item needed by the UI.
  /// Generally this will include everything needed by the sim, plus some
  /// additional data for displaying / filtering.
  /// Next tag: 26.
  /// </summary>
  public sealed partial class UIItem : pb::IMessage<UIItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UIItem> _parser = new pb::MessageParser<UIItem>(() => new UIItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UIItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIItem(UIItem other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      icon_ = other.icon_;
      type_ = other.type_;
      armorType_ = other.armorType_;
      weaponType_ = other.weaponType_;
      handType_ = other.handType_;
      rangedWeaponType_ = other.rangedWeaponType_;
      stats_ = other.stats_.Clone();
      gemSockets_ = other.gemSockets_.Clone();
      socketBonus_ = other.socketBonus_.Clone();
      weaponDamageMin_ = other.weaponDamageMin_;
      weaponDamageMax_ = other.weaponDamageMax_;
      weaponSpeed_ = other.weaponSpeed_;
      ilvl_ = other.ilvl_;
      phase_ = other.phase_;
      quality_ = other.quality_;
      unique_ = other.unique_;
      heroic_ = other.heroic_;
      classAllowlist_ = other.classAllowlist_.Clone();
      requiredProfession_ = other.requiredProfession_;
      setName_ = other.setName_;
      expansion_ = other.expansion_;
      sources_ = other.sources_.Clone();
      factionRestriction_ = other.factionRestriction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIItem Clone() {
      return new UIItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 3;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::SirusDbScrapper.UIDatabase.ItemType type_ = global::SirusDbScrapper.UIDatabase.ItemType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.ItemType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "armor_type" field.</summary>
    public const int ArmorTypeFieldNumber = 5;
    private global::SirusDbScrapper.UIDatabase.ArmorType armorType_ = global::SirusDbScrapper.UIDatabase.ArmorType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.ArmorType ArmorType {
      get { return armorType_; }
      set {
        armorType_ = value;
      }
    }

    /// <summary>Field number for the "weapon_type" field.</summary>
    public const int WeaponTypeFieldNumber = 6;
    private global::SirusDbScrapper.UIDatabase.WeaponType weaponType_ = global::SirusDbScrapper.UIDatabase.WeaponType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.WeaponType WeaponType {
      get { return weaponType_; }
      set {
        weaponType_ = value;
      }
    }

    /// <summary>Field number for the "hand_type" field.</summary>
    public const int HandTypeFieldNumber = 7;
    private global::SirusDbScrapper.UIDatabase.HandType handType_ = global::SirusDbScrapper.UIDatabase.HandType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.HandType HandType {
      get { return handType_; }
      set {
        handType_ = value;
      }
    }

    /// <summary>Field number for the "ranged_weapon_type" field.</summary>
    public const int RangedWeaponTypeFieldNumber = 8;
    private global::SirusDbScrapper.UIDatabase.RangedWeaponType rangedWeaponType_ = global::SirusDbScrapper.UIDatabase.RangedWeaponType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.RangedWeaponType RangedWeaponType {
      get { return rangedWeaponType_; }
      set {
        rangedWeaponType_ = value;
      }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 9;
    private static readonly pb::FieldCodec<double> _repeated_stats_codec
        = pb::FieldCodec.ForDouble(74);
    private readonly pbc::RepeatedField<double> stats_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Stats {
      get { return stats_; }
    }

    /// <summary>Field number for the "gem_sockets" field.</summary>
    public const int GemSocketsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.GemColor> _repeated_gemSockets_codec
        = pb::FieldCodec.ForEnum(82, x => (int) x, x => (global::SirusDbScrapper.UIDatabase.GemColor) x);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.GemColor> gemSockets_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.GemColor>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.GemColor> GemSockets {
      get { return gemSockets_; }
    }

    /// <summary>Field number for the "socketBonus" field.</summary>
    public const int SocketBonusFieldNumber = 11;
    private static readonly pb::FieldCodec<double> _repeated_socketBonus_codec
        = pb::FieldCodec.ForDouble(90);
    private readonly pbc::RepeatedField<double> socketBonus_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> SocketBonus {
      get { return socketBonus_; }
    }

    /// <summary>Field number for the "weapon_damage_min" field.</summary>
    public const int WeaponDamageMinFieldNumber = 12;
    private double weaponDamageMin_;
    /// <summary>
    /// Weapon stats, needed for computing proper EP for melee weapons
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double WeaponDamageMin {
      get { return weaponDamageMin_; }
      set {
        weaponDamageMin_ = value;
      }
    }

    /// <summary>Field number for the "weapon_damage_max" field.</summary>
    public const int WeaponDamageMaxFieldNumber = 13;
    private double weaponDamageMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double WeaponDamageMax {
      get { return weaponDamageMax_; }
      set {
        weaponDamageMax_ = value;
      }
    }

    /// <summary>Field number for the "weapon_speed" field.</summary>
    public const int WeaponSpeedFieldNumber = 14;
    private double weaponSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double WeaponSpeed {
      get { return weaponSpeed_; }
      set {
        weaponSpeed_ = value;
      }
    }

    /// <summary>Field number for the "ilvl" field.</summary>
    public const int IlvlFieldNumber = 15;
    private int ilvl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ilvl {
      get { return ilvl_; }
      set {
        ilvl_ = value;
      }
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 16;
    private int phase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Phase {
      get { return phase_; }
      set {
        phase_ = value;
      }
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 17;
    private global::SirusDbScrapper.UIDatabase.ItemQuality quality_ = global::SirusDbScrapper.UIDatabase.ItemQuality.Junk;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.ItemQuality Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "unique" field.</summary>
    public const int UniqueFieldNumber = 18;
    private bool unique_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Unique {
      get { return unique_; }
      set {
        unique_ = value;
      }
    }

    /// <summary>Field number for the "heroic" field.</summary>
    public const int HeroicFieldNumber = 19;
    private bool heroic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Heroic {
      get { return heroic_; }
      set {
        heroic_ = value;
      }
    }

    /// <summary>Field number for the "class_allowlist" field.</summary>
    public const int ClassAllowlistFieldNumber = 20;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.Class> _repeated_classAllowlist_codec
        = pb::FieldCodec.ForEnum(162, x => (int) x, x => (global::SirusDbScrapper.UIDatabase.Class) x);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Class> classAllowlist_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Class>();
    /// <summary>
    /// Classes that are allowed to use the item. Empty indicates no special class restrictions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Class> ClassAllowlist {
      get { return classAllowlist_; }
    }

    /// <summary>Field number for the "required_profession" field.</summary>
    public const int RequiredProfessionFieldNumber = 21;
    private global::SirusDbScrapper.UIDatabase.Profession requiredProfession_ = global::SirusDbScrapper.UIDatabase.Profession.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Profession RequiredProfession {
      get { return requiredProfession_; }
      set {
        requiredProfession_ = value;
      }
    }

    /// <summary>Field number for the "set_name" field.</summary>
    public const int SetNameFieldNumber = 22;
    private string setName_ = "";
    /// <summary>
    /// Name of the item set to which this item belongs, if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SetName {
      get { return setName_; }
      set {
        setName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expansion" field.</summary>
    public const int ExpansionFieldNumber = 24;
    private global::SirusDbScrapper.UIDatabase.Expansion expansion_ = global::SirusDbScrapper.UIDatabase.Expansion.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Expansion Expansion {
      get { return expansion_; }
      set {
        expansion_ = value;
      }
    }

    /// <summary>Field number for the "sources" field.</summary>
    public const int SourcesFieldNumber = 23;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.UIItemSource> _repeated_sources_codec
        = pb::FieldCodec.ForMessage(186, global::SirusDbScrapper.UIDatabase.UIItemSource.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UIItemSource> sources_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UIItemSource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UIItemSource> Sources {
      get { return sources_; }
    }

    /// <summary>Field number for the "faction_restriction" field.</summary>
    public const int FactionRestrictionFieldNumber = 25;
    private global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction factionRestriction_ = global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction FactionRestriction {
      get { return factionRestriction_; }
      set {
        factionRestriction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UIItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UIItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Icon != other.Icon) return false;
      if (Type != other.Type) return false;
      if (ArmorType != other.ArmorType) return false;
      if (WeaponType != other.WeaponType) return false;
      if (HandType != other.HandType) return false;
      if (RangedWeaponType != other.RangedWeaponType) return false;
      if(!stats_.Equals(other.stats_)) return false;
      if(!gemSockets_.Equals(other.gemSockets_)) return false;
      if(!socketBonus_.Equals(other.socketBonus_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(WeaponDamageMin, other.WeaponDamageMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(WeaponDamageMax, other.WeaponDamageMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(WeaponSpeed, other.WeaponSpeed)) return false;
      if (Ilvl != other.Ilvl) return false;
      if (Phase != other.Phase) return false;
      if (Quality != other.Quality) return false;
      if (Unique != other.Unique) return false;
      if (Heroic != other.Heroic) return false;
      if(!classAllowlist_.Equals(other.classAllowlist_)) return false;
      if (RequiredProfession != other.RequiredProfession) return false;
      if (SetName != other.SetName) return false;
      if (Expansion != other.Expansion) return false;
      if(!sources_.Equals(other.sources_)) return false;
      if (FactionRestriction != other.FactionRestriction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Type != global::SirusDbScrapper.UIDatabase.ItemType.Unknown) hash ^= Type.GetHashCode();
      if (ArmorType != global::SirusDbScrapper.UIDatabase.ArmorType.Unknown) hash ^= ArmorType.GetHashCode();
      if (WeaponType != global::SirusDbScrapper.UIDatabase.WeaponType.Unknown) hash ^= WeaponType.GetHashCode();
      if (HandType != global::SirusDbScrapper.UIDatabase.HandType.Unknown) hash ^= HandType.GetHashCode();
      if (RangedWeaponType != global::SirusDbScrapper.UIDatabase.RangedWeaponType.Unknown) hash ^= RangedWeaponType.GetHashCode();
      hash ^= stats_.GetHashCode();
      hash ^= gemSockets_.GetHashCode();
      hash ^= socketBonus_.GetHashCode();
      if (WeaponDamageMin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(WeaponDamageMin);
      if (WeaponDamageMax != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(WeaponDamageMax);
      if (WeaponSpeed != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(WeaponSpeed);
      if (Ilvl != 0) hash ^= Ilvl.GetHashCode();
      if (Phase != 0) hash ^= Phase.GetHashCode();
      if (Quality != global::SirusDbScrapper.UIDatabase.ItemQuality.Junk) hash ^= Quality.GetHashCode();
      if (Unique != false) hash ^= Unique.GetHashCode();
      if (Heroic != false) hash ^= Heroic.GetHashCode();
      hash ^= classAllowlist_.GetHashCode();
      if (RequiredProfession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) hash ^= RequiredProfession.GetHashCode();
      if (SetName.Length != 0) hash ^= SetName.GetHashCode();
      if (Expansion != global::SirusDbScrapper.UIDatabase.Expansion.Unknown) hash ^= Expansion.GetHashCode();
      hash ^= sources_.GetHashCode();
      if (FactionRestriction != global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction.Unspecified) hash ^= FactionRestriction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (Type != global::SirusDbScrapper.UIDatabase.ItemType.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (ArmorType != global::SirusDbScrapper.UIDatabase.ArmorType.Unknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ArmorType);
      }
      if (WeaponType != global::SirusDbScrapper.UIDatabase.WeaponType.Unknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) WeaponType);
      }
      if (HandType != global::SirusDbScrapper.UIDatabase.HandType.Unknown) {
        output.WriteRawTag(56);
        output.WriteEnum((int) HandType);
      }
      if (RangedWeaponType != global::SirusDbScrapper.UIDatabase.RangedWeaponType.Unknown) {
        output.WriteRawTag(64);
        output.WriteEnum((int) RangedWeaponType);
      }
      stats_.WriteTo(output, _repeated_stats_codec);
      gemSockets_.WriteTo(output, _repeated_gemSockets_codec);
      socketBonus_.WriteTo(output, _repeated_socketBonus_codec);
      if (WeaponDamageMin != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(WeaponDamageMin);
      }
      if (WeaponDamageMax != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(WeaponDamageMax);
      }
      if (WeaponSpeed != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(WeaponSpeed);
      }
      if (Ilvl != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Ilvl);
      }
      if (Phase != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Phase);
      }
      if (Quality != global::SirusDbScrapper.UIDatabase.ItemQuality.Junk) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) Quality);
      }
      if (Unique != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(Unique);
      }
      if (Heroic != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(Heroic);
      }
      classAllowlist_.WriteTo(output, _repeated_classAllowlist_codec);
      if (RequiredProfession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) RequiredProfession);
      }
      if (SetName.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(SetName);
      }
      sources_.WriteTo(output, _repeated_sources_codec);
      if (Expansion != global::SirusDbScrapper.UIDatabase.Expansion.Unknown) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) Expansion);
      }
      if (FactionRestriction != global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction.Unspecified) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) FactionRestriction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (Type != global::SirusDbScrapper.UIDatabase.ItemType.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (ArmorType != global::SirusDbScrapper.UIDatabase.ArmorType.Unknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ArmorType);
      }
      if (WeaponType != global::SirusDbScrapper.UIDatabase.WeaponType.Unknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) WeaponType);
      }
      if (HandType != global::SirusDbScrapper.UIDatabase.HandType.Unknown) {
        output.WriteRawTag(56);
        output.WriteEnum((int) HandType);
      }
      if (RangedWeaponType != global::SirusDbScrapper.UIDatabase.RangedWeaponType.Unknown) {
        output.WriteRawTag(64);
        output.WriteEnum((int) RangedWeaponType);
      }
      stats_.WriteTo(ref output, _repeated_stats_codec);
      gemSockets_.WriteTo(ref output, _repeated_gemSockets_codec);
      socketBonus_.WriteTo(ref output, _repeated_socketBonus_codec);
      if (WeaponDamageMin != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(WeaponDamageMin);
      }
      if (WeaponDamageMax != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(WeaponDamageMax);
      }
      if (WeaponSpeed != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(WeaponSpeed);
      }
      if (Ilvl != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Ilvl);
      }
      if (Phase != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Phase);
      }
      if (Quality != global::SirusDbScrapper.UIDatabase.ItemQuality.Junk) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) Quality);
      }
      if (Unique != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(Unique);
      }
      if (Heroic != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(Heroic);
      }
      classAllowlist_.WriteTo(ref output, _repeated_classAllowlist_codec);
      if (RequiredProfession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) RequiredProfession);
      }
      if (SetName.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(SetName);
      }
      sources_.WriteTo(ref output, _repeated_sources_codec);
      if (Expansion != global::SirusDbScrapper.UIDatabase.Expansion.Unknown) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) Expansion);
      }
      if (FactionRestriction != global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction.Unspecified) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) FactionRestriction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Type != global::SirusDbScrapper.UIDatabase.ItemType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (ArmorType != global::SirusDbScrapper.UIDatabase.ArmorType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ArmorType);
      }
      if (WeaponType != global::SirusDbScrapper.UIDatabase.WeaponType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WeaponType);
      }
      if (HandType != global::SirusDbScrapper.UIDatabase.HandType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HandType);
      }
      if (RangedWeaponType != global::SirusDbScrapper.UIDatabase.RangedWeaponType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RangedWeaponType);
      }
      size += stats_.CalculateSize(_repeated_stats_codec);
      size += gemSockets_.CalculateSize(_repeated_gemSockets_codec);
      size += socketBonus_.CalculateSize(_repeated_socketBonus_codec);
      if (WeaponDamageMin != 0D) {
        size += 1 + 8;
      }
      if (WeaponDamageMax != 0D) {
        size += 1 + 8;
      }
      if (WeaponSpeed != 0D) {
        size += 1 + 8;
      }
      if (Ilvl != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ilvl);
      }
      if (Phase != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Phase);
      }
      if (Quality != global::SirusDbScrapper.UIDatabase.ItemQuality.Junk) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Quality);
      }
      if (Unique != false) {
        size += 2 + 1;
      }
      if (Heroic != false) {
        size += 2 + 1;
      }
      size += classAllowlist_.CalculateSize(_repeated_classAllowlist_codec);
      if (RequiredProfession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RequiredProfession);
      }
      if (SetName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SetName);
      }
      if (Expansion != global::SirusDbScrapper.UIDatabase.Expansion.Unknown) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Expansion);
      }
      size += sources_.CalculateSize(_repeated_sources_codec);
      if (FactionRestriction != global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FactionRestriction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UIItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Type != global::SirusDbScrapper.UIDatabase.ItemType.Unknown) {
        Type = other.Type;
      }
      if (other.ArmorType != global::SirusDbScrapper.UIDatabase.ArmorType.Unknown) {
        ArmorType = other.ArmorType;
      }
      if (other.WeaponType != global::SirusDbScrapper.UIDatabase.WeaponType.Unknown) {
        WeaponType = other.WeaponType;
      }
      if (other.HandType != global::SirusDbScrapper.UIDatabase.HandType.Unknown) {
        HandType = other.HandType;
      }
      if (other.RangedWeaponType != global::SirusDbScrapper.UIDatabase.RangedWeaponType.Unknown) {
        RangedWeaponType = other.RangedWeaponType;
      }
      stats_.Add(other.stats_);
      gemSockets_.Add(other.gemSockets_);
      socketBonus_.Add(other.socketBonus_);
      if (other.WeaponDamageMin != 0D) {
        WeaponDamageMin = other.WeaponDamageMin;
      }
      if (other.WeaponDamageMax != 0D) {
        WeaponDamageMax = other.WeaponDamageMax;
      }
      if (other.WeaponSpeed != 0D) {
        WeaponSpeed = other.WeaponSpeed;
      }
      if (other.Ilvl != 0) {
        Ilvl = other.Ilvl;
      }
      if (other.Phase != 0) {
        Phase = other.Phase;
      }
      if (other.Quality != global::SirusDbScrapper.UIDatabase.ItemQuality.Junk) {
        Quality = other.Quality;
      }
      if (other.Unique != false) {
        Unique = other.Unique;
      }
      if (other.Heroic != false) {
        Heroic = other.Heroic;
      }
      classAllowlist_.Add(other.classAllowlist_);
      if (other.RequiredProfession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) {
        RequiredProfession = other.RequiredProfession;
      }
      if (other.SetName.Length != 0) {
        SetName = other.SetName;
      }
      if (other.Expansion != global::SirusDbScrapper.UIDatabase.Expansion.Unknown) {
        Expansion = other.Expansion;
      }
      sources_.Add(other.sources_);
      if (other.FactionRestriction != global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction.Unspecified) {
        FactionRestriction = other.FactionRestriction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
          case 32: {
            Type = (global::SirusDbScrapper.UIDatabase.ItemType) input.ReadEnum();
            break;
          }
          case 40: {
            ArmorType = (global::SirusDbScrapper.UIDatabase.ArmorType) input.ReadEnum();
            break;
          }
          case 48: {
            WeaponType = (global::SirusDbScrapper.UIDatabase.WeaponType) input.ReadEnum();
            break;
          }
          case 56: {
            HandType = (global::SirusDbScrapper.UIDatabase.HandType) input.ReadEnum();
            break;
          }
          case 64: {
            RangedWeaponType = (global::SirusDbScrapper.UIDatabase.RangedWeaponType) input.ReadEnum();
            break;
          }
          case 74:
          case 73: {
            stats_.AddEntriesFrom(input, _repeated_stats_codec);
            break;
          }
          case 82:
          case 80: {
            gemSockets_.AddEntriesFrom(input, _repeated_gemSockets_codec);
            break;
          }
          case 90:
          case 89: {
            socketBonus_.AddEntriesFrom(input, _repeated_socketBonus_codec);
            break;
          }
          case 97: {
            WeaponDamageMin = input.ReadDouble();
            break;
          }
          case 105: {
            WeaponDamageMax = input.ReadDouble();
            break;
          }
          case 113: {
            WeaponSpeed = input.ReadDouble();
            break;
          }
          case 120: {
            Ilvl = input.ReadInt32();
            break;
          }
          case 128: {
            Phase = input.ReadInt32();
            break;
          }
          case 136: {
            Quality = (global::SirusDbScrapper.UIDatabase.ItemQuality) input.ReadEnum();
            break;
          }
          case 144: {
            Unique = input.ReadBool();
            break;
          }
          case 152: {
            Heroic = input.ReadBool();
            break;
          }
          case 162:
          case 160: {
            classAllowlist_.AddEntriesFrom(input, _repeated_classAllowlist_codec);
            break;
          }
          case 168: {
            RequiredProfession = (global::SirusDbScrapper.UIDatabase.Profession) input.ReadEnum();
            break;
          }
          case 178: {
            SetName = input.ReadString();
            break;
          }
          case 186: {
            sources_.AddEntriesFrom(input, _repeated_sources_codec);
            break;
          }
          case 192: {
            Expansion = (global::SirusDbScrapper.UIDatabase.Expansion) input.ReadEnum();
            break;
          }
          case 200: {
            FactionRestriction = (global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
          case 32: {
            Type = (global::SirusDbScrapper.UIDatabase.ItemType) input.ReadEnum();
            break;
          }
          case 40: {
            ArmorType = (global::SirusDbScrapper.UIDatabase.ArmorType) input.ReadEnum();
            break;
          }
          case 48: {
            WeaponType = (global::SirusDbScrapper.UIDatabase.WeaponType) input.ReadEnum();
            break;
          }
          case 56: {
            HandType = (global::SirusDbScrapper.UIDatabase.HandType) input.ReadEnum();
            break;
          }
          case 64: {
            RangedWeaponType = (global::SirusDbScrapper.UIDatabase.RangedWeaponType) input.ReadEnum();
            break;
          }
          case 74:
          case 73: {
            stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
            break;
          }
          case 82:
          case 80: {
            gemSockets_.AddEntriesFrom(ref input, _repeated_gemSockets_codec);
            break;
          }
          case 90:
          case 89: {
            socketBonus_.AddEntriesFrom(ref input, _repeated_socketBonus_codec);
            break;
          }
          case 97: {
            WeaponDamageMin = input.ReadDouble();
            break;
          }
          case 105: {
            WeaponDamageMax = input.ReadDouble();
            break;
          }
          case 113: {
            WeaponSpeed = input.ReadDouble();
            break;
          }
          case 120: {
            Ilvl = input.ReadInt32();
            break;
          }
          case 128: {
            Phase = input.ReadInt32();
            break;
          }
          case 136: {
            Quality = (global::SirusDbScrapper.UIDatabase.ItemQuality) input.ReadEnum();
            break;
          }
          case 144: {
            Unique = input.ReadBool();
            break;
          }
          case 152: {
            Heroic = input.ReadBool();
            break;
          }
          case 162:
          case 160: {
            classAllowlist_.AddEntriesFrom(ref input, _repeated_classAllowlist_codec);
            break;
          }
          case 168: {
            RequiredProfession = (global::SirusDbScrapper.UIDatabase.Profession) input.ReadEnum();
            break;
          }
          case 178: {
            SetName = input.ReadString();
            break;
          }
          case 186: {
            sources_.AddEntriesFrom(ref input, _repeated_sources_codec);
            break;
          }
          case 192: {
            Expansion = (global::SirusDbScrapper.UIDatabase.Expansion) input.ReadEnum();
            break;
          }
          case 200: {
            FactionRestriction = (global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UIItem message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum FactionRestriction {
        [pbr::OriginalName("FACTION_RESTRICTION_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("FACTION_RESTRICTION_ALLIANCE_ONLY")] AllianceOnly = 1,
        [pbr::OriginalName("FACTION_RESTRICTION_HORDE_ONLY")] HordeOnly = 2,
      }

    }
    #endregion

  }

  public sealed partial class UIItemSource : pb::IMessage<UIItemSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UIItemSource> _parser = new pb::MessageParser<UIItemSource>(() => new UIItemSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UIItemSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIItemSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIItemSource(UIItemSource other) : this() {
      switch (other.SourceCase) {
        case SourceOneofCase.Crafted:
          Crafted = other.Crafted.Clone();
          break;
        case SourceOneofCase.Drop:
          Drop = other.Drop.Clone();
          break;
        case SourceOneofCase.Quest:
          Quest = other.Quest.Clone();
          break;
        case SourceOneofCase.SoldBy:
          SoldBy = other.SoldBy.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIItemSource Clone() {
      return new UIItemSource(this);
    }

    /// <summary>Field number for the "crafted" field.</summary>
    public const int CraftedFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.CraftedSource Crafted {
      get { return sourceCase_ == SourceOneofCase.Crafted ? (global::SirusDbScrapper.UIDatabase.CraftedSource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.Crafted;
      }
    }

    /// <summary>Field number for the "drop" field.</summary>
    public const int DropFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.DropSource Drop {
      get { return sourceCase_ == SourceOneofCase.Drop ? (global::SirusDbScrapper.UIDatabase.DropSource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.Drop;
      }
    }

    /// <summary>Field number for the "quest" field.</summary>
    public const int QuestFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.QuestSource Quest {
      get { return sourceCase_ == SourceOneofCase.Quest ? (global::SirusDbScrapper.UIDatabase.QuestSource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.Quest;
      }
    }

    /// <summary>Field number for the "sold_by" field.</summary>
    public const int SoldByFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.SoldBySource SoldBy {
      get { return sourceCase_ == SourceOneofCase.SoldBy ? (global::SirusDbScrapper.UIDatabase.SoldBySource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.SoldBy;
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      Crafted = 1,
      Drop = 2,
      Quest = 3,
      SoldBy = 4,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UIItemSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UIItemSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Crafted, other.Crafted)) return false;
      if (!object.Equals(Drop, other.Drop)) return false;
      if (!object.Equals(Quest, other.Quest)) return false;
      if (!object.Equals(SoldBy, other.SoldBy)) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (sourceCase_ == SourceOneofCase.Crafted) hash ^= Crafted.GetHashCode();
      if (sourceCase_ == SourceOneofCase.Drop) hash ^= Drop.GetHashCode();
      if (sourceCase_ == SourceOneofCase.Quest) hash ^= Quest.GetHashCode();
      if (sourceCase_ == SourceOneofCase.SoldBy) hash ^= SoldBy.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sourceCase_ == SourceOneofCase.Crafted) {
        output.WriteRawTag(10);
        output.WriteMessage(Crafted);
      }
      if (sourceCase_ == SourceOneofCase.Drop) {
        output.WriteRawTag(18);
        output.WriteMessage(Drop);
      }
      if (sourceCase_ == SourceOneofCase.Quest) {
        output.WriteRawTag(26);
        output.WriteMessage(Quest);
      }
      if (sourceCase_ == SourceOneofCase.SoldBy) {
        output.WriteRawTag(34);
        output.WriteMessage(SoldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sourceCase_ == SourceOneofCase.Crafted) {
        output.WriteRawTag(10);
        output.WriteMessage(Crafted);
      }
      if (sourceCase_ == SourceOneofCase.Drop) {
        output.WriteRawTag(18);
        output.WriteMessage(Drop);
      }
      if (sourceCase_ == SourceOneofCase.Quest) {
        output.WriteRawTag(26);
        output.WriteMessage(Quest);
      }
      if (sourceCase_ == SourceOneofCase.SoldBy) {
        output.WriteRawTag(34);
        output.WriteMessage(SoldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (sourceCase_ == SourceOneofCase.Crafted) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Crafted);
      }
      if (sourceCase_ == SourceOneofCase.Drop) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Drop);
      }
      if (sourceCase_ == SourceOneofCase.Quest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quest);
      }
      if (sourceCase_ == SourceOneofCase.SoldBy) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SoldBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UIItemSource other) {
      if (other == null) {
        return;
      }
      switch (other.SourceCase) {
        case SourceOneofCase.Crafted:
          if (Crafted == null) {
            Crafted = new global::SirusDbScrapper.UIDatabase.CraftedSource();
          }
          Crafted.MergeFrom(other.Crafted);
          break;
        case SourceOneofCase.Drop:
          if (Drop == null) {
            Drop = new global::SirusDbScrapper.UIDatabase.DropSource();
          }
          Drop.MergeFrom(other.Drop);
          break;
        case SourceOneofCase.Quest:
          if (Quest == null) {
            Quest = new global::SirusDbScrapper.UIDatabase.QuestSource();
          }
          Quest.MergeFrom(other.Quest);
          break;
        case SourceOneofCase.SoldBy:
          if (SoldBy == null) {
            SoldBy = new global::SirusDbScrapper.UIDatabase.SoldBySource();
          }
          SoldBy.MergeFrom(other.SoldBy);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::SirusDbScrapper.UIDatabase.CraftedSource subBuilder = new global::SirusDbScrapper.UIDatabase.CraftedSource();
            if (sourceCase_ == SourceOneofCase.Crafted) {
              subBuilder.MergeFrom(Crafted);
            }
            input.ReadMessage(subBuilder);
            Crafted = subBuilder;
            break;
          }
          case 18: {
            global::SirusDbScrapper.UIDatabase.DropSource subBuilder = new global::SirusDbScrapper.UIDatabase.DropSource();
            if (sourceCase_ == SourceOneofCase.Drop) {
              subBuilder.MergeFrom(Drop);
            }
            input.ReadMessage(subBuilder);
            Drop = subBuilder;
            break;
          }
          case 26: {
            global::SirusDbScrapper.UIDatabase.QuestSource subBuilder = new global::SirusDbScrapper.UIDatabase.QuestSource();
            if (sourceCase_ == SourceOneofCase.Quest) {
              subBuilder.MergeFrom(Quest);
            }
            input.ReadMessage(subBuilder);
            Quest = subBuilder;
            break;
          }
          case 34: {
            global::SirusDbScrapper.UIDatabase.SoldBySource subBuilder = new global::SirusDbScrapper.UIDatabase.SoldBySource();
            if (sourceCase_ == SourceOneofCase.SoldBy) {
              subBuilder.MergeFrom(SoldBy);
            }
            input.ReadMessage(subBuilder);
            SoldBy = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::SirusDbScrapper.UIDatabase.CraftedSource subBuilder = new global::SirusDbScrapper.UIDatabase.CraftedSource();
            if (sourceCase_ == SourceOneofCase.Crafted) {
              subBuilder.MergeFrom(Crafted);
            }
            input.ReadMessage(subBuilder);
            Crafted = subBuilder;
            break;
          }
          case 18: {
            global::SirusDbScrapper.UIDatabase.DropSource subBuilder = new global::SirusDbScrapper.UIDatabase.DropSource();
            if (sourceCase_ == SourceOneofCase.Drop) {
              subBuilder.MergeFrom(Drop);
            }
            input.ReadMessage(subBuilder);
            Drop = subBuilder;
            break;
          }
          case 26: {
            global::SirusDbScrapper.UIDatabase.QuestSource subBuilder = new global::SirusDbScrapper.UIDatabase.QuestSource();
            if (sourceCase_ == SourceOneofCase.Quest) {
              subBuilder.MergeFrom(Quest);
            }
            input.ReadMessage(subBuilder);
            Quest = subBuilder;
            break;
          }
          case 34: {
            global::SirusDbScrapper.UIDatabase.SoldBySource subBuilder = new global::SirusDbScrapper.UIDatabase.SoldBySource();
            if (sourceCase_ == SourceOneofCase.SoldBy) {
              subBuilder.MergeFrom(SoldBy);
            }
            input.ReadMessage(subBuilder);
            SoldBy = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CraftedSource : pb::IMessage<CraftedSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CraftedSource> _parser = new pb::MessageParser<CraftedSource>(() => new CraftedSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CraftedSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CraftedSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CraftedSource(CraftedSource other) : this() {
      profession_ = other.profession_;
      spellId_ = other.spellId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CraftedSource Clone() {
      return new CraftedSource(this);
    }

    /// <summary>Field number for the "profession" field.</summary>
    public const int ProfessionFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.Profession profession_ = global::SirusDbScrapper.UIDatabase.Profession.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Profession Profession {
      get { return profession_; }
      set {
        profession_ = value;
      }
    }

    /// <summary>Field number for the "spell_id" field.</summary>
    public const int SpellIdFieldNumber = 2;
    private int spellId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpellId {
      get { return spellId_; }
      set {
        spellId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CraftedSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CraftedSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Profession != other.Profession) return false;
      if (SpellId != other.SpellId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Profession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) hash ^= Profession.GetHashCode();
      if (SpellId != 0) hash ^= SpellId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Profession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Profession);
      }
      if (SpellId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SpellId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Profession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Profession);
      }
      if (SpellId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SpellId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Profession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Profession);
      }
      if (SpellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpellId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CraftedSource other) {
      if (other == null) {
        return;
      }
      if (other.Profession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) {
        Profession = other.Profession;
      }
      if (other.SpellId != 0) {
        SpellId = other.SpellId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Profession = (global::SirusDbScrapper.UIDatabase.Profession) input.ReadEnum();
            break;
          }
          case 16: {
            SpellId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Profession = (global::SirusDbScrapper.UIDatabase.Profession) input.ReadEnum();
            break;
          }
          case 16: {
            SpellId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DropSource : pb::IMessage<DropSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DropSource> _parser = new pb::MessageParser<DropSource>(() => new DropSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DropSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DropSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DropSource(DropSource other) : this() {
      difficulty_ = other.difficulty_;
      npcId_ = other.npcId_;
      zoneId_ = other.zoneId_;
      otherName_ = other.otherName_;
      category_ = other.category_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DropSource Clone() {
      return new DropSource(this);
    }

    /// <summary>Field number for the "difficulty" field.</summary>
    public const int DifficultyFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.DungeonDifficulty difficulty_ = global::SirusDbScrapper.UIDatabase.DungeonDifficulty.DifficultyUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.DungeonDifficulty Difficulty {
      get { return difficulty_; }
      set {
        difficulty_ = value;
      }
    }

    /// <summary>Field number for the "npc_id" field.</summary>
    public const int NpcIdFieldNumber = 2;
    private int npcId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NpcId {
      get { return npcId_; }
      set {
        npcId_ = value;
      }
    }

    /// <summary>Field number for the "zone_id" field.</summary>
    public const int ZoneIdFieldNumber = 3;
    private int zoneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = value;
      }
    }

    /// <summary>Field number for the "other_name" field.</summary>
    public const int OtherNameFieldNumber = 4;
    private string otherName_ = "";
    /// <summary>
    /// For drops in zones from things other than NPCs, e.g. "Trash"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OtherName {
      get { return otherName_; }
      set {
        otherName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 5;
    private string category_ = "";
    /// <summary>
    /// For conditions/categories of drops, e.g. 'Hard Mode' or 'Titan Rune'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DropSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DropSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Difficulty != other.Difficulty) return false;
      if (NpcId != other.NpcId) return false;
      if (ZoneId != other.ZoneId) return false;
      if (OtherName != other.OtherName) return false;
      if (Category != other.Category) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Difficulty != global::SirusDbScrapper.UIDatabase.DungeonDifficulty.DifficultyUnknown) hash ^= Difficulty.GetHashCode();
      if (NpcId != 0) hash ^= NpcId.GetHashCode();
      if (ZoneId != 0) hash ^= ZoneId.GetHashCode();
      if (OtherName.Length != 0) hash ^= OtherName.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Difficulty != global::SirusDbScrapper.UIDatabase.DungeonDifficulty.DifficultyUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Difficulty);
      }
      if (NpcId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NpcId);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ZoneId);
      }
      if (OtherName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OtherName);
      }
      if (Category.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Category);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Difficulty != global::SirusDbScrapper.UIDatabase.DungeonDifficulty.DifficultyUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Difficulty);
      }
      if (NpcId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NpcId);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ZoneId);
      }
      if (OtherName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OtherName);
      }
      if (Category.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Category);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Difficulty != global::SirusDbScrapper.UIDatabase.DungeonDifficulty.DifficultyUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Difficulty);
      }
      if (NpcId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NpcId);
      }
      if (ZoneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneId);
      }
      if (OtherName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OtherName);
      }
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DropSource other) {
      if (other == null) {
        return;
      }
      if (other.Difficulty != global::SirusDbScrapper.UIDatabase.DungeonDifficulty.DifficultyUnknown) {
        Difficulty = other.Difficulty;
      }
      if (other.NpcId != 0) {
        NpcId = other.NpcId;
      }
      if (other.ZoneId != 0) {
        ZoneId = other.ZoneId;
      }
      if (other.OtherName.Length != 0) {
        OtherName = other.OtherName;
      }
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Difficulty = (global::SirusDbScrapper.UIDatabase.DungeonDifficulty) input.ReadEnum();
            break;
          }
          case 16: {
            NpcId = input.ReadInt32();
            break;
          }
          case 24: {
            ZoneId = input.ReadInt32();
            break;
          }
          case 34: {
            OtherName = input.ReadString();
            break;
          }
          case 42: {
            Category = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Difficulty = (global::SirusDbScrapper.UIDatabase.DungeonDifficulty) input.ReadEnum();
            break;
          }
          case 16: {
            NpcId = input.ReadInt32();
            break;
          }
          case 24: {
            ZoneId = input.ReadInt32();
            break;
          }
          case 34: {
            OtherName = input.ReadString();
            break;
          }
          case 42: {
            Category = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QuestSource : pb::IMessage<QuestSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuestSource> _parser = new pb::MessageParser<QuestSource>(() => new QuestSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QuestSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestSource(QuestSource other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestSource Clone() {
      return new QuestSource(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QuestSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QuestSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QuestSource other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SoldBySource : pb::IMessage<SoldBySource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SoldBySource> _parser = new pb::MessageParser<SoldBySource>(() => new SoldBySource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SoldBySource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SoldBySource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SoldBySource(SoldBySource other) : this() {
      npcId_ = other.npcId_;
      npcName_ = other.npcName_;
      zoneId_ = other.zoneId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SoldBySource Clone() {
      return new SoldBySource(this);
    }

    /// <summary>Field number for the "npc_id" field.</summary>
    public const int NpcIdFieldNumber = 1;
    private int npcId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NpcId {
      get { return npcId_; }
      set {
        npcId_ = value;
      }
    }

    /// <summary>Field number for the "npc_name" field.</summary>
    public const int NpcNameFieldNumber = 2;
    private string npcName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NpcName {
      get { return npcName_; }
      set {
        npcName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone_id" field.</summary>
    public const int ZoneIdFieldNumber = 3;
    private int zoneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SoldBySource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SoldBySource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NpcId != other.NpcId) return false;
      if (NpcName != other.NpcName) return false;
      if (ZoneId != other.ZoneId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NpcId != 0) hash ^= NpcId.GetHashCode();
      if (NpcName.Length != 0) hash ^= NpcName.GetHashCode();
      if (ZoneId != 0) hash ^= ZoneId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NpcId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NpcId);
      }
      if (NpcName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NpcName);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ZoneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NpcId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NpcId);
      }
      if (NpcName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NpcName);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ZoneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NpcId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NpcId);
      }
      if (NpcName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NpcName);
      }
      if (ZoneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SoldBySource other) {
      if (other == null) {
        return;
      }
      if (other.NpcId != 0) {
        NpcId = other.NpcId;
      }
      if (other.NpcName.Length != 0) {
        NpcName = other.NpcName;
      }
      if (other.ZoneId != 0) {
        ZoneId = other.ZoneId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NpcId = input.ReadInt32();
            break;
          }
          case 18: {
            NpcName = input.ReadString();
            break;
          }
          case 24: {
            ZoneId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NpcId = input.ReadInt32();
            break;
          }
          case 18: {
            NpcName = input.ReadString();
            break;
          }
          case 24: {
            ZoneId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UIEnchant : pb::IMessage<UIEnchant>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UIEnchant> _parser = new pb::MessageParser<UIEnchant>(() => new UIEnchant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UIEnchant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIEnchant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIEnchant(UIEnchant other) : this() {
      effectId_ = other.effectId_;
      itemId_ = other.itemId_;
      spellId_ = other.spellId_;
      name_ = other.name_;
      icon_ = other.icon_;
      type_ = other.type_;
      extraTypes_ = other.extraTypes_.Clone();
      enchantType_ = other.enchantType_;
      stats_ = other.stats_.Clone();
      quality_ = other.quality_;
      phase_ = other.phase_;
      classAllowlist_ = other.classAllowlist_.Clone();
      requiredProfession_ = other.requiredProfession_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIEnchant Clone() {
      return new UIEnchant(this);
    }

    /// <summary>Field number for the "effect_id" field.</summary>
    public const int EffectIdFieldNumber = 1;
    private int effectId_;
    /// <summary>
    /// All enchants have an effect ID. Some also have an item ID, others have a spell ID,
    /// and yet others have both item and spell IDs. No single ID alone is enough to
    /// uniquely identify an enchant. Uniqueness requires either effect ID + slot, or
    /// effect ID + item/spell ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectId {
      get { return effectId_; }
      set {
        effectId_ = value;
      }
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    /// <summary>
    /// ID of the enchant "item". Might be 0 if not available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "spell_id" field.</summary>
    public const int SpellIdFieldNumber = 3;
    private int spellId_;
    /// <summary>
    /// ID of the enchant "spell". Might be 0 if not available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpellId {
      get { return spellId_; }
      set {
        spellId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 5;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 6;
    private global::SirusDbScrapper.UIDatabase.ItemType type_ = global::SirusDbScrapper.UIDatabase.ItemType.Unknown;
    /// <summary>
    /// Which type of item this enchant can be applied to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.ItemType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "extra_types" field.</summary>
    public const int ExtraTypesFieldNumber = 13;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.ItemType> _repeated_extraTypes_codec
        = pb::FieldCodec.ForEnum(106, x => (int) x, x => (global::SirusDbScrapper.UIDatabase.ItemType) x);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.ItemType> extraTypes_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.ItemType>();
    /// <summary>
    /// Extra types for enchants that can go in multiple slots (like armor kits).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.ItemType> ExtraTypes {
      get { return extraTypes_; }
    }

    /// <summary>Field number for the "enchant_type" field.</summary>
    public const int EnchantTypeFieldNumber = 7;
    private global::SirusDbScrapper.UIDatabase.EnchantType enchantType_ = global::SirusDbScrapper.UIDatabase.EnchantType.Normal;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.EnchantType EnchantType {
      get { return enchantType_; }
      set {
        enchantType_ = value;
      }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 8;
    private static readonly pb::FieldCodec<double> _repeated_stats_codec
        = pb::FieldCodec.ForDouble(66);
    private readonly pbc::RepeatedField<double> stats_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Stats {
      get { return stats_; }
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 9;
    private global::SirusDbScrapper.UIDatabase.ItemQuality quality_ = global::SirusDbScrapper.UIDatabase.ItemQuality.Junk;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.ItemQuality Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 10;
    private int phase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Phase {
      get { return phase_; }
      set {
        phase_ = value;
      }
    }

    /// <summary>Field number for the "class_allowlist" field.</summary>
    public const int ClassAllowlistFieldNumber = 11;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.Class> _repeated_classAllowlist_codec
        = pb::FieldCodec.ForEnum(90, x => (int) x, x => (global::SirusDbScrapper.UIDatabase.Class) x);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Class> classAllowlist_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Class>();
    /// <summary>
    /// Classes that are allowed to use the enchant. Empty indicates no special class restrictions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Class> ClassAllowlist {
      get { return classAllowlist_; }
    }

    /// <summary>Field number for the "required_profession" field.</summary>
    public const int RequiredProfessionFieldNumber = 12;
    private global::SirusDbScrapper.UIDatabase.Profession requiredProfession_ = global::SirusDbScrapper.UIDatabase.Profession.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Profession RequiredProfession {
      get { return requiredProfession_; }
      set {
        requiredProfession_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UIEnchant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UIEnchant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EffectId != other.EffectId) return false;
      if (ItemId != other.ItemId) return false;
      if (SpellId != other.SpellId) return false;
      if (Name != other.Name) return false;
      if (Icon != other.Icon) return false;
      if (Type != other.Type) return false;
      if(!extraTypes_.Equals(other.extraTypes_)) return false;
      if (EnchantType != other.EnchantType) return false;
      if(!stats_.Equals(other.stats_)) return false;
      if (Quality != other.Quality) return false;
      if (Phase != other.Phase) return false;
      if(!classAllowlist_.Equals(other.classAllowlist_)) return false;
      if (RequiredProfession != other.RequiredProfession) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EffectId != 0) hash ^= EffectId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (SpellId != 0) hash ^= SpellId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Type != global::SirusDbScrapper.UIDatabase.ItemType.Unknown) hash ^= Type.GetHashCode();
      hash ^= extraTypes_.GetHashCode();
      if (EnchantType != global::SirusDbScrapper.UIDatabase.EnchantType.Normal) hash ^= EnchantType.GetHashCode();
      hash ^= stats_.GetHashCode();
      if (Quality != global::SirusDbScrapper.UIDatabase.ItemQuality.Junk) hash ^= Quality.GetHashCode();
      if (Phase != 0) hash ^= Phase.GetHashCode();
      hash ^= classAllowlist_.GetHashCode();
      if (RequiredProfession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) hash ^= RequiredProfession.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EffectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EffectId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (SpellId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SpellId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Icon);
      }
      if (Type != global::SirusDbScrapper.UIDatabase.ItemType.Unknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Type);
      }
      if (EnchantType != global::SirusDbScrapper.UIDatabase.EnchantType.Normal) {
        output.WriteRawTag(56);
        output.WriteEnum((int) EnchantType);
      }
      stats_.WriteTo(output, _repeated_stats_codec);
      if (Quality != global::SirusDbScrapper.UIDatabase.ItemQuality.Junk) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Quality);
      }
      if (Phase != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Phase);
      }
      classAllowlist_.WriteTo(output, _repeated_classAllowlist_codec);
      if (RequiredProfession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) {
        output.WriteRawTag(96);
        output.WriteEnum((int) RequiredProfession);
      }
      extraTypes_.WriteTo(output, _repeated_extraTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EffectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EffectId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (SpellId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SpellId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Icon);
      }
      if (Type != global::SirusDbScrapper.UIDatabase.ItemType.Unknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Type);
      }
      if (EnchantType != global::SirusDbScrapper.UIDatabase.EnchantType.Normal) {
        output.WriteRawTag(56);
        output.WriteEnum((int) EnchantType);
      }
      stats_.WriteTo(ref output, _repeated_stats_codec);
      if (Quality != global::SirusDbScrapper.UIDatabase.ItemQuality.Junk) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Quality);
      }
      if (Phase != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Phase);
      }
      classAllowlist_.WriteTo(ref output, _repeated_classAllowlist_codec);
      if (RequiredProfession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) {
        output.WriteRawTag(96);
        output.WriteEnum((int) RequiredProfession);
      }
      extraTypes_.WriteTo(ref output, _repeated_extraTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EffectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (SpellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpellId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Type != global::SirusDbScrapper.UIDatabase.ItemType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += extraTypes_.CalculateSize(_repeated_extraTypes_codec);
      if (EnchantType != global::SirusDbScrapper.UIDatabase.EnchantType.Normal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EnchantType);
      }
      size += stats_.CalculateSize(_repeated_stats_codec);
      if (Quality != global::SirusDbScrapper.UIDatabase.ItemQuality.Junk) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Quality);
      }
      if (Phase != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Phase);
      }
      size += classAllowlist_.CalculateSize(_repeated_classAllowlist_codec);
      if (RequiredProfession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequiredProfession);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UIEnchant other) {
      if (other == null) {
        return;
      }
      if (other.EffectId != 0) {
        EffectId = other.EffectId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.SpellId != 0) {
        SpellId = other.SpellId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Type != global::SirusDbScrapper.UIDatabase.ItemType.Unknown) {
        Type = other.Type;
      }
      extraTypes_.Add(other.extraTypes_);
      if (other.EnchantType != global::SirusDbScrapper.UIDatabase.EnchantType.Normal) {
        EnchantType = other.EnchantType;
      }
      stats_.Add(other.stats_);
      if (other.Quality != global::SirusDbScrapper.UIDatabase.ItemQuality.Junk) {
        Quality = other.Quality;
      }
      if (other.Phase != 0) {
        Phase = other.Phase;
      }
      classAllowlist_.Add(other.classAllowlist_);
      if (other.RequiredProfession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) {
        RequiredProfession = other.RequiredProfession;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EffectId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
          case 24: {
            SpellId = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Icon = input.ReadString();
            break;
          }
          case 48: {
            Type = (global::SirusDbScrapper.UIDatabase.ItemType) input.ReadEnum();
            break;
          }
          case 56: {
            EnchantType = (global::SirusDbScrapper.UIDatabase.EnchantType) input.ReadEnum();
            break;
          }
          case 66:
          case 65: {
            stats_.AddEntriesFrom(input, _repeated_stats_codec);
            break;
          }
          case 72: {
            Quality = (global::SirusDbScrapper.UIDatabase.ItemQuality) input.ReadEnum();
            break;
          }
          case 80: {
            Phase = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            classAllowlist_.AddEntriesFrom(input, _repeated_classAllowlist_codec);
            break;
          }
          case 96: {
            RequiredProfession = (global::SirusDbScrapper.UIDatabase.Profession) input.ReadEnum();
            break;
          }
          case 106:
          case 104: {
            extraTypes_.AddEntriesFrom(input, _repeated_extraTypes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EffectId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
          case 24: {
            SpellId = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Icon = input.ReadString();
            break;
          }
          case 48: {
            Type = (global::SirusDbScrapper.UIDatabase.ItemType) input.ReadEnum();
            break;
          }
          case 56: {
            EnchantType = (global::SirusDbScrapper.UIDatabase.EnchantType) input.ReadEnum();
            break;
          }
          case 66:
          case 65: {
            stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
            break;
          }
          case 72: {
            Quality = (global::SirusDbScrapper.UIDatabase.ItemQuality) input.ReadEnum();
            break;
          }
          case 80: {
            Phase = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            classAllowlist_.AddEntriesFrom(ref input, _repeated_classAllowlist_codec);
            break;
          }
          case 96: {
            RequiredProfession = (global::SirusDbScrapper.UIDatabase.Profession) input.ReadEnum();
            break;
          }
          case 106:
          case 104: {
            extraTypes_.AddEntriesFrom(ref input, _repeated_extraTypes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UIGem : pb::IMessage<UIGem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UIGem> _parser = new pb::MessageParser<UIGem>(() => new UIGem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UIGem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIGem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIGem(UIGem other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      icon_ = other.icon_;
      color_ = other.color_;
      stats_ = other.stats_.Clone();
      phase_ = other.phase_;
      quality_ = other.quality_;
      unique_ = other.unique_;
      requiredProfession_ = other.requiredProfession_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UIGem Clone() {
      return new UIGem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 3;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 4;
    private global::SirusDbScrapper.UIDatabase.GemColor color_ = global::SirusDbScrapper.UIDatabase.GemColor.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.GemColor Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 5;
    private static readonly pb::FieldCodec<double> _repeated_stats_codec
        = pb::FieldCodec.ForDouble(42);
    private readonly pbc::RepeatedField<double> stats_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Stats {
      get { return stats_; }
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 6;
    private int phase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Phase {
      get { return phase_; }
      set {
        phase_ = value;
      }
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 7;
    private global::SirusDbScrapper.UIDatabase.ItemQuality quality_ = global::SirusDbScrapper.UIDatabase.ItemQuality.Junk;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.ItemQuality Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "unique" field.</summary>
    public const int UniqueFieldNumber = 8;
    private bool unique_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Unique {
      get { return unique_; }
      set {
        unique_ = value;
      }
    }

    /// <summary>Field number for the "required_profession" field.</summary>
    public const int RequiredProfessionFieldNumber = 9;
    private global::SirusDbScrapper.UIDatabase.Profession requiredProfession_ = global::SirusDbScrapper.UIDatabase.Profession.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Profession RequiredProfession {
      get { return requiredProfession_; }
      set {
        requiredProfession_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UIGem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UIGem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Icon != other.Icon) return false;
      if (Color != other.Color) return false;
      if(!stats_.Equals(other.stats_)) return false;
      if (Phase != other.Phase) return false;
      if (Quality != other.Quality) return false;
      if (Unique != other.Unique) return false;
      if (RequiredProfession != other.RequiredProfession) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Color != global::SirusDbScrapper.UIDatabase.GemColor.Unknown) hash ^= Color.GetHashCode();
      hash ^= stats_.GetHashCode();
      if (Phase != 0) hash ^= Phase.GetHashCode();
      if (Quality != global::SirusDbScrapper.UIDatabase.ItemQuality.Junk) hash ^= Quality.GetHashCode();
      if (Unique != false) hash ^= Unique.GetHashCode();
      if (RequiredProfession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) hash ^= RequiredProfession.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (Color != global::SirusDbScrapper.UIDatabase.GemColor.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Color);
      }
      stats_.WriteTo(output, _repeated_stats_codec);
      if (Phase != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Phase);
      }
      if (Quality != global::SirusDbScrapper.UIDatabase.ItemQuality.Junk) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Quality);
      }
      if (Unique != false) {
        output.WriteRawTag(64);
        output.WriteBool(Unique);
      }
      if (RequiredProfession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) {
        output.WriteRawTag(72);
        output.WriteEnum((int) RequiredProfession);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (Color != global::SirusDbScrapper.UIDatabase.GemColor.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Color);
      }
      stats_.WriteTo(ref output, _repeated_stats_codec);
      if (Phase != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Phase);
      }
      if (Quality != global::SirusDbScrapper.UIDatabase.ItemQuality.Junk) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Quality);
      }
      if (Unique != false) {
        output.WriteRawTag(64);
        output.WriteBool(Unique);
      }
      if (RequiredProfession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) {
        output.WriteRawTag(72);
        output.WriteEnum((int) RequiredProfession);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Color != global::SirusDbScrapper.UIDatabase.GemColor.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Color);
      }
      size += stats_.CalculateSize(_repeated_stats_codec);
      if (Phase != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Phase);
      }
      if (Quality != global::SirusDbScrapper.UIDatabase.ItemQuality.Junk) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Quality);
      }
      if (Unique != false) {
        size += 1 + 1;
      }
      if (RequiredProfession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequiredProfession);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UIGem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Color != global::SirusDbScrapper.UIDatabase.GemColor.Unknown) {
        Color = other.Color;
      }
      stats_.Add(other.stats_);
      if (other.Phase != 0) {
        Phase = other.Phase;
      }
      if (other.Quality != global::SirusDbScrapper.UIDatabase.ItemQuality.Junk) {
        Quality = other.Quality;
      }
      if (other.Unique != false) {
        Unique = other.Unique;
      }
      if (other.RequiredProfession != global::SirusDbScrapper.UIDatabase.Profession.Unknown) {
        RequiredProfession = other.RequiredProfession;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
          case 32: {
            Color = (global::SirusDbScrapper.UIDatabase.GemColor) input.ReadEnum();
            break;
          }
          case 42:
          case 41: {
            stats_.AddEntriesFrom(input, _repeated_stats_codec);
            break;
          }
          case 48: {
            Phase = input.ReadInt32();
            break;
          }
          case 56: {
            Quality = (global::SirusDbScrapper.UIDatabase.ItemQuality) input.ReadEnum();
            break;
          }
          case 64: {
            Unique = input.ReadBool();
            break;
          }
          case 72: {
            RequiredProfession = (global::SirusDbScrapper.UIDatabase.Profession) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
          case 32: {
            Color = (global::SirusDbScrapper.UIDatabase.GemColor) input.ReadEnum();
            break;
          }
          case 42:
          case 41: {
            stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
            break;
          }
          case 48: {
            Phase = input.ReadInt32();
            break;
          }
          case 56: {
            Quality = (global::SirusDbScrapper.UIDatabase.ItemQuality) input.ReadEnum();
            break;
          }
          case 64: {
            Unique = input.ReadBool();
            break;
          }
          case 72: {
            RequiredProfession = (global::SirusDbScrapper.UIDatabase.Profession) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IconData : pb::IMessage<IconData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IconData> _parser = new pb::MessageParser<IconData>(() => new IconData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IconData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IconData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IconData(IconData other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      icon_ = other.icon_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IconData Clone() {
      return new IconData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 3;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IconData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IconData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Icon != other.Icon) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IconData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GlyphID : pb::IMessage<GlyphID>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GlyphID> _parser = new pb::MessageParser<GlyphID>(() => new GlyphID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GlyphID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GlyphID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GlyphID(GlyphID other) : this() {
      itemId_ = other.itemId_;
      spellId_ = other.spellId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GlyphID Clone() {
      return new GlyphID(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "spell_id" field.</summary>
    public const int SpellIdFieldNumber = 2;
    private int spellId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpellId {
      get { return spellId_; }
      set {
        spellId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GlyphID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GlyphID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (SpellId != other.SpellId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (SpellId != 0) hash ^= SpellId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (SpellId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SpellId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (SpellId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SpellId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (SpellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpellId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GlyphID other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.SpellId != 0) {
        SpellId = other.SpellId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
          case 16: {
            SpellId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
          case 16: {
            SpellId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Next tag: 20.
  /// </summary>
  public sealed partial class DatabaseFilters : pb::IMessage<DatabaseFilters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DatabaseFilters> _parser = new pb::MessageParser<DatabaseFilters>(() => new DatabaseFilters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DatabaseFilters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DatabaseFilters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DatabaseFilters(DatabaseFilters other) : this() {
      armorTypes_ = other.armorTypes_.Clone();
      weaponTypes_ = other.weaponTypes_.Clone();
      rangedWeaponTypes_ = other.rangedWeaponTypes_.Clone();
      sources_ = other.sources_.Clone();
      raids_ = other.raids_.Clone();
      factionRestriction_ = other.factionRestriction_;
      minMhWeaponSpeed_ = other.minMhWeaponSpeed_;
      maxMhWeaponSpeed_ = other.maxMhWeaponSpeed_;
      minOhWeaponSpeed_ = other.minOhWeaponSpeed_;
      maxOhWeaponSpeed_ = other.maxOhWeaponSpeed_;
      minRangedWeaponSpeed_ = other.minRangedWeaponSpeed_;
      maxRangedWeaponSpeed_ = other.maxRangedWeaponSpeed_;
      oneHandedWeapons_ = other.oneHandedWeapons_;
      twoHandedWeapons_ = other.twoHandedWeapons_;
      matchingGemsOnly_ = other.matchingGemsOnly_;
      favoriteItems_ = other.favoriteItems_.Clone();
      favoriteGems_ = other.favoriteGems_.Clone();
      favoriteEnchants_ = other.favoriteEnchants_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DatabaseFilters Clone() {
      return new DatabaseFilters(this);
    }

    /// <summary>Field number for the "armor_types" field.</summary>
    public const int ArmorTypesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.ArmorType> _repeated_armorTypes_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::SirusDbScrapper.UIDatabase.ArmorType) x);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.ArmorType> armorTypes_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.ArmorType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.ArmorType> ArmorTypes {
      get { return armorTypes_; }
    }

    /// <summary>Field number for the "weapon_types" field.</summary>
    public const int WeaponTypesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.WeaponType> _repeated_weaponTypes_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::SirusDbScrapper.UIDatabase.WeaponType) x);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.WeaponType> weaponTypes_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.WeaponType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.WeaponType> WeaponTypes {
      get { return weaponTypes_; }
    }

    /// <summary>Field number for the "ranged_weapon_types" field.</summary>
    public const int RangedWeaponTypesFieldNumber = 16;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.RangedWeaponType> _repeated_rangedWeaponTypes_codec
        = pb::FieldCodec.ForEnum(130, x => (int) x, x => (global::SirusDbScrapper.UIDatabase.RangedWeaponType) x);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.RangedWeaponType> rangedWeaponTypes_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.RangedWeaponType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.RangedWeaponType> RangedWeaponTypes {
      get { return rangedWeaponTypes_; }
    }

    /// <summary>Field number for the "sources" field.</summary>
    public const int SourcesFieldNumber = 17;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.SourceFilterOption> _repeated_sources_codec
        = pb::FieldCodec.ForEnum(138, x => (int) x, x => (global::SirusDbScrapper.UIDatabase.SourceFilterOption) x);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.SourceFilterOption> sources_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.SourceFilterOption>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.SourceFilterOption> Sources {
      get { return sources_; }
    }

    /// <summary>Field number for the "raids" field.</summary>
    public const int RaidsFieldNumber = 18;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.RaidFilterOption> _repeated_raids_codec
        = pb::FieldCodec.ForEnum(146, x => (int) x, x => (global::SirusDbScrapper.UIDatabase.RaidFilterOption) x);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.RaidFilterOption> raids_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.RaidFilterOption>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.RaidFilterOption> Raids {
      get { return raids_; }
    }

    /// <summary>Field number for the "faction_restriction" field.</summary>
    public const int FactionRestrictionFieldNumber = 19;
    private global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction factionRestriction_ = global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction FactionRestriction {
      get { return factionRestriction_; }
      set {
        factionRestriction_ = value;
      }
    }

    /// <summary>Field number for the "min_mh_weapon_speed" field.</summary>
    public const int MinMhWeaponSpeedFieldNumber = 4;
    private double minMhWeaponSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MinMhWeaponSpeed {
      get { return minMhWeaponSpeed_; }
      set {
        minMhWeaponSpeed_ = value;
      }
    }

    /// <summary>Field number for the "max_mh_weapon_speed" field.</summary>
    public const int MaxMhWeaponSpeedFieldNumber = 5;
    private double maxMhWeaponSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaxMhWeaponSpeed {
      get { return maxMhWeaponSpeed_; }
      set {
        maxMhWeaponSpeed_ = value;
      }
    }

    /// <summary>Field number for the "min_oh_weapon_speed" field.</summary>
    public const int MinOhWeaponSpeedFieldNumber = 9;
    private double minOhWeaponSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MinOhWeaponSpeed {
      get { return minOhWeaponSpeed_; }
      set {
        minOhWeaponSpeed_ = value;
      }
    }

    /// <summary>Field number for the "max_oh_weapon_speed" field.</summary>
    public const int MaxOhWeaponSpeedFieldNumber = 10;
    private double maxOhWeaponSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaxOhWeaponSpeed {
      get { return maxOhWeaponSpeed_; }
      set {
        maxOhWeaponSpeed_ = value;
      }
    }

    /// <summary>Field number for the "min_ranged_weapon_speed" field.</summary>
    public const int MinRangedWeaponSpeedFieldNumber = 14;
    private double minRangedWeaponSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MinRangedWeaponSpeed {
      get { return minRangedWeaponSpeed_; }
      set {
        minRangedWeaponSpeed_ = value;
      }
    }

    /// <summary>Field number for the "max_ranged_weapon_speed" field.</summary>
    public const int MaxRangedWeaponSpeedFieldNumber = 15;
    private double maxRangedWeaponSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaxRangedWeaponSpeed {
      get { return maxRangedWeaponSpeed_; }
      set {
        maxRangedWeaponSpeed_ = value;
      }
    }

    /// <summary>Field number for the "one_handed_weapons" field.</summary>
    public const int OneHandedWeaponsFieldNumber = 6;
    private bool oneHandedWeapons_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OneHandedWeapons {
      get { return oneHandedWeapons_; }
      set {
        oneHandedWeapons_ = value;
      }
    }

    /// <summary>Field number for the "two_handed_weapons" field.</summary>
    public const int TwoHandedWeaponsFieldNumber = 7;
    private bool twoHandedWeapons_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TwoHandedWeapons {
      get { return twoHandedWeapons_; }
      set {
        twoHandedWeapons_ = value;
      }
    }

    /// <summary>Field number for the "matching_gems_only" field.</summary>
    public const int MatchingGemsOnlyFieldNumber = 8;
    private bool matchingGemsOnly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MatchingGemsOnly {
      get { return matchingGemsOnly_; }
      set {
        matchingGemsOnly_ = value;
      }
    }

    /// <summary>Field number for the "favorite_items" field.</summary>
    public const int FavoriteItemsFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_favoriteItems_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> favoriteItems_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// Item IDs for favorited items.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> FavoriteItems {
      get { return favoriteItems_; }
    }

    /// <summary>Field number for the "favorite_gems" field.</summary>
    public const int FavoriteGemsFieldNumber = 12;
    private static readonly pb::FieldCodec<int> _repeated_favoriteGems_codec
        = pb::FieldCodec.ForInt32(98);
    private readonly pbc::RepeatedField<int> favoriteGems_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// Item IDs for favorited gems.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> FavoriteGems {
      get { return favoriteGems_; }
    }

    /// <summary>Field number for the "favorite_enchants" field.</summary>
    public const int FavoriteEnchantsFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_favoriteEnchants_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> favoriteEnchants_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Uniquely-identifying strings for favorited enchants.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> FavoriteEnchants {
      get { return favoriteEnchants_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DatabaseFilters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DatabaseFilters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!armorTypes_.Equals(other.armorTypes_)) return false;
      if(!weaponTypes_.Equals(other.weaponTypes_)) return false;
      if(!rangedWeaponTypes_.Equals(other.rangedWeaponTypes_)) return false;
      if(!sources_.Equals(other.sources_)) return false;
      if(!raids_.Equals(other.raids_)) return false;
      if (FactionRestriction != other.FactionRestriction) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinMhWeaponSpeed, other.MinMhWeaponSpeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxMhWeaponSpeed, other.MaxMhWeaponSpeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinOhWeaponSpeed, other.MinOhWeaponSpeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxOhWeaponSpeed, other.MaxOhWeaponSpeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinRangedWeaponSpeed, other.MinRangedWeaponSpeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxRangedWeaponSpeed, other.MaxRangedWeaponSpeed)) return false;
      if (OneHandedWeapons != other.OneHandedWeapons) return false;
      if (TwoHandedWeapons != other.TwoHandedWeapons) return false;
      if (MatchingGemsOnly != other.MatchingGemsOnly) return false;
      if(!favoriteItems_.Equals(other.favoriteItems_)) return false;
      if(!favoriteGems_.Equals(other.favoriteGems_)) return false;
      if(!favoriteEnchants_.Equals(other.favoriteEnchants_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= armorTypes_.GetHashCode();
      hash ^= weaponTypes_.GetHashCode();
      hash ^= rangedWeaponTypes_.GetHashCode();
      hash ^= sources_.GetHashCode();
      hash ^= raids_.GetHashCode();
      if (FactionRestriction != global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction.Unspecified) hash ^= FactionRestriction.GetHashCode();
      if (MinMhWeaponSpeed != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinMhWeaponSpeed);
      if (MaxMhWeaponSpeed != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxMhWeaponSpeed);
      if (MinOhWeaponSpeed != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinOhWeaponSpeed);
      if (MaxOhWeaponSpeed != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxOhWeaponSpeed);
      if (MinRangedWeaponSpeed != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinRangedWeaponSpeed);
      if (MaxRangedWeaponSpeed != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxRangedWeaponSpeed);
      if (OneHandedWeapons != false) hash ^= OneHandedWeapons.GetHashCode();
      if (TwoHandedWeapons != false) hash ^= TwoHandedWeapons.GetHashCode();
      if (MatchingGemsOnly != false) hash ^= MatchingGemsOnly.GetHashCode();
      hash ^= favoriteItems_.GetHashCode();
      hash ^= favoriteGems_.GetHashCode();
      hash ^= favoriteEnchants_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      armorTypes_.WriteTo(output, _repeated_armorTypes_codec);
      weaponTypes_.WriteTo(output, _repeated_weaponTypes_codec);
      if (MinMhWeaponSpeed != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MinMhWeaponSpeed);
      }
      if (MaxMhWeaponSpeed != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(MaxMhWeaponSpeed);
      }
      if (OneHandedWeapons != false) {
        output.WriteRawTag(48);
        output.WriteBool(OneHandedWeapons);
      }
      if (TwoHandedWeapons != false) {
        output.WriteRawTag(56);
        output.WriteBool(TwoHandedWeapons);
      }
      if (MatchingGemsOnly != false) {
        output.WriteRawTag(64);
        output.WriteBool(MatchingGemsOnly);
      }
      if (MinOhWeaponSpeed != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(MinOhWeaponSpeed);
      }
      if (MaxOhWeaponSpeed != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(MaxOhWeaponSpeed);
      }
      favoriteItems_.WriteTo(output, _repeated_favoriteItems_codec);
      favoriteGems_.WriteTo(output, _repeated_favoriteGems_codec);
      favoriteEnchants_.WriteTo(output, _repeated_favoriteEnchants_codec);
      if (MinRangedWeaponSpeed != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(MinRangedWeaponSpeed);
      }
      if (MaxRangedWeaponSpeed != 0D) {
        output.WriteRawTag(121);
        output.WriteDouble(MaxRangedWeaponSpeed);
      }
      rangedWeaponTypes_.WriteTo(output, _repeated_rangedWeaponTypes_codec);
      sources_.WriteTo(output, _repeated_sources_codec);
      raids_.WriteTo(output, _repeated_raids_codec);
      if (FactionRestriction != global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction.Unspecified) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) FactionRestriction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      armorTypes_.WriteTo(ref output, _repeated_armorTypes_codec);
      weaponTypes_.WriteTo(ref output, _repeated_weaponTypes_codec);
      if (MinMhWeaponSpeed != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MinMhWeaponSpeed);
      }
      if (MaxMhWeaponSpeed != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(MaxMhWeaponSpeed);
      }
      if (OneHandedWeapons != false) {
        output.WriteRawTag(48);
        output.WriteBool(OneHandedWeapons);
      }
      if (TwoHandedWeapons != false) {
        output.WriteRawTag(56);
        output.WriteBool(TwoHandedWeapons);
      }
      if (MatchingGemsOnly != false) {
        output.WriteRawTag(64);
        output.WriteBool(MatchingGemsOnly);
      }
      if (MinOhWeaponSpeed != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(MinOhWeaponSpeed);
      }
      if (MaxOhWeaponSpeed != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(MaxOhWeaponSpeed);
      }
      favoriteItems_.WriteTo(ref output, _repeated_favoriteItems_codec);
      favoriteGems_.WriteTo(ref output, _repeated_favoriteGems_codec);
      favoriteEnchants_.WriteTo(ref output, _repeated_favoriteEnchants_codec);
      if (MinRangedWeaponSpeed != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(MinRangedWeaponSpeed);
      }
      if (MaxRangedWeaponSpeed != 0D) {
        output.WriteRawTag(121);
        output.WriteDouble(MaxRangedWeaponSpeed);
      }
      rangedWeaponTypes_.WriteTo(ref output, _repeated_rangedWeaponTypes_codec);
      sources_.WriteTo(ref output, _repeated_sources_codec);
      raids_.WriteTo(ref output, _repeated_raids_codec);
      if (FactionRestriction != global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction.Unspecified) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) FactionRestriction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += armorTypes_.CalculateSize(_repeated_armorTypes_codec);
      size += weaponTypes_.CalculateSize(_repeated_weaponTypes_codec);
      size += rangedWeaponTypes_.CalculateSize(_repeated_rangedWeaponTypes_codec);
      size += sources_.CalculateSize(_repeated_sources_codec);
      size += raids_.CalculateSize(_repeated_raids_codec);
      if (FactionRestriction != global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FactionRestriction);
      }
      if (MinMhWeaponSpeed != 0D) {
        size += 1 + 8;
      }
      if (MaxMhWeaponSpeed != 0D) {
        size += 1 + 8;
      }
      if (MinOhWeaponSpeed != 0D) {
        size += 1 + 8;
      }
      if (MaxOhWeaponSpeed != 0D) {
        size += 1 + 8;
      }
      if (MinRangedWeaponSpeed != 0D) {
        size += 1 + 8;
      }
      if (MaxRangedWeaponSpeed != 0D) {
        size += 1 + 8;
      }
      if (OneHandedWeapons != false) {
        size += 1 + 1;
      }
      if (TwoHandedWeapons != false) {
        size += 1 + 1;
      }
      if (MatchingGemsOnly != false) {
        size += 1 + 1;
      }
      size += favoriteItems_.CalculateSize(_repeated_favoriteItems_codec);
      size += favoriteGems_.CalculateSize(_repeated_favoriteGems_codec);
      size += favoriteEnchants_.CalculateSize(_repeated_favoriteEnchants_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DatabaseFilters other) {
      if (other == null) {
        return;
      }
      armorTypes_.Add(other.armorTypes_);
      weaponTypes_.Add(other.weaponTypes_);
      rangedWeaponTypes_.Add(other.rangedWeaponTypes_);
      sources_.Add(other.sources_);
      raids_.Add(other.raids_);
      if (other.FactionRestriction != global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction.Unspecified) {
        FactionRestriction = other.FactionRestriction;
      }
      if (other.MinMhWeaponSpeed != 0D) {
        MinMhWeaponSpeed = other.MinMhWeaponSpeed;
      }
      if (other.MaxMhWeaponSpeed != 0D) {
        MaxMhWeaponSpeed = other.MaxMhWeaponSpeed;
      }
      if (other.MinOhWeaponSpeed != 0D) {
        MinOhWeaponSpeed = other.MinOhWeaponSpeed;
      }
      if (other.MaxOhWeaponSpeed != 0D) {
        MaxOhWeaponSpeed = other.MaxOhWeaponSpeed;
      }
      if (other.MinRangedWeaponSpeed != 0D) {
        MinRangedWeaponSpeed = other.MinRangedWeaponSpeed;
      }
      if (other.MaxRangedWeaponSpeed != 0D) {
        MaxRangedWeaponSpeed = other.MaxRangedWeaponSpeed;
      }
      if (other.OneHandedWeapons != false) {
        OneHandedWeapons = other.OneHandedWeapons;
      }
      if (other.TwoHandedWeapons != false) {
        TwoHandedWeapons = other.TwoHandedWeapons;
      }
      if (other.MatchingGemsOnly != false) {
        MatchingGemsOnly = other.MatchingGemsOnly;
      }
      favoriteItems_.Add(other.favoriteItems_);
      favoriteGems_.Add(other.favoriteGems_);
      favoriteEnchants_.Add(other.favoriteEnchants_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            armorTypes_.AddEntriesFrom(input, _repeated_armorTypes_codec);
            break;
          }
          case 18:
          case 16: {
            weaponTypes_.AddEntriesFrom(input, _repeated_weaponTypes_codec);
            break;
          }
          case 33: {
            MinMhWeaponSpeed = input.ReadDouble();
            break;
          }
          case 41: {
            MaxMhWeaponSpeed = input.ReadDouble();
            break;
          }
          case 48: {
            OneHandedWeapons = input.ReadBool();
            break;
          }
          case 56: {
            TwoHandedWeapons = input.ReadBool();
            break;
          }
          case 64: {
            MatchingGemsOnly = input.ReadBool();
            break;
          }
          case 73: {
            MinOhWeaponSpeed = input.ReadDouble();
            break;
          }
          case 81: {
            MaxOhWeaponSpeed = input.ReadDouble();
            break;
          }
          case 90:
          case 88: {
            favoriteItems_.AddEntriesFrom(input, _repeated_favoriteItems_codec);
            break;
          }
          case 98:
          case 96: {
            favoriteGems_.AddEntriesFrom(input, _repeated_favoriteGems_codec);
            break;
          }
          case 106: {
            favoriteEnchants_.AddEntriesFrom(input, _repeated_favoriteEnchants_codec);
            break;
          }
          case 113: {
            MinRangedWeaponSpeed = input.ReadDouble();
            break;
          }
          case 121: {
            MaxRangedWeaponSpeed = input.ReadDouble();
            break;
          }
          case 130:
          case 128: {
            rangedWeaponTypes_.AddEntriesFrom(input, _repeated_rangedWeaponTypes_codec);
            break;
          }
          case 138:
          case 136: {
            sources_.AddEntriesFrom(input, _repeated_sources_codec);
            break;
          }
          case 146:
          case 144: {
            raids_.AddEntriesFrom(input, _repeated_raids_codec);
            break;
          }
          case 152: {
            FactionRestriction = (global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            armorTypes_.AddEntriesFrom(ref input, _repeated_armorTypes_codec);
            break;
          }
          case 18:
          case 16: {
            weaponTypes_.AddEntriesFrom(ref input, _repeated_weaponTypes_codec);
            break;
          }
          case 33: {
            MinMhWeaponSpeed = input.ReadDouble();
            break;
          }
          case 41: {
            MaxMhWeaponSpeed = input.ReadDouble();
            break;
          }
          case 48: {
            OneHandedWeapons = input.ReadBool();
            break;
          }
          case 56: {
            TwoHandedWeapons = input.ReadBool();
            break;
          }
          case 64: {
            MatchingGemsOnly = input.ReadBool();
            break;
          }
          case 73: {
            MinOhWeaponSpeed = input.ReadDouble();
            break;
          }
          case 81: {
            MaxOhWeaponSpeed = input.ReadDouble();
            break;
          }
          case 90:
          case 88: {
            favoriteItems_.AddEntriesFrom(ref input, _repeated_favoriteItems_codec);
            break;
          }
          case 98:
          case 96: {
            favoriteGems_.AddEntriesFrom(ref input, _repeated_favoriteGems_codec);
            break;
          }
          case 106: {
            favoriteEnchants_.AddEntriesFrom(ref input, _repeated_favoriteEnchants_codec);
            break;
          }
          case 113: {
            MinRangedWeaponSpeed = input.ReadDouble();
            break;
          }
          case 121: {
            MaxRangedWeaponSpeed = input.ReadDouble();
            break;
          }
          case 130:
          case 128: {
            rangedWeaponTypes_.AddEntriesFrom(ref input, _repeated_rangedWeaponTypes_codec);
            break;
          }
          case 138:
          case 136: {
            sources_.AddEntriesFrom(ref input, _repeated_sources_codec);
            break;
          }
          case 146:
          case 144: {
            raids_.AddEntriesFrom(ref input, _repeated_raids_codec);
            break;
          }
          case 152: {
            FactionRestriction = (global::SirusDbScrapper.UIDatabase.UIItem.Types.FactionRestriction) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SimSettings : pb::IMessage<SimSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SimSettings> _parser = new pb::MessageParser<SimSettings>(() => new SimSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SimSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimSettings(SimSettings other) : this() {
      iterations_ = other.iterations_;
      phase_ = other.phase_;
      fixedRngSeed_ = other.fixedRngSeed_;
      showDamageMetrics_ = other.showDamageMetrics_;
      showThreatMetrics_ = other.showThreatMetrics_;
      showHealingMetrics_ = other.showHealingMetrics_;
      showExperimental_ = other.showExperimental_;
      showEpValues_ = other.showEpValues_;
      language_ = other.language_;
      faction_ = other.faction_;
      filters_ = other.filters_ != null ? other.filters_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimSettings Clone() {
      return new SimSettings(this);
    }

    /// <summary>Field number for the "iterations" field.</summary>
    public const int IterationsFieldNumber = 1;
    private int iterations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Iterations {
      get { return iterations_; }
      set {
        iterations_ = value;
      }
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 2;
    private int phase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Phase {
      get { return phase_; }
      set {
        phase_ = value;
      }
    }

    /// <summary>Field number for the "fixed_rng_seed" field.</summary>
    public const int FixedRngSeedFieldNumber = 3;
    private long fixedRngSeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FixedRngSeed {
      get { return fixedRngSeed_; }
      set {
        fixedRngSeed_ = value;
      }
    }

    /// <summary>Field number for the "show_damage_metrics" field.</summary>
    public const int ShowDamageMetricsFieldNumber = 8;
    private bool showDamageMetrics_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShowDamageMetrics {
      get { return showDamageMetrics_; }
      set {
        showDamageMetrics_ = value;
      }
    }

    /// <summary>Field number for the "show_threat_metrics" field.</summary>
    public const int ShowThreatMetricsFieldNumber = 4;
    private bool showThreatMetrics_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShowThreatMetrics {
      get { return showThreatMetrics_; }
      set {
        showThreatMetrics_ = value;
      }
    }

    /// <summary>Field number for the "show_healing_metrics" field.</summary>
    public const int ShowHealingMetricsFieldNumber = 7;
    private bool showHealingMetrics_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShowHealingMetrics {
      get { return showHealingMetrics_; }
      set {
        showHealingMetrics_ = value;
      }
    }

    /// <summary>Field number for the "show_experimental" field.</summary>
    public const int ShowExperimentalFieldNumber = 5;
    private bool showExperimental_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShowExperimental {
      get { return showExperimental_; }
      set {
        showExperimental_ = value;
      }
    }

    /// <summary>Field number for the "show_ep_values" field.</summary>
    public const int ShowEpValuesFieldNumber = 11;
    private bool showEpValues_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShowEpValues {
      get { return showEpValues_; }
      set {
        showEpValues_ = value;
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 9;
    private string language_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "faction" field.</summary>
    public const int FactionFieldNumber = 6;
    private global::SirusDbScrapper.UIDatabase.Faction faction_ = global::SirusDbScrapper.UIDatabase.Faction.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Faction Faction {
      get { return faction_; }
      set {
        faction_ = value;
      }
    }

    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 10;
    private global::SirusDbScrapper.UIDatabase.DatabaseFilters filters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.DatabaseFilters Filters {
      get { return filters_; }
      set {
        filters_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SimSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SimSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Iterations != other.Iterations) return false;
      if (Phase != other.Phase) return false;
      if (FixedRngSeed != other.FixedRngSeed) return false;
      if (ShowDamageMetrics != other.ShowDamageMetrics) return false;
      if (ShowThreatMetrics != other.ShowThreatMetrics) return false;
      if (ShowHealingMetrics != other.ShowHealingMetrics) return false;
      if (ShowExperimental != other.ShowExperimental) return false;
      if (ShowEpValues != other.ShowEpValues) return false;
      if (Language != other.Language) return false;
      if (Faction != other.Faction) return false;
      if (!object.Equals(Filters, other.Filters)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Iterations != 0) hash ^= Iterations.GetHashCode();
      if (Phase != 0) hash ^= Phase.GetHashCode();
      if (FixedRngSeed != 0L) hash ^= FixedRngSeed.GetHashCode();
      if (ShowDamageMetrics != false) hash ^= ShowDamageMetrics.GetHashCode();
      if (ShowThreatMetrics != false) hash ^= ShowThreatMetrics.GetHashCode();
      if (ShowHealingMetrics != false) hash ^= ShowHealingMetrics.GetHashCode();
      if (ShowExperimental != false) hash ^= ShowExperimental.GetHashCode();
      if (ShowEpValues != false) hash ^= ShowEpValues.GetHashCode();
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (Faction != global::SirusDbScrapper.UIDatabase.Faction.Unknown) hash ^= Faction.GetHashCode();
      if (filters_ != null) hash ^= Filters.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Iterations != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Iterations);
      }
      if (Phase != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Phase);
      }
      if (FixedRngSeed != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FixedRngSeed);
      }
      if (ShowThreatMetrics != false) {
        output.WriteRawTag(32);
        output.WriteBool(ShowThreatMetrics);
      }
      if (ShowExperimental != false) {
        output.WriteRawTag(40);
        output.WriteBool(ShowExperimental);
      }
      if (Faction != global::SirusDbScrapper.UIDatabase.Faction.Unknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Faction);
      }
      if (ShowHealingMetrics != false) {
        output.WriteRawTag(56);
        output.WriteBool(ShowHealingMetrics);
      }
      if (ShowDamageMetrics != false) {
        output.WriteRawTag(64);
        output.WriteBool(ShowDamageMetrics);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Language);
      }
      if (filters_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Filters);
      }
      if (ShowEpValues != false) {
        output.WriteRawTag(88);
        output.WriteBool(ShowEpValues);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Iterations != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Iterations);
      }
      if (Phase != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Phase);
      }
      if (FixedRngSeed != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FixedRngSeed);
      }
      if (ShowThreatMetrics != false) {
        output.WriteRawTag(32);
        output.WriteBool(ShowThreatMetrics);
      }
      if (ShowExperimental != false) {
        output.WriteRawTag(40);
        output.WriteBool(ShowExperimental);
      }
      if (Faction != global::SirusDbScrapper.UIDatabase.Faction.Unknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Faction);
      }
      if (ShowHealingMetrics != false) {
        output.WriteRawTag(56);
        output.WriteBool(ShowHealingMetrics);
      }
      if (ShowDamageMetrics != false) {
        output.WriteRawTag(64);
        output.WriteBool(ShowDamageMetrics);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Language);
      }
      if (filters_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Filters);
      }
      if (ShowEpValues != false) {
        output.WriteRawTag(88);
        output.WriteBool(ShowEpValues);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Iterations != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Iterations);
      }
      if (Phase != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Phase);
      }
      if (FixedRngSeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FixedRngSeed);
      }
      if (ShowDamageMetrics != false) {
        size += 1 + 1;
      }
      if (ShowThreatMetrics != false) {
        size += 1 + 1;
      }
      if (ShowHealingMetrics != false) {
        size += 1 + 1;
      }
      if (ShowExperimental != false) {
        size += 1 + 1;
      }
      if (ShowEpValues != false) {
        size += 1 + 1;
      }
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (Faction != global::SirusDbScrapper.UIDatabase.Faction.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Faction);
      }
      if (filters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filters);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SimSettings other) {
      if (other == null) {
        return;
      }
      if (other.Iterations != 0) {
        Iterations = other.Iterations;
      }
      if (other.Phase != 0) {
        Phase = other.Phase;
      }
      if (other.FixedRngSeed != 0L) {
        FixedRngSeed = other.FixedRngSeed;
      }
      if (other.ShowDamageMetrics != false) {
        ShowDamageMetrics = other.ShowDamageMetrics;
      }
      if (other.ShowThreatMetrics != false) {
        ShowThreatMetrics = other.ShowThreatMetrics;
      }
      if (other.ShowHealingMetrics != false) {
        ShowHealingMetrics = other.ShowHealingMetrics;
      }
      if (other.ShowExperimental != false) {
        ShowExperimental = other.ShowExperimental;
      }
      if (other.ShowEpValues != false) {
        ShowEpValues = other.ShowEpValues;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      if (other.Faction != global::SirusDbScrapper.UIDatabase.Faction.Unknown) {
        Faction = other.Faction;
      }
      if (other.filters_ != null) {
        if (filters_ == null) {
          Filters = new global::SirusDbScrapper.UIDatabase.DatabaseFilters();
        }
        Filters.MergeFrom(other.Filters);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Iterations = input.ReadInt32();
            break;
          }
          case 16: {
            Phase = input.ReadInt32();
            break;
          }
          case 24: {
            FixedRngSeed = input.ReadInt64();
            break;
          }
          case 32: {
            ShowThreatMetrics = input.ReadBool();
            break;
          }
          case 40: {
            ShowExperimental = input.ReadBool();
            break;
          }
          case 48: {
            Faction = (global::SirusDbScrapper.UIDatabase.Faction) input.ReadEnum();
            break;
          }
          case 56: {
            ShowHealingMetrics = input.ReadBool();
            break;
          }
          case 64: {
            ShowDamageMetrics = input.ReadBool();
            break;
          }
          case 74: {
            Language = input.ReadString();
            break;
          }
          case 82: {
            if (filters_ == null) {
              Filters = new global::SirusDbScrapper.UIDatabase.DatabaseFilters();
            }
            input.ReadMessage(Filters);
            break;
          }
          case 88: {
            ShowEpValues = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Iterations = input.ReadInt32();
            break;
          }
          case 16: {
            Phase = input.ReadInt32();
            break;
          }
          case 24: {
            FixedRngSeed = input.ReadInt64();
            break;
          }
          case 32: {
            ShowThreatMetrics = input.ReadBool();
            break;
          }
          case 40: {
            ShowExperimental = input.ReadBool();
            break;
          }
          case 48: {
            Faction = (global::SirusDbScrapper.UIDatabase.Faction) input.ReadEnum();
            break;
          }
          case 56: {
            ShowHealingMetrics = input.ReadBool();
            break;
          }
          case 64: {
            ShowDamageMetrics = input.ReadBool();
            break;
          }
          case 74: {
            Language = input.ReadString();
            break;
          }
          case 82: {
            if (filters_ == null) {
              Filters = new global::SirusDbScrapper.UIDatabase.DatabaseFilters();
            }
            input.ReadMessage(Filters);
            break;
          }
          case 88: {
            ShowEpValues = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains all information that is imported/exported from an individual sim.
  /// </summary>
  public sealed partial class IndividualSimSettings : pb::IMessage<IndividualSimSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IndividualSimSettings> _parser = new pb::MessageParser<IndividualSimSettings>(() => new IndividualSimSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IndividualSimSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IndividualSimSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IndividualSimSettings(IndividualSimSettings other) : this() {
      settings_ = other.settings_ != null ? other.settings_.Clone() : null;
      raidBuffs_ = other.raidBuffs_ != null ? other.raidBuffs_.Clone() : null;
      debuffs_ = other.debuffs_ != null ? other.debuffs_.Clone() : null;
      tanks_ = other.tanks_.Clone();
      partyBuffs_ = other.partyBuffs_ != null ? other.partyBuffs_.Clone() : null;
      player_ = other.player_ != null ? other.player_.Clone() : null;
      encounter_ = other.encounter_ != null ? other.encounter_.Clone() : null;
      targetDummies_ = other.targetDummies_;
      epWeightsStats_ = other.epWeightsStats_ != null ? other.epWeightsStats_.Clone() : null;
      epRatios_ = other.epRatios_.Clone();
      dpsRefStat_ = other.dpsRefStat_;
      healRefStat_ = other.healRefStat_;
      tankRefStat_ = other.tankRefStat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IndividualSimSettings Clone() {
      return new IndividualSimSettings(this);
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 5;
    private global::SirusDbScrapper.UIDatabase.SimSettings settings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.SimSettings Settings {
      get { return settings_; }
      set {
        settings_ = value;
      }
    }

    /// <summary>Field number for the "raid_buffs" field.</summary>
    public const int RaidBuffsFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.RaidBuffs raidBuffs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.RaidBuffs RaidBuffs {
      get { return raidBuffs_; }
      set {
        raidBuffs_ = value;
      }
    }

    /// <summary>Field number for the "debuffs" field.</summary>
    public const int DebuffsFieldNumber = 8;
    private global::SirusDbScrapper.UIDatabase.Debuffs debuffs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Debuffs Debuffs {
      get { return debuffs_; }
      set {
        debuffs_ = value;
      }
    }

    /// <summary>Field number for the "tanks" field.</summary>
    public const int TanksFieldNumber = 7;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.UnitReference> _repeated_tanks_codec
        = pb::FieldCodec.ForMessage(58, global::SirusDbScrapper.UIDatabase.UnitReference.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UnitReference> tanks_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UnitReference>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.UnitReference> Tanks {
      get { return tanks_; }
    }

    /// <summary>Field number for the "party_buffs" field.</summary>
    public const int PartyBuffsFieldNumber = 2;
    private global::SirusDbScrapper.UIDatabase.PartyBuffs partyBuffs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.PartyBuffs PartyBuffs {
      get { return partyBuffs_; }
      set {
        partyBuffs_ = value;
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.Player player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Player Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "encounter" field.</summary>
    public const int EncounterFieldNumber = 4;
    private global::SirusDbScrapper.UIDatabase.Encounter encounter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Encounter Encounter {
      get { return encounter_; }
      set {
        encounter_ = value;
      }
    }

    /// <summary>Field number for the "target_dummies" field.</summary>
    public const int TargetDummiesFieldNumber = 9;
    private int targetDummies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TargetDummies {
      get { return targetDummies_; }
      set {
        targetDummies_ = value;
      }
    }

    /// <summary>Field number for the "ep_weights_stats" field.</summary>
    public const int EpWeightsStatsFieldNumber = 10;
    private global::SirusDbScrapper.UIDatabase.UnitStats epWeightsStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.UnitStats EpWeightsStats {
      get { return epWeightsStats_; }
      set {
        epWeightsStats_ = value;
      }
    }

    /// <summary>Field number for the "ep_ratios" field.</summary>
    public const int EpRatiosFieldNumber = 11;
    private static readonly pb::FieldCodec<double> _repeated_epRatios_codec
        = pb::FieldCodec.ForDouble(90);
    private readonly pbc::RepeatedField<double> epRatios_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> EpRatios {
      get { return epRatios_; }
    }

    /// <summary>Field number for the "dps_ref_stat" field.</summary>
    public const int DpsRefStatFieldNumber = 12;
    private global::SirusDbScrapper.UIDatabase.Stat dpsRefStat_ = global::SirusDbScrapper.UIDatabase.Stat.Strength;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Stat DpsRefStat {
      get { return dpsRefStat_; }
      set {
        dpsRefStat_ = value;
      }
    }

    /// <summary>Field number for the "heal_ref_stat" field.</summary>
    public const int HealRefStatFieldNumber = 13;
    private global::SirusDbScrapper.UIDatabase.Stat healRefStat_ = global::SirusDbScrapper.UIDatabase.Stat.Strength;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Stat HealRefStat {
      get { return healRefStat_; }
      set {
        healRefStat_ = value;
      }
    }

    /// <summary>Field number for the "tank_ref_stat" field.</summary>
    public const int TankRefStatFieldNumber = 14;
    private global::SirusDbScrapper.UIDatabase.Stat tankRefStat_ = global::SirusDbScrapper.UIDatabase.Stat.Strength;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Stat TankRefStat {
      get { return tankRefStat_; }
      set {
        tankRefStat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IndividualSimSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IndividualSimSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Settings, other.Settings)) return false;
      if (!object.Equals(RaidBuffs, other.RaidBuffs)) return false;
      if (!object.Equals(Debuffs, other.Debuffs)) return false;
      if(!tanks_.Equals(other.tanks_)) return false;
      if (!object.Equals(PartyBuffs, other.PartyBuffs)) return false;
      if (!object.Equals(Player, other.Player)) return false;
      if (!object.Equals(Encounter, other.Encounter)) return false;
      if (TargetDummies != other.TargetDummies) return false;
      if (!object.Equals(EpWeightsStats, other.EpWeightsStats)) return false;
      if(!epRatios_.Equals(other.epRatios_)) return false;
      if (DpsRefStat != other.DpsRefStat) return false;
      if (HealRefStat != other.HealRefStat) return false;
      if (TankRefStat != other.TankRefStat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (settings_ != null) hash ^= Settings.GetHashCode();
      if (raidBuffs_ != null) hash ^= RaidBuffs.GetHashCode();
      if (debuffs_ != null) hash ^= Debuffs.GetHashCode();
      hash ^= tanks_.GetHashCode();
      if (partyBuffs_ != null) hash ^= PartyBuffs.GetHashCode();
      if (player_ != null) hash ^= Player.GetHashCode();
      if (encounter_ != null) hash ^= Encounter.GetHashCode();
      if (TargetDummies != 0) hash ^= TargetDummies.GetHashCode();
      if (epWeightsStats_ != null) hash ^= EpWeightsStats.GetHashCode();
      hash ^= epRatios_.GetHashCode();
      if (DpsRefStat != global::SirusDbScrapper.UIDatabase.Stat.Strength) hash ^= DpsRefStat.GetHashCode();
      if (HealRefStat != global::SirusDbScrapper.UIDatabase.Stat.Strength) hash ^= HealRefStat.GetHashCode();
      if (TankRefStat != global::SirusDbScrapper.UIDatabase.Stat.Strength) hash ^= TankRefStat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (raidBuffs_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RaidBuffs);
      }
      if (partyBuffs_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PartyBuffs);
      }
      if (player_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Player);
      }
      if (encounter_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Encounter);
      }
      if (settings_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Settings);
      }
      tanks_.WriteTo(output, _repeated_tanks_codec);
      if (debuffs_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Debuffs);
      }
      if (TargetDummies != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(TargetDummies);
      }
      if (epWeightsStats_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(EpWeightsStats);
      }
      epRatios_.WriteTo(output, _repeated_epRatios_codec);
      if (DpsRefStat != global::SirusDbScrapper.UIDatabase.Stat.Strength) {
        output.WriteRawTag(96);
        output.WriteEnum((int) DpsRefStat);
      }
      if (HealRefStat != global::SirusDbScrapper.UIDatabase.Stat.Strength) {
        output.WriteRawTag(104);
        output.WriteEnum((int) HealRefStat);
      }
      if (TankRefStat != global::SirusDbScrapper.UIDatabase.Stat.Strength) {
        output.WriteRawTag(112);
        output.WriteEnum((int) TankRefStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (raidBuffs_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RaidBuffs);
      }
      if (partyBuffs_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PartyBuffs);
      }
      if (player_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Player);
      }
      if (encounter_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Encounter);
      }
      if (settings_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Settings);
      }
      tanks_.WriteTo(ref output, _repeated_tanks_codec);
      if (debuffs_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Debuffs);
      }
      if (TargetDummies != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(TargetDummies);
      }
      if (epWeightsStats_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(EpWeightsStats);
      }
      epRatios_.WriteTo(ref output, _repeated_epRatios_codec);
      if (DpsRefStat != global::SirusDbScrapper.UIDatabase.Stat.Strength) {
        output.WriteRawTag(96);
        output.WriteEnum((int) DpsRefStat);
      }
      if (HealRefStat != global::SirusDbScrapper.UIDatabase.Stat.Strength) {
        output.WriteRawTag(104);
        output.WriteEnum((int) HealRefStat);
      }
      if (TankRefStat != global::SirusDbScrapper.UIDatabase.Stat.Strength) {
        output.WriteRawTag(112);
        output.WriteEnum((int) TankRefStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (settings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Settings);
      }
      if (raidBuffs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RaidBuffs);
      }
      if (debuffs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Debuffs);
      }
      size += tanks_.CalculateSize(_repeated_tanks_codec);
      if (partyBuffs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartyBuffs);
      }
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (encounter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Encounter);
      }
      if (TargetDummies != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetDummies);
      }
      if (epWeightsStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EpWeightsStats);
      }
      size += epRatios_.CalculateSize(_repeated_epRatios_codec);
      if (DpsRefStat != global::SirusDbScrapper.UIDatabase.Stat.Strength) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DpsRefStat);
      }
      if (HealRefStat != global::SirusDbScrapper.UIDatabase.Stat.Strength) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HealRefStat);
      }
      if (TankRefStat != global::SirusDbScrapper.UIDatabase.Stat.Strength) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TankRefStat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IndividualSimSettings other) {
      if (other == null) {
        return;
      }
      if (other.settings_ != null) {
        if (settings_ == null) {
          Settings = new global::SirusDbScrapper.UIDatabase.SimSettings();
        }
        Settings.MergeFrom(other.Settings);
      }
      if (other.raidBuffs_ != null) {
        if (raidBuffs_ == null) {
          RaidBuffs = new global::SirusDbScrapper.UIDatabase.RaidBuffs();
        }
        RaidBuffs.MergeFrom(other.RaidBuffs);
      }
      if (other.debuffs_ != null) {
        if (debuffs_ == null) {
          Debuffs = new global::SirusDbScrapper.UIDatabase.Debuffs();
        }
        Debuffs.MergeFrom(other.Debuffs);
      }
      tanks_.Add(other.tanks_);
      if (other.partyBuffs_ != null) {
        if (partyBuffs_ == null) {
          PartyBuffs = new global::SirusDbScrapper.UIDatabase.PartyBuffs();
        }
        PartyBuffs.MergeFrom(other.PartyBuffs);
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::SirusDbScrapper.UIDatabase.Player();
        }
        Player.MergeFrom(other.Player);
      }
      if (other.encounter_ != null) {
        if (encounter_ == null) {
          Encounter = new global::SirusDbScrapper.UIDatabase.Encounter();
        }
        Encounter.MergeFrom(other.Encounter);
      }
      if (other.TargetDummies != 0) {
        TargetDummies = other.TargetDummies;
      }
      if (other.epWeightsStats_ != null) {
        if (epWeightsStats_ == null) {
          EpWeightsStats = new global::SirusDbScrapper.UIDatabase.UnitStats();
        }
        EpWeightsStats.MergeFrom(other.EpWeightsStats);
      }
      epRatios_.Add(other.epRatios_);
      if (other.DpsRefStat != global::SirusDbScrapper.UIDatabase.Stat.Strength) {
        DpsRefStat = other.DpsRefStat;
      }
      if (other.HealRefStat != global::SirusDbScrapper.UIDatabase.Stat.Strength) {
        HealRefStat = other.HealRefStat;
      }
      if (other.TankRefStat != global::SirusDbScrapper.UIDatabase.Stat.Strength) {
        TankRefStat = other.TankRefStat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (raidBuffs_ == null) {
              RaidBuffs = new global::SirusDbScrapper.UIDatabase.RaidBuffs();
            }
            input.ReadMessage(RaidBuffs);
            break;
          }
          case 18: {
            if (partyBuffs_ == null) {
              PartyBuffs = new global::SirusDbScrapper.UIDatabase.PartyBuffs();
            }
            input.ReadMessage(PartyBuffs);
            break;
          }
          case 26: {
            if (player_ == null) {
              Player = new global::SirusDbScrapper.UIDatabase.Player();
            }
            input.ReadMessage(Player);
            break;
          }
          case 34: {
            if (encounter_ == null) {
              Encounter = new global::SirusDbScrapper.UIDatabase.Encounter();
            }
            input.ReadMessage(Encounter);
            break;
          }
          case 42: {
            if (settings_ == null) {
              Settings = new global::SirusDbScrapper.UIDatabase.SimSettings();
            }
            input.ReadMessage(Settings);
            break;
          }
          case 58: {
            tanks_.AddEntriesFrom(input, _repeated_tanks_codec);
            break;
          }
          case 66: {
            if (debuffs_ == null) {
              Debuffs = new global::SirusDbScrapper.UIDatabase.Debuffs();
            }
            input.ReadMessage(Debuffs);
            break;
          }
          case 72: {
            TargetDummies = input.ReadInt32();
            break;
          }
          case 82: {
            if (epWeightsStats_ == null) {
              EpWeightsStats = new global::SirusDbScrapper.UIDatabase.UnitStats();
            }
            input.ReadMessage(EpWeightsStats);
            break;
          }
          case 90:
          case 89: {
            epRatios_.AddEntriesFrom(input, _repeated_epRatios_codec);
            break;
          }
          case 96: {
            DpsRefStat = (global::SirusDbScrapper.UIDatabase.Stat) input.ReadEnum();
            break;
          }
          case 104: {
            HealRefStat = (global::SirusDbScrapper.UIDatabase.Stat) input.ReadEnum();
            break;
          }
          case 112: {
            TankRefStat = (global::SirusDbScrapper.UIDatabase.Stat) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (raidBuffs_ == null) {
              RaidBuffs = new global::SirusDbScrapper.UIDatabase.RaidBuffs();
            }
            input.ReadMessage(RaidBuffs);
            break;
          }
          case 18: {
            if (partyBuffs_ == null) {
              PartyBuffs = new global::SirusDbScrapper.UIDatabase.PartyBuffs();
            }
            input.ReadMessage(PartyBuffs);
            break;
          }
          case 26: {
            if (player_ == null) {
              Player = new global::SirusDbScrapper.UIDatabase.Player();
            }
            input.ReadMessage(Player);
            break;
          }
          case 34: {
            if (encounter_ == null) {
              Encounter = new global::SirusDbScrapper.UIDatabase.Encounter();
            }
            input.ReadMessage(Encounter);
            break;
          }
          case 42: {
            if (settings_ == null) {
              Settings = new global::SirusDbScrapper.UIDatabase.SimSettings();
            }
            input.ReadMessage(Settings);
            break;
          }
          case 58: {
            tanks_.AddEntriesFrom(ref input, _repeated_tanks_codec);
            break;
          }
          case 66: {
            if (debuffs_ == null) {
              Debuffs = new global::SirusDbScrapper.UIDatabase.Debuffs();
            }
            input.ReadMessage(Debuffs);
            break;
          }
          case 72: {
            TargetDummies = input.ReadInt32();
            break;
          }
          case 82: {
            if (epWeightsStats_ == null) {
              EpWeightsStats = new global::SirusDbScrapper.UIDatabase.UnitStats();
            }
            input.ReadMessage(EpWeightsStats);
            break;
          }
          case 90:
          case 89: {
            epRatios_.AddEntriesFrom(ref input, _repeated_epRatios_codec);
            break;
          }
          case 96: {
            DpsRefStat = (global::SirusDbScrapper.UIDatabase.Stat) input.ReadEnum();
            break;
          }
          case 104: {
            HealRefStat = (global::SirusDbScrapper.UIDatabase.Stat) input.ReadEnum();
            break;
          }
          case 112: {
            TankRefStat = (global::SirusDbScrapper.UIDatabase.Stat) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Local storage data for gear settings.
  /// </summary>
  public sealed partial class SavedGearSet : pb::IMessage<SavedGearSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SavedGearSet> _parser = new pb::MessageParser<SavedGearSet>(() => new SavedGearSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SavedGearSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedGearSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedGearSet(SavedGearSet other) : this() {
      gear_ = other.gear_ != null ? other.gear_.Clone() : null;
      bonusStatsStats_ = other.bonusStatsStats_ != null ? other.bonusStatsStats_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedGearSet Clone() {
      return new SavedGearSet(this);
    }

    /// <summary>Field number for the "gear" field.</summary>
    public const int GearFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.EquipmentSpec gear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.EquipmentSpec Gear {
      get { return gear_; }
      set {
        gear_ = value;
      }
    }

    /// <summary>Field number for the "bonus_stats_stats" field.</summary>
    public const int BonusStatsStatsFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.UnitStats bonusStatsStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.UnitStats BonusStatsStats {
      get { return bonusStatsStats_; }
      set {
        bonusStatsStats_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SavedGearSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SavedGearSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Gear, other.Gear)) return false;
      if (!object.Equals(BonusStatsStats, other.BonusStatsStats)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (gear_ != null) hash ^= Gear.GetHashCode();
      if (bonusStatsStats_ != null) hash ^= BonusStatsStats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (gear_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Gear);
      }
      if (bonusStatsStats_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BonusStatsStats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (gear_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Gear);
      }
      if (bonusStatsStats_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BonusStatsStats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (gear_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gear);
      }
      if (bonusStatsStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BonusStatsStats);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SavedGearSet other) {
      if (other == null) {
        return;
      }
      if (other.gear_ != null) {
        if (gear_ == null) {
          Gear = new global::SirusDbScrapper.UIDatabase.EquipmentSpec();
        }
        Gear.MergeFrom(other.Gear);
      }
      if (other.bonusStatsStats_ != null) {
        if (bonusStatsStats_ == null) {
          BonusStatsStats = new global::SirusDbScrapper.UIDatabase.UnitStats();
        }
        BonusStatsStats.MergeFrom(other.BonusStatsStats);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (gear_ == null) {
              Gear = new global::SirusDbScrapper.UIDatabase.EquipmentSpec();
            }
            input.ReadMessage(Gear);
            break;
          }
          case 26: {
            if (bonusStatsStats_ == null) {
              BonusStatsStats = new global::SirusDbScrapper.UIDatabase.UnitStats();
            }
            input.ReadMessage(BonusStatsStats);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (gear_ == null) {
              Gear = new global::SirusDbScrapper.UIDatabase.EquipmentSpec();
            }
            input.ReadMessage(Gear);
            break;
          }
          case 26: {
            if (bonusStatsStats_ == null) {
              BonusStatsStats = new global::SirusDbScrapper.UIDatabase.UnitStats();
            }
            input.ReadMessage(BonusStatsStats);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Local storage data for other settings.
  /// </summary>
  public sealed partial class SavedSettings : pb::IMessage<SavedSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SavedSettings> _parser = new pb::MessageParser<SavedSettings>(() => new SavedSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SavedSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedSettings(SavedSettings other) : this() {
      raidBuffs_ = other.raidBuffs_ != null ? other.raidBuffs_.Clone() : null;
      partyBuffs_ = other.partyBuffs_ != null ? other.partyBuffs_.Clone() : null;
      debuffs_ = other.debuffs_ != null ? other.debuffs_.Clone() : null;
      playerBuffs_ = other.playerBuffs_ != null ? other.playerBuffs_.Clone() : null;
      consumes_ = other.consumes_ != null ? other.consumes_.Clone() : null;
      race_ = other.race_;
      professions_ = other.professions_.Clone();
      enableItemSwap_ = other.enableItemSwap_;
      itemSwap_ = other.itemSwap_ != null ? other.itemSwap_.Clone() : null;
      reactionTimeMs_ = other.reactionTimeMs_;
      channelClipDelayMs_ = other.channelClipDelayMs_;
      inFrontOfTarget_ = other.inFrontOfTarget_;
      distanceFromTarget_ = other.distanceFromTarget_;
      healingModel_ = other.healingModel_ != null ? other.healingModel_.Clone() : null;
      nibelungAverageCasts_ = other.nibelungAverageCasts_;
      nibelungAverageCastsSet_ = other.nibelungAverageCastsSet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedSettings Clone() {
      return new SavedSettings(this);
    }

    /// <summary>Field number for the "raid_buffs" field.</summary>
    public const int RaidBuffsFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.RaidBuffs raidBuffs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.RaidBuffs RaidBuffs {
      get { return raidBuffs_; }
      set {
        raidBuffs_ = value;
      }
    }

    /// <summary>Field number for the "party_buffs" field.</summary>
    public const int PartyBuffsFieldNumber = 2;
    private global::SirusDbScrapper.UIDatabase.PartyBuffs partyBuffs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.PartyBuffs PartyBuffs {
      get { return partyBuffs_; }
      set {
        partyBuffs_ = value;
      }
    }

    /// <summary>Field number for the "debuffs" field.</summary>
    public const int DebuffsFieldNumber = 7;
    private global::SirusDbScrapper.UIDatabase.Debuffs debuffs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Debuffs Debuffs {
      get { return debuffs_; }
      set {
        debuffs_ = value;
      }
    }

    /// <summary>Field number for the "player_buffs" field.</summary>
    public const int PlayerBuffsFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.IndividualBuffs playerBuffs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.IndividualBuffs PlayerBuffs {
      get { return playerBuffs_; }
      set {
        playerBuffs_ = value;
      }
    }

    /// <summary>Field number for the "consumes" field.</summary>
    public const int ConsumesFieldNumber = 4;
    private global::SirusDbScrapper.UIDatabase.Consumes consumes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Consumes Consumes {
      get { return consumes_; }
      set {
        consumes_ = value;
      }
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 5;
    private global::SirusDbScrapper.UIDatabase.Race race_ = global::SirusDbScrapper.UIDatabase.Race.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Race Race {
      get { return race_; }
      set {
        race_ = value;
      }
    }

    /// <summary>Field number for the "professions" field.</summary>
    public const int ProfessionsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.Profession> _repeated_professions_codec
        = pb::FieldCodec.ForEnum(74, x => (int) x, x => (global::SirusDbScrapper.UIDatabase.Profession) x);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Profession> professions_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Profession>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Profession> Professions {
      get { return professions_; }
    }

    /// <summary>Field number for the "enable_item_swap" field.</summary>
    public const int EnableItemSwapFieldNumber = 18;
    private bool enableItemSwap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableItemSwap {
      get { return enableItemSwap_; }
      set {
        enableItemSwap_ = value;
      }
    }

    /// <summary>Field number for the "item_swap" field.</summary>
    public const int ItemSwapFieldNumber = 17;
    private global::SirusDbScrapper.UIDatabase.ItemSwap itemSwap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.ItemSwap ItemSwap {
      get { return itemSwap_; }
      set {
        itemSwap_ = value;
      }
    }

    /// <summary>Field number for the "reaction_time_ms" field.</summary>
    public const int ReactionTimeMsFieldNumber = 10;
    private int reactionTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReactionTimeMs {
      get { return reactionTimeMs_; }
      set {
        reactionTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "channel_clip_delay_ms" field.</summary>
    public const int ChannelClipDelayMsFieldNumber = 14;
    private int channelClipDelayMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChannelClipDelayMs {
      get { return channelClipDelayMs_; }
      set {
        channelClipDelayMs_ = value;
      }
    }

    /// <summary>Field number for the "in_front_of_target" field.</summary>
    public const int InFrontOfTargetFieldNumber = 11;
    private bool inFrontOfTarget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InFrontOfTarget {
      get { return inFrontOfTarget_; }
      set {
        inFrontOfTarget_ = value;
      }
    }

    /// <summary>Field number for the "distance_from_target" field.</summary>
    public const int DistanceFromTargetFieldNumber = 12;
    private double distanceFromTarget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DistanceFromTarget {
      get { return distanceFromTarget_; }
      set {
        distanceFromTarget_ = value;
      }
    }

    /// <summary>Field number for the "healing_model" field.</summary>
    public const int HealingModelFieldNumber = 13;
    private global::SirusDbScrapper.UIDatabase.HealingModel healingModel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.HealingModel HealingModel {
      get { return healingModel_; }
      set {
        healingModel_ = value;
      }
    }

    /// <summary>Field number for the "nibelung_average_casts" field.</summary>
    public const int NibelungAverageCastsFieldNumber = 15;
    private double nibelungAverageCasts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double NibelungAverageCasts {
      get { return nibelungAverageCasts_; }
      set {
        nibelungAverageCasts_ = value;
      }
    }

    /// <summary>Field number for the "nibelung_average_casts_set" field.</summary>
    public const int NibelungAverageCastsSetFieldNumber = 16;
    private bool nibelungAverageCastsSet_;
    /// <summary>
    /// hack to set a proper default value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NibelungAverageCastsSet {
      get { return nibelungAverageCastsSet_; }
      set {
        nibelungAverageCastsSet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SavedSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SavedSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RaidBuffs, other.RaidBuffs)) return false;
      if (!object.Equals(PartyBuffs, other.PartyBuffs)) return false;
      if (!object.Equals(Debuffs, other.Debuffs)) return false;
      if (!object.Equals(PlayerBuffs, other.PlayerBuffs)) return false;
      if (!object.Equals(Consumes, other.Consumes)) return false;
      if (Race != other.Race) return false;
      if(!professions_.Equals(other.professions_)) return false;
      if (EnableItemSwap != other.EnableItemSwap) return false;
      if (!object.Equals(ItemSwap, other.ItemSwap)) return false;
      if (ReactionTimeMs != other.ReactionTimeMs) return false;
      if (ChannelClipDelayMs != other.ChannelClipDelayMs) return false;
      if (InFrontOfTarget != other.InFrontOfTarget) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DistanceFromTarget, other.DistanceFromTarget)) return false;
      if (!object.Equals(HealingModel, other.HealingModel)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NibelungAverageCasts, other.NibelungAverageCasts)) return false;
      if (NibelungAverageCastsSet != other.NibelungAverageCastsSet) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (raidBuffs_ != null) hash ^= RaidBuffs.GetHashCode();
      if (partyBuffs_ != null) hash ^= PartyBuffs.GetHashCode();
      if (debuffs_ != null) hash ^= Debuffs.GetHashCode();
      if (playerBuffs_ != null) hash ^= PlayerBuffs.GetHashCode();
      if (consumes_ != null) hash ^= Consumes.GetHashCode();
      if (Race != global::SirusDbScrapper.UIDatabase.Race.Unknown) hash ^= Race.GetHashCode();
      hash ^= professions_.GetHashCode();
      if (EnableItemSwap != false) hash ^= EnableItemSwap.GetHashCode();
      if (itemSwap_ != null) hash ^= ItemSwap.GetHashCode();
      if (ReactionTimeMs != 0) hash ^= ReactionTimeMs.GetHashCode();
      if (ChannelClipDelayMs != 0) hash ^= ChannelClipDelayMs.GetHashCode();
      if (InFrontOfTarget != false) hash ^= InFrontOfTarget.GetHashCode();
      if (DistanceFromTarget != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DistanceFromTarget);
      if (healingModel_ != null) hash ^= HealingModel.GetHashCode();
      if (NibelungAverageCasts != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NibelungAverageCasts);
      if (NibelungAverageCastsSet != false) hash ^= NibelungAverageCastsSet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (raidBuffs_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RaidBuffs);
      }
      if (partyBuffs_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PartyBuffs);
      }
      if (playerBuffs_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerBuffs);
      }
      if (consumes_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Consumes);
      }
      if (Race != global::SirusDbScrapper.UIDatabase.Race.Unknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Race);
      }
      if (debuffs_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Debuffs);
      }
      professions_.WriteTo(output, _repeated_professions_codec);
      if (ReactionTimeMs != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ReactionTimeMs);
      }
      if (InFrontOfTarget != false) {
        output.WriteRawTag(88);
        output.WriteBool(InFrontOfTarget);
      }
      if (DistanceFromTarget != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(DistanceFromTarget);
      }
      if (healingModel_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(HealingModel);
      }
      if (ChannelClipDelayMs != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(ChannelClipDelayMs);
      }
      if (NibelungAverageCasts != 0D) {
        output.WriteRawTag(121);
        output.WriteDouble(NibelungAverageCasts);
      }
      if (NibelungAverageCastsSet != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(NibelungAverageCastsSet);
      }
      if (itemSwap_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ItemSwap);
      }
      if (EnableItemSwap != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(EnableItemSwap);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (raidBuffs_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RaidBuffs);
      }
      if (partyBuffs_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PartyBuffs);
      }
      if (playerBuffs_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerBuffs);
      }
      if (consumes_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Consumes);
      }
      if (Race != global::SirusDbScrapper.UIDatabase.Race.Unknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Race);
      }
      if (debuffs_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Debuffs);
      }
      professions_.WriteTo(ref output, _repeated_professions_codec);
      if (ReactionTimeMs != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ReactionTimeMs);
      }
      if (InFrontOfTarget != false) {
        output.WriteRawTag(88);
        output.WriteBool(InFrontOfTarget);
      }
      if (DistanceFromTarget != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(DistanceFromTarget);
      }
      if (healingModel_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(HealingModel);
      }
      if (ChannelClipDelayMs != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(ChannelClipDelayMs);
      }
      if (NibelungAverageCasts != 0D) {
        output.WriteRawTag(121);
        output.WriteDouble(NibelungAverageCasts);
      }
      if (NibelungAverageCastsSet != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(NibelungAverageCastsSet);
      }
      if (itemSwap_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ItemSwap);
      }
      if (EnableItemSwap != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(EnableItemSwap);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (raidBuffs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RaidBuffs);
      }
      if (partyBuffs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartyBuffs);
      }
      if (debuffs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Debuffs);
      }
      if (playerBuffs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerBuffs);
      }
      if (consumes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumes);
      }
      if (Race != global::SirusDbScrapper.UIDatabase.Race.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Race);
      }
      size += professions_.CalculateSize(_repeated_professions_codec);
      if (EnableItemSwap != false) {
        size += 2 + 1;
      }
      if (itemSwap_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemSwap);
      }
      if (ReactionTimeMs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReactionTimeMs);
      }
      if (ChannelClipDelayMs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChannelClipDelayMs);
      }
      if (InFrontOfTarget != false) {
        size += 1 + 1;
      }
      if (DistanceFromTarget != 0D) {
        size += 1 + 8;
      }
      if (healingModel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HealingModel);
      }
      if (NibelungAverageCasts != 0D) {
        size += 1 + 8;
      }
      if (NibelungAverageCastsSet != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SavedSettings other) {
      if (other == null) {
        return;
      }
      if (other.raidBuffs_ != null) {
        if (raidBuffs_ == null) {
          RaidBuffs = new global::SirusDbScrapper.UIDatabase.RaidBuffs();
        }
        RaidBuffs.MergeFrom(other.RaidBuffs);
      }
      if (other.partyBuffs_ != null) {
        if (partyBuffs_ == null) {
          PartyBuffs = new global::SirusDbScrapper.UIDatabase.PartyBuffs();
        }
        PartyBuffs.MergeFrom(other.PartyBuffs);
      }
      if (other.debuffs_ != null) {
        if (debuffs_ == null) {
          Debuffs = new global::SirusDbScrapper.UIDatabase.Debuffs();
        }
        Debuffs.MergeFrom(other.Debuffs);
      }
      if (other.playerBuffs_ != null) {
        if (playerBuffs_ == null) {
          PlayerBuffs = new global::SirusDbScrapper.UIDatabase.IndividualBuffs();
        }
        PlayerBuffs.MergeFrom(other.PlayerBuffs);
      }
      if (other.consumes_ != null) {
        if (consumes_ == null) {
          Consumes = new global::SirusDbScrapper.UIDatabase.Consumes();
        }
        Consumes.MergeFrom(other.Consumes);
      }
      if (other.Race != global::SirusDbScrapper.UIDatabase.Race.Unknown) {
        Race = other.Race;
      }
      professions_.Add(other.professions_);
      if (other.EnableItemSwap != false) {
        EnableItemSwap = other.EnableItemSwap;
      }
      if (other.itemSwap_ != null) {
        if (itemSwap_ == null) {
          ItemSwap = new global::SirusDbScrapper.UIDatabase.ItemSwap();
        }
        ItemSwap.MergeFrom(other.ItemSwap);
      }
      if (other.ReactionTimeMs != 0) {
        ReactionTimeMs = other.ReactionTimeMs;
      }
      if (other.ChannelClipDelayMs != 0) {
        ChannelClipDelayMs = other.ChannelClipDelayMs;
      }
      if (other.InFrontOfTarget != false) {
        InFrontOfTarget = other.InFrontOfTarget;
      }
      if (other.DistanceFromTarget != 0D) {
        DistanceFromTarget = other.DistanceFromTarget;
      }
      if (other.healingModel_ != null) {
        if (healingModel_ == null) {
          HealingModel = new global::SirusDbScrapper.UIDatabase.HealingModel();
        }
        HealingModel.MergeFrom(other.HealingModel);
      }
      if (other.NibelungAverageCasts != 0D) {
        NibelungAverageCasts = other.NibelungAverageCasts;
      }
      if (other.NibelungAverageCastsSet != false) {
        NibelungAverageCastsSet = other.NibelungAverageCastsSet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (raidBuffs_ == null) {
              RaidBuffs = new global::SirusDbScrapper.UIDatabase.RaidBuffs();
            }
            input.ReadMessage(RaidBuffs);
            break;
          }
          case 18: {
            if (partyBuffs_ == null) {
              PartyBuffs = new global::SirusDbScrapper.UIDatabase.PartyBuffs();
            }
            input.ReadMessage(PartyBuffs);
            break;
          }
          case 26: {
            if (playerBuffs_ == null) {
              PlayerBuffs = new global::SirusDbScrapper.UIDatabase.IndividualBuffs();
            }
            input.ReadMessage(PlayerBuffs);
            break;
          }
          case 34: {
            if (consumes_ == null) {
              Consumes = new global::SirusDbScrapper.UIDatabase.Consumes();
            }
            input.ReadMessage(Consumes);
            break;
          }
          case 40: {
            Race = (global::SirusDbScrapper.UIDatabase.Race) input.ReadEnum();
            break;
          }
          case 58: {
            if (debuffs_ == null) {
              Debuffs = new global::SirusDbScrapper.UIDatabase.Debuffs();
            }
            input.ReadMessage(Debuffs);
            break;
          }
          case 74:
          case 72: {
            professions_.AddEntriesFrom(input, _repeated_professions_codec);
            break;
          }
          case 80: {
            ReactionTimeMs = input.ReadInt32();
            break;
          }
          case 88: {
            InFrontOfTarget = input.ReadBool();
            break;
          }
          case 97: {
            DistanceFromTarget = input.ReadDouble();
            break;
          }
          case 106: {
            if (healingModel_ == null) {
              HealingModel = new global::SirusDbScrapper.UIDatabase.HealingModel();
            }
            input.ReadMessage(HealingModel);
            break;
          }
          case 112: {
            ChannelClipDelayMs = input.ReadInt32();
            break;
          }
          case 121: {
            NibelungAverageCasts = input.ReadDouble();
            break;
          }
          case 128: {
            NibelungAverageCastsSet = input.ReadBool();
            break;
          }
          case 138: {
            if (itemSwap_ == null) {
              ItemSwap = new global::SirusDbScrapper.UIDatabase.ItemSwap();
            }
            input.ReadMessage(ItemSwap);
            break;
          }
          case 144: {
            EnableItemSwap = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (raidBuffs_ == null) {
              RaidBuffs = new global::SirusDbScrapper.UIDatabase.RaidBuffs();
            }
            input.ReadMessage(RaidBuffs);
            break;
          }
          case 18: {
            if (partyBuffs_ == null) {
              PartyBuffs = new global::SirusDbScrapper.UIDatabase.PartyBuffs();
            }
            input.ReadMessage(PartyBuffs);
            break;
          }
          case 26: {
            if (playerBuffs_ == null) {
              PlayerBuffs = new global::SirusDbScrapper.UIDatabase.IndividualBuffs();
            }
            input.ReadMessage(PlayerBuffs);
            break;
          }
          case 34: {
            if (consumes_ == null) {
              Consumes = new global::SirusDbScrapper.UIDatabase.Consumes();
            }
            input.ReadMessage(Consumes);
            break;
          }
          case 40: {
            Race = (global::SirusDbScrapper.UIDatabase.Race) input.ReadEnum();
            break;
          }
          case 58: {
            if (debuffs_ == null) {
              Debuffs = new global::SirusDbScrapper.UIDatabase.Debuffs();
            }
            input.ReadMessage(Debuffs);
            break;
          }
          case 74:
          case 72: {
            professions_.AddEntriesFrom(ref input, _repeated_professions_codec);
            break;
          }
          case 80: {
            ReactionTimeMs = input.ReadInt32();
            break;
          }
          case 88: {
            InFrontOfTarget = input.ReadBool();
            break;
          }
          case 97: {
            DistanceFromTarget = input.ReadDouble();
            break;
          }
          case 106: {
            if (healingModel_ == null) {
              HealingModel = new global::SirusDbScrapper.UIDatabase.HealingModel();
            }
            input.ReadMessage(HealingModel);
            break;
          }
          case 112: {
            ChannelClipDelayMs = input.ReadInt32();
            break;
          }
          case 121: {
            NibelungAverageCasts = input.ReadDouble();
            break;
          }
          case 128: {
            NibelungAverageCastsSet = input.ReadBool();
            break;
          }
          case 138: {
            if (itemSwap_ == null) {
              ItemSwap = new global::SirusDbScrapper.UIDatabase.ItemSwap();
            }
            input.ReadMessage(ItemSwap);
            break;
          }
          case 144: {
            EnableItemSwap = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SavedTalents : pb::IMessage<SavedTalents>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SavedTalents> _parser = new pb::MessageParser<SavedTalents>(() => new SavedTalents());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SavedTalents> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedTalents() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedTalents(SavedTalents other) : this() {
      talentsString_ = other.talentsString_;
      glyphs_ = other.glyphs_ != null ? other.glyphs_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedTalents Clone() {
      return new SavedTalents(this);
    }

    /// <summary>Field number for the "talents_string" field.</summary>
    public const int TalentsStringFieldNumber = 1;
    private string talentsString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TalentsString {
      get { return talentsString_; }
      set {
        talentsString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "glyphs" field.</summary>
    public const int GlyphsFieldNumber = 2;
    private global::SirusDbScrapper.UIDatabase.Glyphs glyphs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Glyphs Glyphs {
      get { return glyphs_; }
      set {
        glyphs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SavedTalents);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SavedTalents other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TalentsString != other.TalentsString) return false;
      if (!object.Equals(Glyphs, other.Glyphs)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TalentsString.Length != 0) hash ^= TalentsString.GetHashCode();
      if (glyphs_ != null) hash ^= Glyphs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TalentsString.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TalentsString);
      }
      if (glyphs_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Glyphs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TalentsString.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TalentsString);
      }
      if (glyphs_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Glyphs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TalentsString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalentsString);
      }
      if (glyphs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Glyphs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SavedTalents other) {
      if (other == null) {
        return;
      }
      if (other.TalentsString.Length != 0) {
        TalentsString = other.TalentsString;
      }
      if (other.glyphs_ != null) {
        if (glyphs_ == null) {
          Glyphs = new global::SirusDbScrapper.UIDatabase.Glyphs();
        }
        Glyphs.MergeFrom(other.Glyphs);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TalentsString = input.ReadString();
            break;
          }
          case 18: {
            if (glyphs_ == null) {
              Glyphs = new global::SirusDbScrapper.UIDatabase.Glyphs();
            }
            input.ReadMessage(Glyphs);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TalentsString = input.ReadString();
            break;
          }
          case 18: {
            if (glyphs_ == null) {
              Glyphs = new global::SirusDbScrapper.UIDatabase.Glyphs();
            }
            input.ReadMessage(Glyphs);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SavedRotation : pb::IMessage<SavedRotation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SavedRotation> _parser = new pb::MessageParser<SavedRotation>(() => new SavedRotation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SavedRotation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedRotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedRotation(SavedRotation other) : this() {
      rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedRotation Clone() {
      return new SavedRotation(this);
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.APLRotation rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.APLRotation Rotation {
      get { return rotation_; }
      set {
        rotation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SavedRotation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SavedRotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Rotation, other.Rotation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (rotation_ != null) hash ^= Rotation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (rotation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Rotation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (rotation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Rotation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SavedRotation other) {
      if (other == null) {
        return;
      }
      if (other.rotation_ != null) {
        if (rotation_ == null) {
          Rotation = new global::SirusDbScrapper.UIDatabase.APLRotation();
        }
        Rotation.MergeFrom(other.Rotation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rotation_ == null) {
              Rotation = new global::SirusDbScrapper.UIDatabase.APLRotation();
            }
            input.ReadMessage(Rotation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (rotation_ == null) {
              Rotation = new global::SirusDbScrapper.UIDatabase.APLRotation();
            }
            input.ReadMessage(Rotation);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BlessingsAssignment : pb::IMessage<BlessingsAssignment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BlessingsAssignment> _parser = new pb::MessageParser<BlessingsAssignment>(() => new BlessingsAssignment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BlessingsAssignment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlessingsAssignment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlessingsAssignment(BlessingsAssignment other) : this() {
      blessings_ = other.blessings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlessingsAssignment Clone() {
      return new BlessingsAssignment(this);
    }

    /// <summary>Field number for the "blessings" field.</summary>
    public const int BlessingsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.Blessings> _repeated_blessings_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::SirusDbScrapper.UIDatabase.Blessings) x);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Blessings> blessings_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Blessings>();
    /// <summary>
    /// Index corresponds to Spec that the blessing should be applied to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.Blessings> Blessings {
      get { return blessings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BlessingsAssignment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BlessingsAssignment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!blessings_.Equals(other.blessings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= blessings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      blessings_.WriteTo(output, _repeated_blessings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      blessings_.WriteTo(ref output, _repeated_blessings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += blessings_.CalculateSize(_repeated_blessings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BlessingsAssignment other) {
      if (other == null) {
        return;
      }
      blessings_.Add(other.blessings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            blessings_.AddEntriesFrom(input, _repeated_blessings_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            blessings_.AddEntriesFrom(ref input, _repeated_blessings_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BlessingsAssignments : pb::IMessage<BlessingsAssignments>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BlessingsAssignments> _parser = new pb::MessageParser<BlessingsAssignments>(() => new BlessingsAssignments());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BlessingsAssignments> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlessingsAssignments() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlessingsAssignments(BlessingsAssignments other) : this() {
      paladins_ = other.paladins_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlessingsAssignments Clone() {
      return new BlessingsAssignments(this);
    }

    /// <summary>Field number for the "paladins" field.</summary>
    public const int PaladinsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SirusDbScrapper.UIDatabase.BlessingsAssignment> _repeated_paladins_codec
        = pb::FieldCodec.ForMessage(10, global::SirusDbScrapper.UIDatabase.BlessingsAssignment.Parser);
    private readonly pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.BlessingsAssignment> paladins_ = new pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.BlessingsAssignment>();
    /// <summary>
    /// Assignments for each paladin.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SirusDbScrapper.UIDatabase.BlessingsAssignment> Paladins {
      get { return paladins_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BlessingsAssignments);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BlessingsAssignments other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!paladins_.Equals(other.paladins_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= paladins_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      paladins_.WriteTo(output, _repeated_paladins_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      paladins_.WriteTo(ref output, _repeated_paladins_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += paladins_.CalculateSize(_repeated_paladins_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BlessingsAssignments other) {
      if (other == null) {
        return;
      }
      paladins_.Add(other.paladins_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            paladins_.AddEntriesFrom(input, _repeated_paladins_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            paladins_.AddEntriesFrom(ref input, _repeated_paladins_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Local storage data for a saved encounter.
  /// </summary>
  public sealed partial class SavedEncounter : pb::IMessage<SavedEncounter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SavedEncounter> _parser = new pb::MessageParser<SavedEncounter>(() => new SavedEncounter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SavedEncounter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedEncounter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedEncounter(SavedEncounter other) : this() {
      encounter_ = other.encounter_ != null ? other.encounter_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedEncounter Clone() {
      return new SavedEncounter(this);
    }

    /// <summary>Field number for the "encounter" field.</summary>
    public const int EncounterFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.Encounter encounter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Encounter Encounter {
      get { return encounter_; }
      set {
        encounter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SavedEncounter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SavedEncounter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Encounter, other.Encounter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (encounter_ != null) hash ^= Encounter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (encounter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Encounter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (encounter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Encounter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (encounter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Encounter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SavedEncounter other) {
      if (other == null) {
        return;
      }
      if (other.encounter_ != null) {
        if (encounter_ == null) {
          Encounter = new global::SirusDbScrapper.UIDatabase.Encounter();
        }
        Encounter.MergeFrom(other.Encounter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (encounter_ == null) {
              Encounter = new global::SirusDbScrapper.UIDatabase.Encounter();
            }
            input.ReadMessage(Encounter);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (encounter_ == null) {
              Encounter = new global::SirusDbScrapper.UIDatabase.Encounter();
            }
            input.ReadMessage(Encounter);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Local storage data for raid sim settings.
  /// </summary>
  public sealed partial class SavedRaid : pb::IMessage<SavedRaid>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SavedRaid> _parser = new pb::MessageParser<SavedRaid>(() => new SavedRaid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SavedRaid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedRaid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedRaid(SavedRaid other) : this() {
      raid_ = other.raid_ != null ? other.raid_.Clone() : null;
      blessings_ = other.blessings_ != null ? other.blessings_.Clone() : null;
      faction_ = other.faction_;
      phase_ = other.phase_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavedRaid Clone() {
      return new SavedRaid(this);
    }

    /// <summary>Field number for the "raid" field.</summary>
    public const int RaidFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.Raid raid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Raid Raid {
      get { return raid_; }
      set {
        raid_ = value;
      }
    }

    /// <summary>Field number for the "blessings" field.</summary>
    public const int BlessingsFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.BlessingsAssignments blessings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.BlessingsAssignments Blessings {
      get { return blessings_; }
      set {
        blessings_ = value;
      }
    }

    /// <summary>Field number for the "faction" field.</summary>
    public const int FactionFieldNumber = 4;
    private global::SirusDbScrapper.UIDatabase.Faction faction_ = global::SirusDbScrapper.UIDatabase.Faction.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Faction Faction {
      get { return faction_; }
      set {
        faction_ = value;
      }
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 5;
    private int phase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Phase {
      get { return phase_; }
      set {
        phase_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SavedRaid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SavedRaid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Raid, other.Raid)) return false;
      if (!object.Equals(Blessings, other.Blessings)) return false;
      if (Faction != other.Faction) return false;
      if (Phase != other.Phase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (raid_ != null) hash ^= Raid.GetHashCode();
      if (blessings_ != null) hash ^= Blessings.GetHashCode();
      if (Faction != global::SirusDbScrapper.UIDatabase.Faction.Unknown) hash ^= Faction.GetHashCode();
      if (Phase != 0) hash ^= Phase.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (raid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Raid);
      }
      if (blessings_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Blessings);
      }
      if (Faction != global::SirusDbScrapper.UIDatabase.Faction.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Faction);
      }
      if (Phase != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Phase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (raid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Raid);
      }
      if (blessings_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Blessings);
      }
      if (Faction != global::SirusDbScrapper.UIDatabase.Faction.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Faction);
      }
      if (Phase != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Phase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (raid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Raid);
      }
      if (blessings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Blessings);
      }
      if (Faction != global::SirusDbScrapper.UIDatabase.Faction.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Faction);
      }
      if (Phase != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Phase);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SavedRaid other) {
      if (other == null) {
        return;
      }
      if (other.raid_ != null) {
        if (raid_ == null) {
          Raid = new global::SirusDbScrapper.UIDatabase.Raid();
        }
        Raid.MergeFrom(other.Raid);
      }
      if (other.blessings_ != null) {
        if (blessings_ == null) {
          Blessings = new global::SirusDbScrapper.UIDatabase.BlessingsAssignments();
        }
        Blessings.MergeFrom(other.Blessings);
      }
      if (other.Faction != global::SirusDbScrapper.UIDatabase.Faction.Unknown) {
        Faction = other.Faction;
      }
      if (other.Phase != 0) {
        Phase = other.Phase;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (raid_ == null) {
              Raid = new global::SirusDbScrapper.UIDatabase.Raid();
            }
            input.ReadMessage(Raid);
            break;
          }
          case 26: {
            if (blessings_ == null) {
              Blessings = new global::SirusDbScrapper.UIDatabase.BlessingsAssignments();
            }
            input.ReadMessage(Blessings);
            break;
          }
          case 32: {
            Faction = (global::SirusDbScrapper.UIDatabase.Faction) input.ReadEnum();
            break;
          }
          case 40: {
            Phase = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (raid_ == null) {
              Raid = new global::SirusDbScrapper.UIDatabase.Raid();
            }
            input.ReadMessage(Raid);
            break;
          }
          case 26: {
            if (blessings_ == null) {
              Blessings = new global::SirusDbScrapper.UIDatabase.BlessingsAssignments();
            }
            input.ReadMessage(Blessings);
            break;
          }
          case 32: {
            Faction = (global::SirusDbScrapper.UIDatabase.Faction) input.ReadEnum();
            break;
          }
          case 40: {
            Phase = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains all information that is imported/exported from a raid sim.
  /// </summary>
  public sealed partial class RaidSimSettings : pb::IMessage<RaidSimSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaidSimSettings> _parser = new pb::MessageParser<RaidSimSettings>(() => new RaidSimSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RaidSimSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaidSimSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaidSimSettings(RaidSimSettings other) : this() {
      settings_ = other.settings_ != null ? other.settings_.Clone() : null;
      raid_ = other.raid_ != null ? other.raid_.Clone() : null;
      blessings_ = other.blessings_ != null ? other.blessings_.Clone() : null;
      encounter_ = other.encounter_ != null ? other.encounter_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaidSimSettings Clone() {
      return new RaidSimSettings(this);
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 5;
    private global::SirusDbScrapper.UIDatabase.SimSettings settings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.SimSettings Settings {
      get { return settings_; }
      set {
        settings_ = value;
      }
    }

    /// <summary>Field number for the "raid" field.</summary>
    public const int RaidFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.Raid raid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Raid Raid {
      get { return raid_; }
      set {
        raid_ = value;
      }
    }

    /// <summary>Field number for the "blessings" field.</summary>
    public const int BlessingsFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.BlessingsAssignments blessings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.BlessingsAssignments Blessings {
      get { return blessings_; }
      set {
        blessings_ = value;
      }
    }

    /// <summary>Field number for the "encounter" field.</summary>
    public const int EncounterFieldNumber = 4;
    private global::SirusDbScrapper.UIDatabase.Encounter encounter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.Encounter Encounter {
      get { return encounter_; }
      set {
        encounter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RaidSimSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RaidSimSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Settings, other.Settings)) return false;
      if (!object.Equals(Raid, other.Raid)) return false;
      if (!object.Equals(Blessings, other.Blessings)) return false;
      if (!object.Equals(Encounter, other.Encounter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (settings_ != null) hash ^= Settings.GetHashCode();
      if (raid_ != null) hash ^= Raid.GetHashCode();
      if (blessings_ != null) hash ^= Blessings.GetHashCode();
      if (encounter_ != null) hash ^= Encounter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (raid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Raid);
      }
      if (blessings_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Blessings);
      }
      if (encounter_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Encounter);
      }
      if (settings_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Settings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (raid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Raid);
      }
      if (blessings_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Blessings);
      }
      if (encounter_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Encounter);
      }
      if (settings_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Settings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (settings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Settings);
      }
      if (raid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Raid);
      }
      if (blessings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Blessings);
      }
      if (encounter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Encounter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RaidSimSettings other) {
      if (other == null) {
        return;
      }
      if (other.settings_ != null) {
        if (settings_ == null) {
          Settings = new global::SirusDbScrapper.UIDatabase.SimSettings();
        }
        Settings.MergeFrom(other.Settings);
      }
      if (other.raid_ != null) {
        if (raid_ == null) {
          Raid = new global::SirusDbScrapper.UIDatabase.Raid();
        }
        Raid.MergeFrom(other.Raid);
      }
      if (other.blessings_ != null) {
        if (blessings_ == null) {
          Blessings = new global::SirusDbScrapper.UIDatabase.BlessingsAssignments();
        }
        Blessings.MergeFrom(other.Blessings);
      }
      if (other.encounter_ != null) {
        if (encounter_ == null) {
          Encounter = new global::SirusDbScrapper.UIDatabase.Encounter();
        }
        Encounter.MergeFrom(other.Encounter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (raid_ == null) {
              Raid = new global::SirusDbScrapper.UIDatabase.Raid();
            }
            input.ReadMessage(Raid);
            break;
          }
          case 26: {
            if (blessings_ == null) {
              Blessings = new global::SirusDbScrapper.UIDatabase.BlessingsAssignments();
            }
            input.ReadMessage(Blessings);
            break;
          }
          case 34: {
            if (encounter_ == null) {
              Encounter = new global::SirusDbScrapper.UIDatabase.Encounter();
            }
            input.ReadMessage(Encounter);
            break;
          }
          case 42: {
            if (settings_ == null) {
              Settings = new global::SirusDbScrapper.UIDatabase.SimSettings();
            }
            input.ReadMessage(Settings);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (raid_ == null) {
              Raid = new global::SirusDbScrapper.UIDatabase.Raid();
            }
            input.ReadMessage(Raid);
            break;
          }
          case 26: {
            if (blessings_ == null) {
              Blessings = new global::SirusDbScrapper.UIDatabase.BlessingsAssignments();
            }
            input.ReadMessage(Blessings);
            break;
          }
          case 34: {
            if (encounter_ == null) {
              Encounter = new global::SirusDbScrapper.UIDatabase.Encounter();
            }
            input.ReadMessage(Encounter);
            break;
          }
          case 42: {
            if (settings_ == null) {
              Settings = new global::SirusDbScrapper.UIDatabase.SimSettings();
            }
            input.ReadMessage(Settings);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// All the data related to running the sim once.
  /// </summary>
  public sealed partial class SimRun : pb::IMessage<SimRun>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SimRun> _parser = new pb::MessageParser<SimRun>(() => new SimRun());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SimRun> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimRun() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimRun(SimRun other) : this() {
      request_ = other.request_ != null ? other.request_.Clone() : null;
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimRun Clone() {
      return new SimRun(this);
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.RaidSimRequest request_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.RaidSimRequest Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::SirusDbScrapper.UIDatabase.RaidSimResult result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.RaidSimResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SimRun);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SimRun other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (request_ != null) hash ^= Request.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (request_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Request);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (request_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Request);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SimRun other) {
      if (other == null) {
        return;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::SirusDbScrapper.UIDatabase.RaidSimRequest();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::SirusDbScrapper.UIDatabase.RaidSimResult();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (request_ == null) {
              Request = new global::SirusDbScrapper.UIDatabase.RaidSimRequest();
            }
            input.ReadMessage(Request);
            break;
          }
          case 18: {
            if (result_ == null) {
              Result = new global::SirusDbScrapper.UIDatabase.RaidSimResult();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (request_ == null) {
              Request = new global::SirusDbScrapper.UIDatabase.RaidSimRequest();
            }
            input.ReadMessage(Request);
            break;
          }
          case 18: {
            if (result_ == null) {
              Result = new global::SirusDbScrapper.UIDatabase.RaidSimResult();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains a sim run and also other context data.
  /// </summary>
  public sealed partial class SimRunData : pb::IMessage<SimRunData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SimRunData> _parser = new pb::MessageParser<SimRunData>(() => new SimRunData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SimRunData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimRunData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimRunData(SimRunData other) : this() {
      run_ = other.run_ != null ? other.run_.Clone() : null;
      referenceRun_ = other.referenceRun_ != null ? other.referenceRun_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimRunData Clone() {
      return new SimRunData(this);
    }

    /// <summary>Field number for the "run" field.</summary>
    public const int RunFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.SimRun run_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.SimRun Run {
      get { return run_; }
      set {
        run_ = value;
      }
    }

    /// <summary>Field number for the "reference_run" field.</summary>
    public const int ReferenceRunFieldNumber = 2;
    private global::SirusDbScrapper.UIDatabase.SimRun referenceRun_;
    /// <summary>
    /// The run stored as a reference, for comparison to the current run.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.SimRun ReferenceRun {
      get { return referenceRun_; }
      set {
        referenceRun_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SimRunData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SimRunData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Run, other.Run)) return false;
      if (!object.Equals(ReferenceRun, other.ReferenceRun)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (run_ != null) hash ^= Run.GetHashCode();
      if (referenceRun_ != null) hash ^= ReferenceRun.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (run_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Run);
      }
      if (referenceRun_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReferenceRun);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (run_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Run);
      }
      if (referenceRun_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReferenceRun);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (run_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Run);
      }
      if (referenceRun_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReferenceRun);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SimRunData other) {
      if (other == null) {
        return;
      }
      if (other.run_ != null) {
        if (run_ == null) {
          Run = new global::SirusDbScrapper.UIDatabase.SimRun();
        }
        Run.MergeFrom(other.Run);
      }
      if (other.referenceRun_ != null) {
        if (referenceRun_ == null) {
          ReferenceRun = new global::SirusDbScrapper.UIDatabase.SimRun();
        }
        ReferenceRun.MergeFrom(other.ReferenceRun);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (run_ == null) {
              Run = new global::SirusDbScrapper.UIDatabase.SimRun();
            }
            input.ReadMessage(Run);
            break;
          }
          case 18: {
            if (referenceRun_ == null) {
              ReferenceRun = new global::SirusDbScrapper.UIDatabase.SimRun();
            }
            input.ReadMessage(ReferenceRun);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (run_ == null) {
              Run = new global::SirusDbScrapper.UIDatabase.SimRun();
            }
            input.ReadMessage(Run);
            break;
          }
          case 18: {
            if (referenceRun_ == null) {
              ReferenceRun = new global::SirusDbScrapper.UIDatabase.SimRun();
            }
            input.ReadMessage(ReferenceRun);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Sent by the sim to the detailed results page.
  /// </summary>
  public sealed partial class DetailedResultsUpdate : pb::IMessage<DetailedResultsUpdate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DetailedResultsUpdate> _parser = new pb::MessageParser<DetailedResultsUpdate>(() => new DetailedResultsUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DetailedResultsUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.UiReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DetailedResultsUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DetailedResultsUpdate(DetailedResultsUpdate other) : this() {
      switch (other.DataCase) {
        case DataOneofCase.RunData:
          RunData = other.RunData.Clone();
          break;
        case DataOneofCase.Settings:
          Settings = other.Settings.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DetailedResultsUpdate Clone() {
      return new DetailedResultsUpdate(this);
    }

    /// <summary>Field number for the "run_data" field.</summary>
    public const int RunDataFieldNumber = 1;
    /// <summary>
    /// Show results from a run.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.SimRunData RunData {
      get { return dataCase_ == DataOneofCase.RunData ? (global::SirusDbScrapper.UIDatabase.SimRunData) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.RunData;
      }
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 2;
    /// <summary>
    /// Update sim settings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.SimSettings Settings {
      get { return dataCase_ == DataOneofCase.Settings ? (global::SirusDbScrapper.UIDatabase.SimSettings) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Settings;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      RunData = 1,
      Settings = 2,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DetailedResultsUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DetailedResultsUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RunData, other.RunData)) return false;
      if (!object.Equals(Settings, other.Settings)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dataCase_ == DataOneofCase.RunData) hash ^= RunData.GetHashCode();
      if (dataCase_ == DataOneofCase.Settings) hash ^= Settings.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dataCase_ == DataOneofCase.RunData) {
        output.WriteRawTag(10);
        output.WriteMessage(RunData);
      }
      if (dataCase_ == DataOneofCase.Settings) {
        output.WriteRawTag(18);
        output.WriteMessage(Settings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dataCase_ == DataOneofCase.RunData) {
        output.WriteRawTag(10);
        output.WriteMessage(RunData);
      }
      if (dataCase_ == DataOneofCase.Settings) {
        output.WriteRawTag(18);
        output.WriteMessage(Settings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dataCase_ == DataOneofCase.RunData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RunData);
      }
      if (dataCase_ == DataOneofCase.Settings) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Settings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DetailedResultsUpdate other) {
      if (other == null) {
        return;
      }
      switch (other.DataCase) {
        case DataOneofCase.RunData:
          if (RunData == null) {
            RunData = new global::SirusDbScrapper.UIDatabase.SimRunData();
          }
          RunData.MergeFrom(other.RunData);
          break;
        case DataOneofCase.Settings:
          if (Settings == null) {
            Settings = new global::SirusDbScrapper.UIDatabase.SimSettings();
          }
          Settings.MergeFrom(other.Settings);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::SirusDbScrapper.UIDatabase.SimRunData subBuilder = new global::SirusDbScrapper.UIDatabase.SimRunData();
            if (dataCase_ == DataOneofCase.RunData) {
              subBuilder.MergeFrom(RunData);
            }
            input.ReadMessage(subBuilder);
            RunData = subBuilder;
            break;
          }
          case 18: {
            global::SirusDbScrapper.UIDatabase.SimSettings subBuilder = new global::SirusDbScrapper.UIDatabase.SimSettings();
            if (dataCase_ == DataOneofCase.Settings) {
              subBuilder.MergeFrom(Settings);
            }
            input.ReadMessage(subBuilder);
            Settings = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::SirusDbScrapper.UIDatabase.SimRunData subBuilder = new global::SirusDbScrapper.UIDatabase.SimRunData();
            if (dataCase_ == DataOneofCase.RunData) {
              subBuilder.MergeFrom(RunData);
            }
            input.ReadMessage(subBuilder);
            RunData = subBuilder;
            break;
          }
          case 18: {
            global::SirusDbScrapper.UIDatabase.SimSettings subBuilder = new global::SirusDbScrapper.UIDatabase.SimSettings();
            if (dataCase_ == DataOneofCase.Settings) {
              subBuilder.MergeFrom(Settings);
            }
            input.ReadMessage(subBuilder);
            Settings = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
