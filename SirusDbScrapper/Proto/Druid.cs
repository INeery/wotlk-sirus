// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: druid.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SirusDbScrapper.UIDatabase {

  /// <summary>Holder for reflection information generated from druid.proto</summary>
  public static partial class DruidReflection {

    #region Descriptor
    /// <summary>File descriptor for druid.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DruidReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtkcnVpZC5wcm90bxIFcHJvdG8aDGNvbW1vbi5wcm90byKkEAoMRHJ1aWRU",
            "YWxlbnRzEhcKD3N0YXJsaWdodF93cmF0aBgBIAEoBRIPCgdnZW5lc2lzGAIg",
            "ASgFEhAKCG1vb25nbG93GAMgASgFEhcKD25hdHVyZXNfbWFqZXN0eRgEIAEo",
            "BRIZChFpbXByb3ZlZF9tb29uZmlyZRgFIAEoBRIQCghicmFtYmxlcxgGIAEo",
            "BRIVCg1uYXR1cmVzX2dyYWNlGAcgASgFEhgKEG5hdHVyZXNfc3BsZW5kb3IY",
            "CCABKAgSFQoNbmF0dXJlc19yZWFjaBgJIAEoBRIRCgl2ZW5nZWFuY2UYCiAB",
            "KAUSFwoPY2VsZXN0aWFsX2ZvY3VzGAsgASgFEhYKDmx1bmFyX2d1aWRhbmNl",
            "GAwgASgFEhQKDGluc2VjdF9zd2FybRgNIAEoCBIdChVpbXByb3ZlZF9pbnNl",
            "Y3Rfc3dhcm0YDiABKAUSEgoKZHJlYW1zdGF0ZRgPIAEoBRIQCghtb29uZnVy",
            "eRgQIAEoBRIYChBiYWxhbmNlX29mX3Bvd2VyGBEgASgFEhQKDG1vb25raW5f",
            "Zm9ybRgSIAEoCBIdChVpbXByb3ZlZF9tb29ua2luX2Zvcm0YEyABKAUSHAoU",
            "aW1wcm92ZWRfZmFlcmllX2ZpcmUYFCABKAUSFQoNb3dsa2luX2ZyZW56eRgV",
            "IAEoBRIZChF3cmF0aF9vZl9jZW5hcml1cxgWIAEoBRIPCgdlY2xpcHNlGBcg",
            "ASgFEg8KB3R5cGhvb24YGCABKAgSFwoPZm9yY2Vfb2ZfbmF0dXJlGBkgASgI",
            "EhIKCmdhbGVfd2luZHMYGiABKAUSFgoOZWFydGhfYW5kX21vb24YGyABKAUS",
            "EAoIc3RhcmZhbGwYHCABKAgSEAoIZmVyb2NpdHkYHSABKAUSGAoQZmVyYWxf",
            "YWdncmVzc2lvbhgeIAEoBRIWCg5mZXJhbF9pbnN0aW5jdBgfIAEoBRITCgtz",
            "YXZhZ2VfZnVyeRggIAEoBRISCgp0aGlja19oaWRlGCEgASgFEhcKD2ZlcmFs",
            "X3N3aWZ0bmVzcxgiIAEoBRIaChJzdXJ2aXZhbF9pbnN0aW5jdHMYIyABKAgS",
            "FwoPc2hhcnBlbmVkX2NsYXdzGCQgASgFEhkKEXNocmVkZGluZ19hdHRhY2tz",
            "GCUgASgFEhkKEXByZWRhdG9yeV9zdHJpa2VzGCYgASgFEhMKC3ByaW1hbF9m",
            "dXJ5GCcgASgFEhgKEHByaW1hbF9wcmVjaXNpb24YKCABKAUSFQoNYnJ1dGFs",
            "X2ltcGFjdBgpIAEoBRIUCgxmZXJhbF9jaGFyZ2UYKiABKAgSGgoSbnVydHVy",
            "aW5nX2luc3RpbmN0GCsgASgFEhgKEG5hdHVyYWxfcmVhY3Rpb24YLCABKAUS",
            "GQoRaGVhcnRfb2ZfdGhlX3dpbGQYLSABKAUSHwoXc3Vydml2YWxfb2ZfdGhl",
            "X2ZpdHRlc3QYLiABKAUSGgoSbGVhZGVyX29mX3RoZV9wYWNrGC8gASgIEiMK",
            "G2ltcHJvdmVkX2xlYWRlcl9vZl90aGVfcGFjaxgwIAEoBRIXCg9wcmltYWxf",
            "dGVuYWNpdHkYMSABKAUSHQoVcHJvdGVjdG9yX29mX3RoZV9wYWNrGDIgASgF",
            "EhsKE3ByZWRhdG9yeV9pbnN0aW5jdHMYMyABKAUSFwoPaW5mZWN0ZWRfd291",
            "bmRzGDQgASgFEhoKEmtpbmdfb2ZfdGhlX2p1bmdsZRg1IAEoBRIOCgZtYW5n",
            "bGUYNiABKAgSFwoPaW1wcm92ZWRfbWFuZ2xlGDcgASgFEhUKDXJlbmRfYW5k",
            "X3RlYXIYOCABKAUSEwoLcHJpbWFsX2dvcmUYOSABKAgSDwoHYmVyc2Vyaxg6",
            "IAEoCBIhChlpbXByb3ZlZF9tYXJrX29mX3RoZV93aWxkGDsgASgFEhUKDW5h",
            "dHVyZXNfZm9jdXMYPCABKAUSDQoFZnVyb3IYPSABKAUSEgoKbmF0dXJhbGlz",
            "dBg+IAEoBRIQCghzdWJ0bGV0eRg/IAEoBRIcChRuYXR1cmFsX3NoYXBlc2hp",
            "ZnRlchhAIAEoBRIRCglpbnRlbnNpdHkYQSABKAUSFwoPb21lbl9vZl9jbGFy",
            "aXR5GEIgASgIEhsKE21hc3Rlcl9zaGFwZXNoaWZ0ZXIYQyABKAUSFwoPdHJh",
            "bnF1aWxfc3Bpcml0GEQgASgFEh0KFWltcHJvdmVkX3JlanV2ZW5hdGlvbhhF",
            "IAEoBRIZChFuYXR1cmVzX3N3aWZ0bmVzcxhGIAEoCBIWCg5naWZ0X29mX25h",
            "dHVyZRhHIAEoBRIcChRpbXByb3ZlZF90cmFucXVpbGl0eRhIIAEoBRIXCg9l",
            "bXBvd2VyZWRfdG91Y2gYSSABKAUSFgoObmF0dXJlc19ib3VudHkYSiABKAUS",
            "FQoNbGl2aW5nX3NwaXJpdBhLIAEoBRIRCglzd2lmdG1lbmQYTCABKAgSGgoS",
            "bmF0dXJhbF9wZXJmZWN0aW9uGE0gASgFEh4KFmVtcG93ZXJlZF9yZWp1dmVu",
            "YXRpb24YTiABKAUSEwoLbGl2aW5nX3NlZWQYTyABKAUSEgoKcmV2aXRhbGl6",
            "ZRhQIAEoBRIUCgx0cmVlX29mX2xpZmUYUSABKAgSHQoVaW1wcm92ZWRfdHJl",
            "ZV9vZl9saWZlGFIgASgFEhkKEWltcHJvdmVkX2Jhcmtza2luGFMgASgFEh8K",
            "F2dpZnRfb2ZfdGhlX2VhcnRobW90aGVyGFQgASgFEhMKC3dpbGRfZ3Jvd3Ro",
            "GFUgASgIIpcBCgxCYWxhbmNlRHJ1aWQSLAoHb3B0aW9ucxgDIAEoCzIbLnBy",
            "b3RvLkJhbGFuY2VEcnVpZC5PcHRpb25zGgoKCFJvdGF0aW9uGk0KB09wdGlv",
            "bnMSLgoQaW5uZXJ2YXRlX3RhcmdldBgBIAEoCzIULnByb3RvLlVuaXRSZWZl",
            "cmVuY2USEgoKb2tmX3VwdGltZRgCIAEoAiLyBwoKRmVyYWxEcnVpZBIsCghy",
            "b3RhdGlvbhgBIAEoCzIaLnByb3RvLkZlcmFsRHJ1aWQuUm90YXRpb24SKgoH",
            "b3B0aW9ucxgDIAEoCzIZLnByb3RvLkZlcmFsRHJ1aWQuT3B0aW9ucxqdBgoI",
            "Um90YXRpb24SQQoPYmVhcl93ZWF2ZV90eXBlGAEgASgOMigucHJvdG8uRmVy",
            "YWxEcnVpZC5Sb3RhdGlvbi5CZWFyd2VhdmVUeXBlEhwKFG1haW50YWluX2Zh",
            "ZXJpZV9maXJlGAIgASgIEhoKEm1pbl9jb21ib3NfZm9yX3JpcBgDIAEoBRIQ",
            "Cgh1c2VfcmFrZRgEIAEoCBIQCgh1c2VfYml0ZRgFIAEoCBITCgttYW5nbGVf",
            "c3BhbRgGIAEoCBIRCgliaXRlX3RpbWUYByABKAISGwoTbWluX2NvbWJvc19m",
            "b3JfYml0ZRgIIAEoBRIbChNiZXJzZXJrX2JpdGVfdGhyZXNoGAkgASgFEhkK",
            "EWJlcnNlcmtfZmZfdGhyZXNoGBIgASgFEhIKCnJpcF9sZWV3YXkYEyABKAUS",
            "EQoJcG93ZXJiZWFyGAogASgIEhcKD21pbl9yb2FyX29mZnNldBgLIAEoAhI/",
            "Cg5iaXRlX21vZGVfdHlwZRgMIAEoDjInLnByb3RvLkZlcmFsRHJ1aWQuUm90",
            "YXRpb24uQml0ZU1vZGVUeXBlEhIKCmhvdF91cHRpbWUYDSABKAISEgoKc25l",
            "a193ZWF2ZRgOIAEoCBIUCgxmbG93ZXJfd2VhdmUYDyABKAgSFAoMcmFpZF90",
            "YXJnZXRzGBAgASgFEhUKDW1hbnVhbF9wYXJhbXMYESABKAgSFAoMbWF4X2Zm",
            "X2RlbGF5GBQgASgCEjkKDXJvdGF0aW9uX3R5cGUYFSABKA4yIi5wcm90by5G",
            "ZXJhbERydWlkLlJvdGF0aW9uLkFwbFR5cGUSFwoPcHJlX3BvcF9iZXJzZXJr",
            "GBYgASgIEhMKC3ByZV9wb3Bfb29jGBcgASgIIiQKB0FwbFR5cGUSEAoMU2lu",
            "Z2xlVGFyZ2V0EAASBwoDQW9lEAEiMwoNQmVhcndlYXZlVHlwZRIICgROb25l",
            "EAASCgoGTWFuZ2xlEAESDAoITGFjZXJhdGUQAiItCgxCaXRlTW9kZVR5cGUS",
            "DQoJRW1wZXJpY2FsEAASDgoKQW5hbHl0aWNhbBABGmoKB09wdGlvbnMSLgoQ",
            "aW5uZXJ2YXRlX3RhcmdldBgBIAEoCzIULnByb3RvLlVuaXRSZWZlcmVuY2US",
            "EgoKbGF0ZW5jeV9tcxgCIAEoBRIbChNhc3N1bWVfYmxlZWRfYWN0aXZlGAQg",
            "ASgIIvYBCg5GZXJhbFRhbmtEcnVpZBIuCgdvcHRpb25zGAMgASgLMh0ucHJv",
            "dG8uRmVyYWxUYW5rRHJ1aWQuT3B0aW9ucxpiCghSb3RhdGlvbhIbChNtYXVs",
            "X3JhZ2VfdGhyZXNob2xkGAEgASgFEiIKGm1haW50YWluX2RlbW9yYWxpemlu",
            "Z19yb2FyGAIgASgIEhUKDWxhY2VyYXRlX3RpbWUYAyABKAEaUAoHT3B0aW9u",
            "cxIuChBpbm5lcnZhdGVfdGFyZ2V0GAEgASgLMhQucHJvdG8uVW5pdFJlZmVy",
            "ZW5jZRIVCg1zdGFydGluZ19yYWdlGAIgASgBIosBChBSZXN0b3JhdGlvbkRy",
            "dWlkEjAKB29wdGlvbnMYAyABKAsyHy5wcm90by5SZXN0b3JhdGlvbkRydWlk",
            "Lk9wdGlvbnMaCgoIUm90YXRpb24aOQoHT3B0aW9ucxIuChBpbm5lcnZhdGVf",
            "dGFyZ2V0GAEgASgLMhQucHJvdG8uVW5pdFJlZmVyZW5jZSqnBgoPRHJ1aWRN",
            "YWpvckdseXBoEhcKE0RydWlkTWFqb3JHbHlwaE5vbmUQABIVCg9HbHlwaE9m",
            "QmFya3NraW4Qt+QCEhQKDkdseXBoT2ZCZXJzZXJrEKHkAhIRCgtHbHlwaE9m",
            "Q2xhdxDQ/AISHAoWR2x5cGhPZkVudGFuZ2xpbmdSb290cxDcvwISEgoMR2x5",
            "cGhPZkZvY3VzEIDfAhIhChtHbHlwaE9mRnJlbnppZWRSZWdlbmVyYXRpb24Q",
            "wL8CEhUKD0dseXBoT2ZHcm93bGluZxDDvwISGQoTR2x5cGhPZkhlYWxpbmdU",
            "b3VjaBDSvwISFgoQR2x5cGhPZkh1cnJpY2FuZRDYvwISFgoQR2x5cGhPZklu",
            "bmVydmF0ZRDMvwISGAoSR2x5cGhPZkluc2VjdFN3YXJtENe/AhIWChBHbHlw",
            "aE9mTGlmZWJsb29tENO/AhITCg1HbHlwaE9mTWFuZ2xlEMS/AhIRCgtHbHlw",
            "aE9mTWF1bBDBvwISFAoOR2x5cGhPZk1vbnNvb24QtuQCEhUKD0dseXBoT2ZN",
            "b29uZmlyZRDbvwISFAoOR2x5cGhPZk5vdXJpc2gQo+QCEhoKFEdseXBoT2ZP",
            "bWVuT2ZDbGFyaXR5EPTNDBIRCgtHbHlwaE9mUmFrZRDHvwISHgoYR2x5cGhP",
            "ZlJhcGlkUmVqdXZlbmF0aW9uEM2HAxIUCg5HbHlwaE9mUmViaXJ0aBDNvwIS",
            "FQoPR2x5cGhPZlJlZ3Jvd3RoENC/AhIZChNHbHlwaE9mUmVqdXZlbmF0aW9u",
            "ENG/AhIQCgpHbHlwaE9mUmlwEMa/AhIXChFHbHlwaE9mU2F2YWdlUm9hchCk",
            "5AISEgoMR2x5cGhPZlNocmVkEMW/AhIVCg9HbHlwaE9mU3RhcmZhbGwQ2b8C",
            "EhUKD0dseXBoT2ZTdGFyZmlyZRDUvwISHgoYR2x5cGhPZlN1cnZpdmFsSW5z",
            "dGluY3RzEKTqAhIWChBHbHlwaE9mU3dpZnRtZW5kEMq/AhIXChFHbHlwaE9m",
            "V2lsZEdyb3d0aBCi5AISEgoMR2x5cGhPZldyYXRoENq/AirWAQoPRHJ1aWRN",
            "aW5vckdseXBoEhcKE0RydWlkTWlub3JHbHlwaE5vbmUQABIYChJHbHlwaE9m",
            "QXF1YXRpY0Zvcm0QtNICEhwKFkdseXBoT2ZDaGFsbGVuZ2luZ1JvYXIQxtIC",
            "EhEKC0dseXBoT2ZEYXNoEJrVAhIUCg5HbHlwaE9mVGhlV2lsZBDH0gISEwoN",
            "R2x5cGhPZlRob3JucxDE0gISFAoOR2x5cGhPZlR5cGhvb24Q+t4CEh4KGEds",
            "eXBoT2ZVbmJ1cmRlbmVkUmViaXJ0aBDD0gJCHaoCGlNpcnVzRGJTY3JhcHBl",
            "ci5VSURhdGFiYXNlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SirusDbScrapper.UIDatabase.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SirusDbScrapper.UIDatabase.DruidMajorGlyph), typeof(global::SirusDbScrapper.UIDatabase.DruidMinorGlyph), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.DruidTalents), global::SirusDbScrapper.UIDatabase.DruidTalents.Parser, new[]{ "StarlightWrath", "Genesis", "Moonglow", "NaturesMajesty", "ImprovedMoonfire", "Brambles", "NaturesGrace", "NaturesSplendor", "NaturesReach", "Vengeance", "CelestialFocus", "LunarGuidance", "InsectSwarm", "ImprovedInsectSwarm", "Dreamstate", "Moonfury", "BalanceOfPower", "MoonkinForm", "ImprovedMoonkinForm", "ImprovedFaerieFire", "OwlkinFrenzy", "WrathOfCenarius", "Eclipse", "Typhoon", "ForceOfNature", "GaleWinds", "EarthAndMoon", "Starfall", "Ferocity", "FeralAggression", "FeralInstinct", "SavageFury", "ThickHide", "FeralSwiftness", "SurvivalInstincts", "SharpenedClaws", "ShreddingAttacks", "PredatoryStrikes", "PrimalFury", "PrimalPrecision", "BrutalImpact", "FeralCharge", "NurturingInstinct", "NaturalReaction", "HeartOfTheWild", "SurvivalOfTheFittest", "LeaderOfThePack", "ImprovedLeaderOfThePack", "PrimalTenacity", "ProtectorOfThePack", "PredatoryInstincts", "InfectedWounds", "KingOfTheJungle", "Mangle", "ImprovedMangle", "RendAndTear", "PrimalGore", "Berserk", "ImprovedMarkOfTheWild", "NaturesFocus", "Furor", "Naturalist", "Subtlety", "NaturalShapeshifter", "Intensity", "OmenOfClarity", "MasterShapeshifter", "TranquilSpirit", "ImprovedRejuvenation", "NaturesSwiftness", "GiftOfNature", "ImprovedTranquility", "EmpoweredTouch", "NaturesBounty", "LivingSpirit", "Swiftmend", "NaturalPerfection", "EmpoweredRejuvenation", "LivingSeed", "Revitalize", "TreeOfLife", "ImprovedTreeOfLife", "ImprovedBarkskin", "GiftOfTheEarthmother", "WildGrowth" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.BalanceDruid), global::SirusDbScrapper.UIDatabase.BalanceDruid.Parser, new[]{ "Options" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.BalanceDruid.Types.Rotation), global::SirusDbScrapper.UIDatabase.BalanceDruid.Types.Rotation.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.BalanceDruid.Types.Options), global::SirusDbScrapper.UIDatabase.BalanceDruid.Types.Options.Parser, new[]{ "InnervateTarget", "OkfUptime" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.FeralDruid), global::SirusDbScrapper.UIDatabase.FeralDruid.Parser, new[]{ "Rotation", "Options" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation), global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Parser, new[]{ "BearWeaveType", "MaintainFaerieFire", "MinCombosForRip", "UseRake", "UseBite", "MangleSpam", "BiteTime", "MinCombosForBite", "BerserkBiteThresh", "BerserkFfThresh", "RipLeeway", "Powerbear", "MinRoarOffset", "BiteModeType", "HotUptime", "SnekWeave", "FlowerWeave", "RaidTargets", "ManualParams", "MaxFfDelay", "RotationType", "PrePopBerserk", "PrePopOoc" }, null, new[]{ typeof(global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.AplType), typeof(global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BearweaveType), typeof(global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BiteModeType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Options), global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Options.Parser, new[]{ "InnervateTarget", "LatencyMs", "AssumeBleedActive" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.FeralTankDruid), global::SirusDbScrapper.UIDatabase.FeralTankDruid.Parser, new[]{ "Options" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.FeralTankDruid.Types.Rotation), global::SirusDbScrapper.UIDatabase.FeralTankDruid.Types.Rotation.Parser, new[]{ "MaulRageThreshold", "MaintainDemoralizingRoar", "LacerateTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.FeralTankDruid.Types.Options), global::SirusDbScrapper.UIDatabase.FeralTankDruid.Types.Options.Parser, new[]{ "InnervateTarget", "StartingRage" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.RestorationDruid), global::SirusDbScrapper.UIDatabase.RestorationDruid.Parser, new[]{ "Options" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.RestorationDruid.Types.Rotation), global::SirusDbScrapper.UIDatabase.RestorationDruid.Types.Rotation.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SirusDbScrapper.UIDatabase.RestorationDruid.Types.Options), global::SirusDbScrapper.UIDatabase.RestorationDruid.Types.Options.Parser, new[]{ "InnervateTarget" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  public enum DruidMajorGlyph {
    [pbr::OriginalName("DruidMajorGlyphNone")] None = 0,
    [pbr::OriginalName("GlyphOfBarkskin")] GlyphOfBarkskin = 45623,
    [pbr::OriginalName("GlyphOfBerserk")] GlyphOfBerserk = 45601,
    [pbr::OriginalName("GlyphOfClaw")] GlyphOfClaw = 48720,
    [pbr::OriginalName("GlyphOfEntanglingRoots")] GlyphOfEntanglingRoots = 40924,
    [pbr::OriginalName("GlyphOfFocus")] GlyphOfFocus = 44928,
    [pbr::OriginalName("GlyphOfFrenziedRegeneration")] GlyphOfFrenziedRegeneration = 40896,
    [pbr::OriginalName("GlyphOfGrowling")] GlyphOfGrowling = 40899,
    [pbr::OriginalName("GlyphOfHealingTouch")] GlyphOfHealingTouch = 40914,
    [pbr::OriginalName("GlyphOfHurricane")] GlyphOfHurricane = 40920,
    [pbr::OriginalName("GlyphOfInnervate")] GlyphOfInnervate = 40908,
    [pbr::OriginalName("GlyphOfInsectSwarm")] GlyphOfInsectSwarm = 40919,
    [pbr::OriginalName("GlyphOfLifebloom")] GlyphOfLifebloom = 40915,
    [pbr::OriginalName("GlyphOfMangle")] GlyphOfMangle = 40900,
    [pbr::OriginalName("GlyphOfMaul")] GlyphOfMaul = 40897,
    [pbr::OriginalName("GlyphOfMonsoon")] GlyphOfMonsoon = 45622,
    [pbr::OriginalName("GlyphOfMoonfire")] GlyphOfMoonfire = 40923,
    [pbr::OriginalName("GlyphOfNourish")] GlyphOfNourish = 45603,
    [pbr::OriginalName("GlyphOfOmenOfClarity")] GlyphOfOmenOfClarity = 206580,
    [pbr::OriginalName("GlyphOfRake")] GlyphOfRake = 40903,
    [pbr::OriginalName("GlyphOfRapidRejuvenation")] GlyphOfRapidRejuvenation = 50125,
    [pbr::OriginalName("GlyphOfRebirth")] GlyphOfRebirth = 40909,
    [pbr::OriginalName("GlyphOfRegrowth")] GlyphOfRegrowth = 40912,
    [pbr::OriginalName("GlyphOfRejuvenation")] GlyphOfRejuvenation = 40913,
    [pbr::OriginalName("GlyphOfRip")] GlyphOfRip = 40902,
    [pbr::OriginalName("GlyphOfSavageRoar")] GlyphOfSavageRoar = 45604,
    [pbr::OriginalName("GlyphOfShred")] GlyphOfShred = 40901,
    [pbr::OriginalName("GlyphOfStarfall")] GlyphOfStarfall = 40921,
    [pbr::OriginalName("GlyphOfStarfire")] GlyphOfStarfire = 40916,
    [pbr::OriginalName("GlyphOfSurvivalInstincts")] GlyphOfSurvivalInstincts = 46372,
    [pbr::OriginalName("GlyphOfSwiftmend")] GlyphOfSwiftmend = 40906,
    [pbr::OriginalName("GlyphOfWildGrowth")] GlyphOfWildGrowth = 45602,
    [pbr::OriginalName("GlyphOfWrath")] GlyphOfWrath = 40922,
  }

  public enum DruidMinorGlyph {
    [pbr::OriginalName("DruidMinorGlyphNone")] None = 0,
    [pbr::OriginalName("GlyphOfAquaticForm")] GlyphOfAquaticForm = 43316,
    [pbr::OriginalName("GlyphOfChallengingRoar")] GlyphOfChallengingRoar = 43334,
    [pbr::OriginalName("GlyphOfDash")] GlyphOfDash = 43674,
    [pbr::OriginalName("GlyphOfTheWild")] GlyphOfTheWild = 43335,
    [pbr::OriginalName("GlyphOfThorns")] GlyphOfThorns = 43332,
    [pbr::OriginalName("GlyphOfTyphoon")] GlyphOfTyphoon = 44922,
    [pbr::OriginalName("GlyphOfUnburdenedRebirth")] GlyphOfUnburdenedRebirth = 43331,
  }

  #endregion

  #region Messages
  public sealed partial class DruidTalents : pb::IMessage<DruidTalents>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DruidTalents> _parser = new pb::MessageParser<DruidTalents>(() => new DruidTalents());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DruidTalents> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.DruidReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DruidTalents() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DruidTalents(DruidTalents other) : this() {
      starlightWrath_ = other.starlightWrath_;
      genesis_ = other.genesis_;
      moonglow_ = other.moonglow_;
      naturesMajesty_ = other.naturesMajesty_;
      improvedMoonfire_ = other.improvedMoonfire_;
      brambles_ = other.brambles_;
      naturesGrace_ = other.naturesGrace_;
      naturesSplendor_ = other.naturesSplendor_;
      naturesReach_ = other.naturesReach_;
      vengeance_ = other.vengeance_;
      celestialFocus_ = other.celestialFocus_;
      lunarGuidance_ = other.lunarGuidance_;
      insectSwarm_ = other.insectSwarm_;
      improvedInsectSwarm_ = other.improvedInsectSwarm_;
      dreamstate_ = other.dreamstate_;
      moonfury_ = other.moonfury_;
      balanceOfPower_ = other.balanceOfPower_;
      moonkinForm_ = other.moonkinForm_;
      improvedMoonkinForm_ = other.improvedMoonkinForm_;
      improvedFaerieFire_ = other.improvedFaerieFire_;
      owlkinFrenzy_ = other.owlkinFrenzy_;
      wrathOfCenarius_ = other.wrathOfCenarius_;
      eclipse_ = other.eclipse_;
      typhoon_ = other.typhoon_;
      forceOfNature_ = other.forceOfNature_;
      galeWinds_ = other.galeWinds_;
      earthAndMoon_ = other.earthAndMoon_;
      starfall_ = other.starfall_;
      ferocity_ = other.ferocity_;
      feralAggression_ = other.feralAggression_;
      feralInstinct_ = other.feralInstinct_;
      savageFury_ = other.savageFury_;
      thickHide_ = other.thickHide_;
      feralSwiftness_ = other.feralSwiftness_;
      survivalInstincts_ = other.survivalInstincts_;
      sharpenedClaws_ = other.sharpenedClaws_;
      shreddingAttacks_ = other.shreddingAttacks_;
      predatoryStrikes_ = other.predatoryStrikes_;
      primalFury_ = other.primalFury_;
      primalPrecision_ = other.primalPrecision_;
      brutalImpact_ = other.brutalImpact_;
      feralCharge_ = other.feralCharge_;
      nurturingInstinct_ = other.nurturingInstinct_;
      naturalReaction_ = other.naturalReaction_;
      heartOfTheWild_ = other.heartOfTheWild_;
      survivalOfTheFittest_ = other.survivalOfTheFittest_;
      leaderOfThePack_ = other.leaderOfThePack_;
      improvedLeaderOfThePack_ = other.improvedLeaderOfThePack_;
      primalTenacity_ = other.primalTenacity_;
      protectorOfThePack_ = other.protectorOfThePack_;
      predatoryInstincts_ = other.predatoryInstincts_;
      infectedWounds_ = other.infectedWounds_;
      kingOfTheJungle_ = other.kingOfTheJungle_;
      mangle_ = other.mangle_;
      improvedMangle_ = other.improvedMangle_;
      rendAndTear_ = other.rendAndTear_;
      primalGore_ = other.primalGore_;
      berserk_ = other.berserk_;
      improvedMarkOfTheWild_ = other.improvedMarkOfTheWild_;
      naturesFocus_ = other.naturesFocus_;
      furor_ = other.furor_;
      naturalist_ = other.naturalist_;
      subtlety_ = other.subtlety_;
      naturalShapeshifter_ = other.naturalShapeshifter_;
      intensity_ = other.intensity_;
      omenOfClarity_ = other.omenOfClarity_;
      masterShapeshifter_ = other.masterShapeshifter_;
      tranquilSpirit_ = other.tranquilSpirit_;
      improvedRejuvenation_ = other.improvedRejuvenation_;
      naturesSwiftness_ = other.naturesSwiftness_;
      giftOfNature_ = other.giftOfNature_;
      improvedTranquility_ = other.improvedTranquility_;
      empoweredTouch_ = other.empoweredTouch_;
      naturesBounty_ = other.naturesBounty_;
      livingSpirit_ = other.livingSpirit_;
      swiftmend_ = other.swiftmend_;
      naturalPerfection_ = other.naturalPerfection_;
      empoweredRejuvenation_ = other.empoweredRejuvenation_;
      livingSeed_ = other.livingSeed_;
      revitalize_ = other.revitalize_;
      treeOfLife_ = other.treeOfLife_;
      improvedTreeOfLife_ = other.improvedTreeOfLife_;
      improvedBarkskin_ = other.improvedBarkskin_;
      giftOfTheEarthmother_ = other.giftOfTheEarthmother_;
      wildGrowth_ = other.wildGrowth_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DruidTalents Clone() {
      return new DruidTalents(this);
    }

    /// <summary>Field number for the "starlight_wrath" field.</summary>
    public const int StarlightWrathFieldNumber = 1;
    private int starlightWrath_;
    /// <summary>
    /// Balance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StarlightWrath {
      get { return starlightWrath_; }
      set {
        starlightWrath_ = value;
      }
    }

    /// <summary>Field number for the "genesis" field.</summary>
    public const int GenesisFieldNumber = 2;
    private int genesis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Genesis {
      get { return genesis_; }
      set {
        genesis_ = value;
      }
    }

    /// <summary>Field number for the "moonglow" field.</summary>
    public const int MoonglowFieldNumber = 3;
    private int moonglow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Moonglow {
      get { return moonglow_; }
      set {
        moonglow_ = value;
      }
    }

    /// <summary>Field number for the "natures_majesty" field.</summary>
    public const int NaturesMajestyFieldNumber = 4;
    private int naturesMajesty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NaturesMajesty {
      get { return naturesMajesty_; }
      set {
        naturesMajesty_ = value;
      }
    }

    /// <summary>Field number for the "improved_moonfire" field.</summary>
    public const int ImprovedMoonfireFieldNumber = 5;
    private int improvedMoonfire_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedMoonfire {
      get { return improvedMoonfire_; }
      set {
        improvedMoonfire_ = value;
      }
    }

    /// <summary>Field number for the "brambles" field.</summary>
    public const int BramblesFieldNumber = 6;
    private int brambles_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Brambles {
      get { return brambles_; }
      set {
        brambles_ = value;
      }
    }

    /// <summary>Field number for the "natures_grace" field.</summary>
    public const int NaturesGraceFieldNumber = 7;
    private int naturesGrace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NaturesGrace {
      get { return naturesGrace_; }
      set {
        naturesGrace_ = value;
      }
    }

    /// <summary>Field number for the "natures_splendor" field.</summary>
    public const int NaturesSplendorFieldNumber = 8;
    private bool naturesSplendor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NaturesSplendor {
      get { return naturesSplendor_; }
      set {
        naturesSplendor_ = value;
      }
    }

    /// <summary>Field number for the "natures_reach" field.</summary>
    public const int NaturesReachFieldNumber = 9;
    private int naturesReach_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NaturesReach {
      get { return naturesReach_; }
      set {
        naturesReach_ = value;
      }
    }

    /// <summary>Field number for the "vengeance" field.</summary>
    public const int VengeanceFieldNumber = 10;
    private int vengeance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Vengeance {
      get { return vengeance_; }
      set {
        vengeance_ = value;
      }
    }

    /// <summary>Field number for the "celestial_focus" field.</summary>
    public const int CelestialFocusFieldNumber = 11;
    private int celestialFocus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CelestialFocus {
      get { return celestialFocus_; }
      set {
        celestialFocus_ = value;
      }
    }

    /// <summary>Field number for the "lunar_guidance" field.</summary>
    public const int LunarGuidanceFieldNumber = 12;
    private int lunarGuidance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LunarGuidance {
      get { return lunarGuidance_; }
      set {
        lunarGuidance_ = value;
      }
    }

    /// <summary>Field number for the "insect_swarm" field.</summary>
    public const int InsectSwarmFieldNumber = 13;
    private bool insectSwarm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InsectSwarm {
      get { return insectSwarm_; }
      set {
        insectSwarm_ = value;
      }
    }

    /// <summary>Field number for the "improved_insect_swarm" field.</summary>
    public const int ImprovedInsectSwarmFieldNumber = 14;
    private int improvedInsectSwarm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedInsectSwarm {
      get { return improvedInsectSwarm_; }
      set {
        improvedInsectSwarm_ = value;
      }
    }

    /// <summary>Field number for the "dreamstate" field.</summary>
    public const int DreamstateFieldNumber = 15;
    private int dreamstate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dreamstate {
      get { return dreamstate_; }
      set {
        dreamstate_ = value;
      }
    }

    /// <summary>Field number for the "moonfury" field.</summary>
    public const int MoonfuryFieldNumber = 16;
    private int moonfury_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Moonfury {
      get { return moonfury_; }
      set {
        moonfury_ = value;
      }
    }

    /// <summary>Field number for the "balance_of_power" field.</summary>
    public const int BalanceOfPowerFieldNumber = 17;
    private int balanceOfPower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BalanceOfPower {
      get { return balanceOfPower_; }
      set {
        balanceOfPower_ = value;
      }
    }

    /// <summary>Field number for the "moonkin_form" field.</summary>
    public const int MoonkinFormFieldNumber = 18;
    private bool moonkinForm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MoonkinForm {
      get { return moonkinForm_; }
      set {
        moonkinForm_ = value;
      }
    }

    /// <summary>Field number for the "improved_moonkin_form" field.</summary>
    public const int ImprovedMoonkinFormFieldNumber = 19;
    private int improvedMoonkinForm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedMoonkinForm {
      get { return improvedMoonkinForm_; }
      set {
        improvedMoonkinForm_ = value;
      }
    }

    /// <summary>Field number for the "improved_faerie_fire" field.</summary>
    public const int ImprovedFaerieFireFieldNumber = 20;
    private int improvedFaerieFire_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedFaerieFire {
      get { return improvedFaerieFire_; }
      set {
        improvedFaerieFire_ = value;
      }
    }

    /// <summary>Field number for the "owlkin_frenzy" field.</summary>
    public const int OwlkinFrenzyFieldNumber = 21;
    private int owlkinFrenzy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OwlkinFrenzy {
      get { return owlkinFrenzy_; }
      set {
        owlkinFrenzy_ = value;
      }
    }

    /// <summary>Field number for the "wrath_of_cenarius" field.</summary>
    public const int WrathOfCenariusFieldNumber = 22;
    private int wrathOfCenarius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WrathOfCenarius {
      get { return wrathOfCenarius_; }
      set {
        wrathOfCenarius_ = value;
      }
    }

    /// <summary>Field number for the "eclipse" field.</summary>
    public const int EclipseFieldNumber = 23;
    private int eclipse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Eclipse {
      get { return eclipse_; }
      set {
        eclipse_ = value;
      }
    }

    /// <summary>Field number for the "typhoon" field.</summary>
    public const int TyphoonFieldNumber = 24;
    private bool typhoon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Typhoon {
      get { return typhoon_; }
      set {
        typhoon_ = value;
      }
    }

    /// <summary>Field number for the "force_of_nature" field.</summary>
    public const int ForceOfNatureFieldNumber = 25;
    private bool forceOfNature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForceOfNature {
      get { return forceOfNature_; }
      set {
        forceOfNature_ = value;
      }
    }

    /// <summary>Field number for the "gale_winds" field.</summary>
    public const int GaleWindsFieldNumber = 26;
    private int galeWinds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GaleWinds {
      get { return galeWinds_; }
      set {
        galeWinds_ = value;
      }
    }

    /// <summary>Field number for the "earth_and_moon" field.</summary>
    public const int EarthAndMoonFieldNumber = 27;
    private int earthAndMoon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EarthAndMoon {
      get { return earthAndMoon_; }
      set {
        earthAndMoon_ = value;
      }
    }

    /// <summary>Field number for the "starfall" field.</summary>
    public const int StarfallFieldNumber = 28;
    private bool starfall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Starfall {
      get { return starfall_; }
      set {
        starfall_ = value;
      }
    }

    /// <summary>Field number for the "ferocity" field.</summary>
    public const int FerocityFieldNumber = 29;
    private int ferocity_;
    /// <summary>
    /// Feral Combat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ferocity {
      get { return ferocity_; }
      set {
        ferocity_ = value;
      }
    }

    /// <summary>Field number for the "feral_aggression" field.</summary>
    public const int FeralAggressionFieldNumber = 30;
    private int feralAggression_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FeralAggression {
      get { return feralAggression_; }
      set {
        feralAggression_ = value;
      }
    }

    /// <summary>Field number for the "feral_instinct" field.</summary>
    public const int FeralInstinctFieldNumber = 31;
    private int feralInstinct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FeralInstinct {
      get { return feralInstinct_; }
      set {
        feralInstinct_ = value;
      }
    }

    /// <summary>Field number for the "savage_fury" field.</summary>
    public const int SavageFuryFieldNumber = 32;
    private int savageFury_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SavageFury {
      get { return savageFury_; }
      set {
        savageFury_ = value;
      }
    }

    /// <summary>Field number for the "thick_hide" field.</summary>
    public const int ThickHideFieldNumber = 33;
    private int thickHide_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThickHide {
      get { return thickHide_; }
      set {
        thickHide_ = value;
      }
    }

    /// <summary>Field number for the "feral_swiftness" field.</summary>
    public const int FeralSwiftnessFieldNumber = 34;
    private int feralSwiftness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FeralSwiftness {
      get { return feralSwiftness_; }
      set {
        feralSwiftness_ = value;
      }
    }

    /// <summary>Field number for the "survival_instincts" field.</summary>
    public const int SurvivalInstinctsFieldNumber = 35;
    private bool survivalInstincts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SurvivalInstincts {
      get { return survivalInstincts_; }
      set {
        survivalInstincts_ = value;
      }
    }

    /// <summary>Field number for the "sharpened_claws" field.</summary>
    public const int SharpenedClawsFieldNumber = 36;
    private int sharpenedClaws_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SharpenedClaws {
      get { return sharpenedClaws_; }
      set {
        sharpenedClaws_ = value;
      }
    }

    /// <summary>Field number for the "shredding_attacks" field.</summary>
    public const int ShreddingAttacksFieldNumber = 37;
    private int shreddingAttacks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ShreddingAttacks {
      get { return shreddingAttacks_; }
      set {
        shreddingAttacks_ = value;
      }
    }

    /// <summary>Field number for the "predatory_strikes" field.</summary>
    public const int PredatoryStrikesFieldNumber = 38;
    private int predatoryStrikes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PredatoryStrikes {
      get { return predatoryStrikes_; }
      set {
        predatoryStrikes_ = value;
      }
    }

    /// <summary>Field number for the "primal_fury" field.</summary>
    public const int PrimalFuryFieldNumber = 39;
    private int primalFury_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrimalFury {
      get { return primalFury_; }
      set {
        primalFury_ = value;
      }
    }

    /// <summary>Field number for the "primal_precision" field.</summary>
    public const int PrimalPrecisionFieldNumber = 40;
    private int primalPrecision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrimalPrecision {
      get { return primalPrecision_; }
      set {
        primalPrecision_ = value;
      }
    }

    /// <summary>Field number for the "brutal_impact" field.</summary>
    public const int BrutalImpactFieldNumber = 41;
    private int brutalImpact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BrutalImpact {
      get { return brutalImpact_; }
      set {
        brutalImpact_ = value;
      }
    }

    /// <summary>Field number for the "feral_charge" field.</summary>
    public const int FeralChargeFieldNumber = 42;
    private bool feralCharge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FeralCharge {
      get { return feralCharge_; }
      set {
        feralCharge_ = value;
      }
    }

    /// <summary>Field number for the "nurturing_instinct" field.</summary>
    public const int NurturingInstinctFieldNumber = 43;
    private int nurturingInstinct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NurturingInstinct {
      get { return nurturingInstinct_; }
      set {
        nurturingInstinct_ = value;
      }
    }

    /// <summary>Field number for the "natural_reaction" field.</summary>
    public const int NaturalReactionFieldNumber = 44;
    private int naturalReaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NaturalReaction {
      get { return naturalReaction_; }
      set {
        naturalReaction_ = value;
      }
    }

    /// <summary>Field number for the "heart_of_the_wild" field.</summary>
    public const int HeartOfTheWildFieldNumber = 45;
    private int heartOfTheWild_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HeartOfTheWild {
      get { return heartOfTheWild_; }
      set {
        heartOfTheWild_ = value;
      }
    }

    /// <summary>Field number for the "survival_of_the_fittest" field.</summary>
    public const int SurvivalOfTheFittestFieldNumber = 46;
    private int survivalOfTheFittest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SurvivalOfTheFittest {
      get { return survivalOfTheFittest_; }
      set {
        survivalOfTheFittest_ = value;
      }
    }

    /// <summary>Field number for the "leader_of_the_pack" field.</summary>
    public const int LeaderOfThePackFieldNumber = 47;
    private bool leaderOfThePack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LeaderOfThePack {
      get { return leaderOfThePack_; }
      set {
        leaderOfThePack_ = value;
      }
    }

    /// <summary>Field number for the "improved_leader_of_the_pack" field.</summary>
    public const int ImprovedLeaderOfThePackFieldNumber = 48;
    private int improvedLeaderOfThePack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedLeaderOfThePack {
      get { return improvedLeaderOfThePack_; }
      set {
        improvedLeaderOfThePack_ = value;
      }
    }

    /// <summary>Field number for the "primal_tenacity" field.</summary>
    public const int PrimalTenacityFieldNumber = 49;
    private int primalTenacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrimalTenacity {
      get { return primalTenacity_; }
      set {
        primalTenacity_ = value;
      }
    }

    /// <summary>Field number for the "protector_of_the_pack" field.</summary>
    public const int ProtectorOfThePackFieldNumber = 50;
    private int protectorOfThePack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ProtectorOfThePack {
      get { return protectorOfThePack_; }
      set {
        protectorOfThePack_ = value;
      }
    }

    /// <summary>Field number for the "predatory_instincts" field.</summary>
    public const int PredatoryInstinctsFieldNumber = 51;
    private int predatoryInstincts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PredatoryInstincts {
      get { return predatoryInstincts_; }
      set {
        predatoryInstincts_ = value;
      }
    }

    /// <summary>Field number for the "infected_wounds" field.</summary>
    public const int InfectedWoundsFieldNumber = 52;
    private int infectedWounds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InfectedWounds {
      get { return infectedWounds_; }
      set {
        infectedWounds_ = value;
      }
    }

    /// <summary>Field number for the "king_of_the_jungle" field.</summary>
    public const int KingOfTheJungleFieldNumber = 53;
    private int kingOfTheJungle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int KingOfTheJungle {
      get { return kingOfTheJungle_; }
      set {
        kingOfTheJungle_ = value;
      }
    }

    /// <summary>Field number for the "mangle" field.</summary>
    public const int MangleFieldNumber = 54;
    private bool mangle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Mangle {
      get { return mangle_; }
      set {
        mangle_ = value;
      }
    }

    /// <summary>Field number for the "improved_mangle" field.</summary>
    public const int ImprovedMangleFieldNumber = 55;
    private int improvedMangle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedMangle {
      get { return improvedMangle_; }
      set {
        improvedMangle_ = value;
      }
    }

    /// <summary>Field number for the "rend_and_tear" field.</summary>
    public const int RendAndTearFieldNumber = 56;
    private int rendAndTear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RendAndTear {
      get { return rendAndTear_; }
      set {
        rendAndTear_ = value;
      }
    }

    /// <summary>Field number for the "primal_gore" field.</summary>
    public const int PrimalGoreFieldNumber = 57;
    private bool primalGore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PrimalGore {
      get { return primalGore_; }
      set {
        primalGore_ = value;
      }
    }

    /// <summary>Field number for the "berserk" field.</summary>
    public const int BerserkFieldNumber = 58;
    private bool berserk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Berserk {
      get { return berserk_; }
      set {
        berserk_ = value;
      }
    }

    /// <summary>Field number for the "improved_mark_of_the_wild" field.</summary>
    public const int ImprovedMarkOfTheWildFieldNumber = 59;
    private int improvedMarkOfTheWild_;
    /// <summary>
    /// Restoration
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedMarkOfTheWild {
      get { return improvedMarkOfTheWild_; }
      set {
        improvedMarkOfTheWild_ = value;
      }
    }

    /// <summary>Field number for the "natures_focus" field.</summary>
    public const int NaturesFocusFieldNumber = 60;
    private int naturesFocus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NaturesFocus {
      get { return naturesFocus_; }
      set {
        naturesFocus_ = value;
      }
    }

    /// <summary>Field number for the "furor" field.</summary>
    public const int FurorFieldNumber = 61;
    private int furor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Furor {
      get { return furor_; }
      set {
        furor_ = value;
      }
    }

    /// <summary>Field number for the "naturalist" field.</summary>
    public const int NaturalistFieldNumber = 62;
    private int naturalist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Naturalist {
      get { return naturalist_; }
      set {
        naturalist_ = value;
      }
    }

    /// <summary>Field number for the "subtlety" field.</summary>
    public const int SubtletyFieldNumber = 63;
    private int subtlety_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Subtlety {
      get { return subtlety_; }
      set {
        subtlety_ = value;
      }
    }

    /// <summary>Field number for the "natural_shapeshifter" field.</summary>
    public const int NaturalShapeshifterFieldNumber = 64;
    private int naturalShapeshifter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NaturalShapeshifter {
      get { return naturalShapeshifter_; }
      set {
        naturalShapeshifter_ = value;
      }
    }

    /// <summary>Field number for the "intensity" field.</summary>
    public const int IntensityFieldNumber = 65;
    private int intensity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Intensity {
      get { return intensity_; }
      set {
        intensity_ = value;
      }
    }

    /// <summary>Field number for the "omen_of_clarity" field.</summary>
    public const int OmenOfClarityFieldNumber = 66;
    private bool omenOfClarity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OmenOfClarity {
      get { return omenOfClarity_; }
      set {
        omenOfClarity_ = value;
      }
    }

    /// <summary>Field number for the "master_shapeshifter" field.</summary>
    public const int MasterShapeshifterFieldNumber = 67;
    private int masterShapeshifter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MasterShapeshifter {
      get { return masterShapeshifter_; }
      set {
        masterShapeshifter_ = value;
      }
    }

    /// <summary>Field number for the "tranquil_spirit" field.</summary>
    public const int TranquilSpiritFieldNumber = 68;
    private int tranquilSpirit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TranquilSpirit {
      get { return tranquilSpirit_; }
      set {
        tranquilSpirit_ = value;
      }
    }

    /// <summary>Field number for the "improved_rejuvenation" field.</summary>
    public const int ImprovedRejuvenationFieldNumber = 69;
    private int improvedRejuvenation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedRejuvenation {
      get { return improvedRejuvenation_; }
      set {
        improvedRejuvenation_ = value;
      }
    }

    /// <summary>Field number for the "natures_swiftness" field.</summary>
    public const int NaturesSwiftnessFieldNumber = 70;
    private bool naturesSwiftness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NaturesSwiftness {
      get { return naturesSwiftness_; }
      set {
        naturesSwiftness_ = value;
      }
    }

    /// <summary>Field number for the "gift_of_nature" field.</summary>
    public const int GiftOfNatureFieldNumber = 71;
    private int giftOfNature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GiftOfNature {
      get { return giftOfNature_; }
      set {
        giftOfNature_ = value;
      }
    }

    /// <summary>Field number for the "improved_tranquility" field.</summary>
    public const int ImprovedTranquilityFieldNumber = 72;
    private int improvedTranquility_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedTranquility {
      get { return improvedTranquility_; }
      set {
        improvedTranquility_ = value;
      }
    }

    /// <summary>Field number for the "empowered_touch" field.</summary>
    public const int EmpoweredTouchFieldNumber = 73;
    private int empoweredTouch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EmpoweredTouch {
      get { return empoweredTouch_; }
      set {
        empoweredTouch_ = value;
      }
    }

    /// <summary>Field number for the "natures_bounty" field.</summary>
    public const int NaturesBountyFieldNumber = 74;
    private int naturesBounty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NaturesBounty {
      get { return naturesBounty_; }
      set {
        naturesBounty_ = value;
      }
    }

    /// <summary>Field number for the "living_spirit" field.</summary>
    public const int LivingSpiritFieldNumber = 75;
    private int livingSpirit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LivingSpirit {
      get { return livingSpirit_; }
      set {
        livingSpirit_ = value;
      }
    }

    /// <summary>Field number for the "swiftmend" field.</summary>
    public const int SwiftmendFieldNumber = 76;
    private bool swiftmend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Swiftmend {
      get { return swiftmend_; }
      set {
        swiftmend_ = value;
      }
    }

    /// <summary>Field number for the "natural_perfection" field.</summary>
    public const int NaturalPerfectionFieldNumber = 77;
    private int naturalPerfection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NaturalPerfection {
      get { return naturalPerfection_; }
      set {
        naturalPerfection_ = value;
      }
    }

    /// <summary>Field number for the "empowered_rejuvenation" field.</summary>
    public const int EmpoweredRejuvenationFieldNumber = 78;
    private int empoweredRejuvenation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EmpoweredRejuvenation {
      get { return empoweredRejuvenation_; }
      set {
        empoweredRejuvenation_ = value;
      }
    }

    /// <summary>Field number for the "living_seed" field.</summary>
    public const int LivingSeedFieldNumber = 79;
    private int livingSeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LivingSeed {
      get { return livingSeed_; }
      set {
        livingSeed_ = value;
      }
    }

    /// <summary>Field number for the "revitalize" field.</summary>
    public const int RevitalizeFieldNumber = 80;
    private int revitalize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Revitalize {
      get { return revitalize_; }
      set {
        revitalize_ = value;
      }
    }

    /// <summary>Field number for the "tree_of_life" field.</summary>
    public const int TreeOfLifeFieldNumber = 81;
    private bool treeOfLife_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TreeOfLife {
      get { return treeOfLife_; }
      set {
        treeOfLife_ = value;
      }
    }

    /// <summary>Field number for the "improved_tree_of_life" field.</summary>
    public const int ImprovedTreeOfLifeFieldNumber = 82;
    private int improvedTreeOfLife_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedTreeOfLife {
      get { return improvedTreeOfLife_; }
      set {
        improvedTreeOfLife_ = value;
      }
    }

    /// <summary>Field number for the "improved_barkskin" field.</summary>
    public const int ImprovedBarkskinFieldNumber = 83;
    private int improvedBarkskin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImprovedBarkskin {
      get { return improvedBarkskin_; }
      set {
        improvedBarkskin_ = value;
      }
    }

    /// <summary>Field number for the "gift_of_the_earthmother" field.</summary>
    public const int GiftOfTheEarthmotherFieldNumber = 84;
    private int giftOfTheEarthmother_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GiftOfTheEarthmother {
      get { return giftOfTheEarthmother_; }
      set {
        giftOfTheEarthmother_ = value;
      }
    }

    /// <summary>Field number for the "wild_growth" field.</summary>
    public const int WildGrowthFieldNumber = 85;
    private bool wildGrowth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WildGrowth {
      get { return wildGrowth_; }
      set {
        wildGrowth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DruidTalents);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DruidTalents other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StarlightWrath != other.StarlightWrath) return false;
      if (Genesis != other.Genesis) return false;
      if (Moonglow != other.Moonglow) return false;
      if (NaturesMajesty != other.NaturesMajesty) return false;
      if (ImprovedMoonfire != other.ImprovedMoonfire) return false;
      if (Brambles != other.Brambles) return false;
      if (NaturesGrace != other.NaturesGrace) return false;
      if (NaturesSplendor != other.NaturesSplendor) return false;
      if (NaturesReach != other.NaturesReach) return false;
      if (Vengeance != other.Vengeance) return false;
      if (CelestialFocus != other.CelestialFocus) return false;
      if (LunarGuidance != other.LunarGuidance) return false;
      if (InsectSwarm != other.InsectSwarm) return false;
      if (ImprovedInsectSwarm != other.ImprovedInsectSwarm) return false;
      if (Dreamstate != other.Dreamstate) return false;
      if (Moonfury != other.Moonfury) return false;
      if (BalanceOfPower != other.BalanceOfPower) return false;
      if (MoonkinForm != other.MoonkinForm) return false;
      if (ImprovedMoonkinForm != other.ImprovedMoonkinForm) return false;
      if (ImprovedFaerieFire != other.ImprovedFaerieFire) return false;
      if (OwlkinFrenzy != other.OwlkinFrenzy) return false;
      if (WrathOfCenarius != other.WrathOfCenarius) return false;
      if (Eclipse != other.Eclipse) return false;
      if (Typhoon != other.Typhoon) return false;
      if (ForceOfNature != other.ForceOfNature) return false;
      if (GaleWinds != other.GaleWinds) return false;
      if (EarthAndMoon != other.EarthAndMoon) return false;
      if (Starfall != other.Starfall) return false;
      if (Ferocity != other.Ferocity) return false;
      if (FeralAggression != other.FeralAggression) return false;
      if (FeralInstinct != other.FeralInstinct) return false;
      if (SavageFury != other.SavageFury) return false;
      if (ThickHide != other.ThickHide) return false;
      if (FeralSwiftness != other.FeralSwiftness) return false;
      if (SurvivalInstincts != other.SurvivalInstincts) return false;
      if (SharpenedClaws != other.SharpenedClaws) return false;
      if (ShreddingAttacks != other.ShreddingAttacks) return false;
      if (PredatoryStrikes != other.PredatoryStrikes) return false;
      if (PrimalFury != other.PrimalFury) return false;
      if (PrimalPrecision != other.PrimalPrecision) return false;
      if (BrutalImpact != other.BrutalImpact) return false;
      if (FeralCharge != other.FeralCharge) return false;
      if (NurturingInstinct != other.NurturingInstinct) return false;
      if (NaturalReaction != other.NaturalReaction) return false;
      if (HeartOfTheWild != other.HeartOfTheWild) return false;
      if (SurvivalOfTheFittest != other.SurvivalOfTheFittest) return false;
      if (LeaderOfThePack != other.LeaderOfThePack) return false;
      if (ImprovedLeaderOfThePack != other.ImprovedLeaderOfThePack) return false;
      if (PrimalTenacity != other.PrimalTenacity) return false;
      if (ProtectorOfThePack != other.ProtectorOfThePack) return false;
      if (PredatoryInstincts != other.PredatoryInstincts) return false;
      if (InfectedWounds != other.InfectedWounds) return false;
      if (KingOfTheJungle != other.KingOfTheJungle) return false;
      if (Mangle != other.Mangle) return false;
      if (ImprovedMangle != other.ImprovedMangle) return false;
      if (RendAndTear != other.RendAndTear) return false;
      if (PrimalGore != other.PrimalGore) return false;
      if (Berserk != other.Berserk) return false;
      if (ImprovedMarkOfTheWild != other.ImprovedMarkOfTheWild) return false;
      if (NaturesFocus != other.NaturesFocus) return false;
      if (Furor != other.Furor) return false;
      if (Naturalist != other.Naturalist) return false;
      if (Subtlety != other.Subtlety) return false;
      if (NaturalShapeshifter != other.NaturalShapeshifter) return false;
      if (Intensity != other.Intensity) return false;
      if (OmenOfClarity != other.OmenOfClarity) return false;
      if (MasterShapeshifter != other.MasterShapeshifter) return false;
      if (TranquilSpirit != other.TranquilSpirit) return false;
      if (ImprovedRejuvenation != other.ImprovedRejuvenation) return false;
      if (NaturesSwiftness != other.NaturesSwiftness) return false;
      if (GiftOfNature != other.GiftOfNature) return false;
      if (ImprovedTranquility != other.ImprovedTranquility) return false;
      if (EmpoweredTouch != other.EmpoweredTouch) return false;
      if (NaturesBounty != other.NaturesBounty) return false;
      if (LivingSpirit != other.LivingSpirit) return false;
      if (Swiftmend != other.Swiftmend) return false;
      if (NaturalPerfection != other.NaturalPerfection) return false;
      if (EmpoweredRejuvenation != other.EmpoweredRejuvenation) return false;
      if (LivingSeed != other.LivingSeed) return false;
      if (Revitalize != other.Revitalize) return false;
      if (TreeOfLife != other.TreeOfLife) return false;
      if (ImprovedTreeOfLife != other.ImprovedTreeOfLife) return false;
      if (ImprovedBarkskin != other.ImprovedBarkskin) return false;
      if (GiftOfTheEarthmother != other.GiftOfTheEarthmother) return false;
      if (WildGrowth != other.WildGrowth) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StarlightWrath != 0) hash ^= StarlightWrath.GetHashCode();
      if (Genesis != 0) hash ^= Genesis.GetHashCode();
      if (Moonglow != 0) hash ^= Moonglow.GetHashCode();
      if (NaturesMajesty != 0) hash ^= NaturesMajesty.GetHashCode();
      if (ImprovedMoonfire != 0) hash ^= ImprovedMoonfire.GetHashCode();
      if (Brambles != 0) hash ^= Brambles.GetHashCode();
      if (NaturesGrace != 0) hash ^= NaturesGrace.GetHashCode();
      if (NaturesSplendor != false) hash ^= NaturesSplendor.GetHashCode();
      if (NaturesReach != 0) hash ^= NaturesReach.GetHashCode();
      if (Vengeance != 0) hash ^= Vengeance.GetHashCode();
      if (CelestialFocus != 0) hash ^= CelestialFocus.GetHashCode();
      if (LunarGuidance != 0) hash ^= LunarGuidance.GetHashCode();
      if (InsectSwarm != false) hash ^= InsectSwarm.GetHashCode();
      if (ImprovedInsectSwarm != 0) hash ^= ImprovedInsectSwarm.GetHashCode();
      if (Dreamstate != 0) hash ^= Dreamstate.GetHashCode();
      if (Moonfury != 0) hash ^= Moonfury.GetHashCode();
      if (BalanceOfPower != 0) hash ^= BalanceOfPower.GetHashCode();
      if (MoonkinForm != false) hash ^= MoonkinForm.GetHashCode();
      if (ImprovedMoonkinForm != 0) hash ^= ImprovedMoonkinForm.GetHashCode();
      if (ImprovedFaerieFire != 0) hash ^= ImprovedFaerieFire.GetHashCode();
      if (OwlkinFrenzy != 0) hash ^= OwlkinFrenzy.GetHashCode();
      if (WrathOfCenarius != 0) hash ^= WrathOfCenarius.GetHashCode();
      if (Eclipse != 0) hash ^= Eclipse.GetHashCode();
      if (Typhoon != false) hash ^= Typhoon.GetHashCode();
      if (ForceOfNature != false) hash ^= ForceOfNature.GetHashCode();
      if (GaleWinds != 0) hash ^= GaleWinds.GetHashCode();
      if (EarthAndMoon != 0) hash ^= EarthAndMoon.GetHashCode();
      if (Starfall != false) hash ^= Starfall.GetHashCode();
      if (Ferocity != 0) hash ^= Ferocity.GetHashCode();
      if (FeralAggression != 0) hash ^= FeralAggression.GetHashCode();
      if (FeralInstinct != 0) hash ^= FeralInstinct.GetHashCode();
      if (SavageFury != 0) hash ^= SavageFury.GetHashCode();
      if (ThickHide != 0) hash ^= ThickHide.GetHashCode();
      if (FeralSwiftness != 0) hash ^= FeralSwiftness.GetHashCode();
      if (SurvivalInstincts != false) hash ^= SurvivalInstincts.GetHashCode();
      if (SharpenedClaws != 0) hash ^= SharpenedClaws.GetHashCode();
      if (ShreddingAttacks != 0) hash ^= ShreddingAttacks.GetHashCode();
      if (PredatoryStrikes != 0) hash ^= PredatoryStrikes.GetHashCode();
      if (PrimalFury != 0) hash ^= PrimalFury.GetHashCode();
      if (PrimalPrecision != 0) hash ^= PrimalPrecision.GetHashCode();
      if (BrutalImpact != 0) hash ^= BrutalImpact.GetHashCode();
      if (FeralCharge != false) hash ^= FeralCharge.GetHashCode();
      if (NurturingInstinct != 0) hash ^= NurturingInstinct.GetHashCode();
      if (NaturalReaction != 0) hash ^= NaturalReaction.GetHashCode();
      if (HeartOfTheWild != 0) hash ^= HeartOfTheWild.GetHashCode();
      if (SurvivalOfTheFittest != 0) hash ^= SurvivalOfTheFittest.GetHashCode();
      if (LeaderOfThePack != false) hash ^= LeaderOfThePack.GetHashCode();
      if (ImprovedLeaderOfThePack != 0) hash ^= ImprovedLeaderOfThePack.GetHashCode();
      if (PrimalTenacity != 0) hash ^= PrimalTenacity.GetHashCode();
      if (ProtectorOfThePack != 0) hash ^= ProtectorOfThePack.GetHashCode();
      if (PredatoryInstincts != 0) hash ^= PredatoryInstincts.GetHashCode();
      if (InfectedWounds != 0) hash ^= InfectedWounds.GetHashCode();
      if (KingOfTheJungle != 0) hash ^= KingOfTheJungle.GetHashCode();
      if (Mangle != false) hash ^= Mangle.GetHashCode();
      if (ImprovedMangle != 0) hash ^= ImprovedMangle.GetHashCode();
      if (RendAndTear != 0) hash ^= RendAndTear.GetHashCode();
      if (PrimalGore != false) hash ^= PrimalGore.GetHashCode();
      if (Berserk != false) hash ^= Berserk.GetHashCode();
      if (ImprovedMarkOfTheWild != 0) hash ^= ImprovedMarkOfTheWild.GetHashCode();
      if (NaturesFocus != 0) hash ^= NaturesFocus.GetHashCode();
      if (Furor != 0) hash ^= Furor.GetHashCode();
      if (Naturalist != 0) hash ^= Naturalist.GetHashCode();
      if (Subtlety != 0) hash ^= Subtlety.GetHashCode();
      if (NaturalShapeshifter != 0) hash ^= NaturalShapeshifter.GetHashCode();
      if (Intensity != 0) hash ^= Intensity.GetHashCode();
      if (OmenOfClarity != false) hash ^= OmenOfClarity.GetHashCode();
      if (MasterShapeshifter != 0) hash ^= MasterShapeshifter.GetHashCode();
      if (TranquilSpirit != 0) hash ^= TranquilSpirit.GetHashCode();
      if (ImprovedRejuvenation != 0) hash ^= ImprovedRejuvenation.GetHashCode();
      if (NaturesSwiftness != false) hash ^= NaturesSwiftness.GetHashCode();
      if (GiftOfNature != 0) hash ^= GiftOfNature.GetHashCode();
      if (ImprovedTranquility != 0) hash ^= ImprovedTranquility.GetHashCode();
      if (EmpoweredTouch != 0) hash ^= EmpoweredTouch.GetHashCode();
      if (NaturesBounty != 0) hash ^= NaturesBounty.GetHashCode();
      if (LivingSpirit != 0) hash ^= LivingSpirit.GetHashCode();
      if (Swiftmend != false) hash ^= Swiftmend.GetHashCode();
      if (NaturalPerfection != 0) hash ^= NaturalPerfection.GetHashCode();
      if (EmpoweredRejuvenation != 0) hash ^= EmpoweredRejuvenation.GetHashCode();
      if (LivingSeed != 0) hash ^= LivingSeed.GetHashCode();
      if (Revitalize != 0) hash ^= Revitalize.GetHashCode();
      if (TreeOfLife != false) hash ^= TreeOfLife.GetHashCode();
      if (ImprovedTreeOfLife != 0) hash ^= ImprovedTreeOfLife.GetHashCode();
      if (ImprovedBarkskin != 0) hash ^= ImprovedBarkskin.GetHashCode();
      if (GiftOfTheEarthmother != 0) hash ^= GiftOfTheEarthmother.GetHashCode();
      if (WildGrowth != false) hash ^= WildGrowth.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StarlightWrath != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StarlightWrath);
      }
      if (Genesis != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Genesis);
      }
      if (Moonglow != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Moonglow);
      }
      if (NaturesMajesty != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NaturesMajesty);
      }
      if (ImprovedMoonfire != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ImprovedMoonfire);
      }
      if (Brambles != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Brambles);
      }
      if (NaturesGrace != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(NaturesGrace);
      }
      if (NaturesSplendor != false) {
        output.WriteRawTag(64);
        output.WriteBool(NaturesSplendor);
      }
      if (NaturesReach != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(NaturesReach);
      }
      if (Vengeance != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Vengeance);
      }
      if (CelestialFocus != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(CelestialFocus);
      }
      if (LunarGuidance != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(LunarGuidance);
      }
      if (InsectSwarm != false) {
        output.WriteRawTag(104);
        output.WriteBool(InsectSwarm);
      }
      if (ImprovedInsectSwarm != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(ImprovedInsectSwarm);
      }
      if (Dreamstate != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dreamstate);
      }
      if (Moonfury != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Moonfury);
      }
      if (BalanceOfPower != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(BalanceOfPower);
      }
      if (MoonkinForm != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(MoonkinForm);
      }
      if (ImprovedMoonkinForm != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(ImprovedMoonkinForm);
      }
      if (ImprovedFaerieFire != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ImprovedFaerieFire);
      }
      if (OwlkinFrenzy != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(OwlkinFrenzy);
      }
      if (WrathOfCenarius != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(WrathOfCenarius);
      }
      if (Eclipse != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(Eclipse);
      }
      if (Typhoon != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(Typhoon);
      }
      if (ForceOfNature != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(ForceOfNature);
      }
      if (GaleWinds != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(GaleWinds);
      }
      if (EarthAndMoon != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(EarthAndMoon);
      }
      if (Starfall != false) {
        output.WriteRawTag(224, 1);
        output.WriteBool(Starfall);
      }
      if (Ferocity != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(Ferocity);
      }
      if (FeralAggression != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(FeralAggression);
      }
      if (FeralInstinct != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(FeralInstinct);
      }
      if (SavageFury != 0) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(SavageFury);
      }
      if (ThickHide != 0) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(ThickHide);
      }
      if (FeralSwiftness != 0) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(FeralSwiftness);
      }
      if (SurvivalInstincts != false) {
        output.WriteRawTag(152, 2);
        output.WriteBool(SurvivalInstincts);
      }
      if (SharpenedClaws != 0) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(SharpenedClaws);
      }
      if (ShreddingAttacks != 0) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(ShreddingAttacks);
      }
      if (PredatoryStrikes != 0) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(PredatoryStrikes);
      }
      if (PrimalFury != 0) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(PrimalFury);
      }
      if (PrimalPrecision != 0) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(PrimalPrecision);
      }
      if (BrutalImpact != 0) {
        output.WriteRawTag(200, 2);
        output.WriteInt32(BrutalImpact);
      }
      if (FeralCharge != false) {
        output.WriteRawTag(208, 2);
        output.WriteBool(FeralCharge);
      }
      if (NurturingInstinct != 0) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(NurturingInstinct);
      }
      if (NaturalReaction != 0) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(NaturalReaction);
      }
      if (HeartOfTheWild != 0) {
        output.WriteRawTag(232, 2);
        output.WriteInt32(HeartOfTheWild);
      }
      if (SurvivalOfTheFittest != 0) {
        output.WriteRawTag(240, 2);
        output.WriteInt32(SurvivalOfTheFittest);
      }
      if (LeaderOfThePack != false) {
        output.WriteRawTag(248, 2);
        output.WriteBool(LeaderOfThePack);
      }
      if (ImprovedLeaderOfThePack != 0) {
        output.WriteRawTag(128, 3);
        output.WriteInt32(ImprovedLeaderOfThePack);
      }
      if (PrimalTenacity != 0) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(PrimalTenacity);
      }
      if (ProtectorOfThePack != 0) {
        output.WriteRawTag(144, 3);
        output.WriteInt32(ProtectorOfThePack);
      }
      if (PredatoryInstincts != 0) {
        output.WriteRawTag(152, 3);
        output.WriteInt32(PredatoryInstincts);
      }
      if (InfectedWounds != 0) {
        output.WriteRawTag(160, 3);
        output.WriteInt32(InfectedWounds);
      }
      if (KingOfTheJungle != 0) {
        output.WriteRawTag(168, 3);
        output.WriteInt32(KingOfTheJungle);
      }
      if (Mangle != false) {
        output.WriteRawTag(176, 3);
        output.WriteBool(Mangle);
      }
      if (ImprovedMangle != 0) {
        output.WriteRawTag(184, 3);
        output.WriteInt32(ImprovedMangle);
      }
      if (RendAndTear != 0) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(RendAndTear);
      }
      if (PrimalGore != false) {
        output.WriteRawTag(200, 3);
        output.WriteBool(PrimalGore);
      }
      if (Berserk != false) {
        output.WriteRawTag(208, 3);
        output.WriteBool(Berserk);
      }
      if (ImprovedMarkOfTheWild != 0) {
        output.WriteRawTag(216, 3);
        output.WriteInt32(ImprovedMarkOfTheWild);
      }
      if (NaturesFocus != 0) {
        output.WriteRawTag(224, 3);
        output.WriteInt32(NaturesFocus);
      }
      if (Furor != 0) {
        output.WriteRawTag(232, 3);
        output.WriteInt32(Furor);
      }
      if (Naturalist != 0) {
        output.WriteRawTag(240, 3);
        output.WriteInt32(Naturalist);
      }
      if (Subtlety != 0) {
        output.WriteRawTag(248, 3);
        output.WriteInt32(Subtlety);
      }
      if (NaturalShapeshifter != 0) {
        output.WriteRawTag(128, 4);
        output.WriteInt32(NaturalShapeshifter);
      }
      if (Intensity != 0) {
        output.WriteRawTag(136, 4);
        output.WriteInt32(Intensity);
      }
      if (OmenOfClarity != false) {
        output.WriteRawTag(144, 4);
        output.WriteBool(OmenOfClarity);
      }
      if (MasterShapeshifter != 0) {
        output.WriteRawTag(152, 4);
        output.WriteInt32(MasterShapeshifter);
      }
      if (TranquilSpirit != 0) {
        output.WriteRawTag(160, 4);
        output.WriteInt32(TranquilSpirit);
      }
      if (ImprovedRejuvenation != 0) {
        output.WriteRawTag(168, 4);
        output.WriteInt32(ImprovedRejuvenation);
      }
      if (NaturesSwiftness != false) {
        output.WriteRawTag(176, 4);
        output.WriteBool(NaturesSwiftness);
      }
      if (GiftOfNature != 0) {
        output.WriteRawTag(184, 4);
        output.WriteInt32(GiftOfNature);
      }
      if (ImprovedTranquility != 0) {
        output.WriteRawTag(192, 4);
        output.WriteInt32(ImprovedTranquility);
      }
      if (EmpoweredTouch != 0) {
        output.WriteRawTag(200, 4);
        output.WriteInt32(EmpoweredTouch);
      }
      if (NaturesBounty != 0) {
        output.WriteRawTag(208, 4);
        output.WriteInt32(NaturesBounty);
      }
      if (LivingSpirit != 0) {
        output.WriteRawTag(216, 4);
        output.WriteInt32(LivingSpirit);
      }
      if (Swiftmend != false) {
        output.WriteRawTag(224, 4);
        output.WriteBool(Swiftmend);
      }
      if (NaturalPerfection != 0) {
        output.WriteRawTag(232, 4);
        output.WriteInt32(NaturalPerfection);
      }
      if (EmpoweredRejuvenation != 0) {
        output.WriteRawTag(240, 4);
        output.WriteInt32(EmpoweredRejuvenation);
      }
      if (LivingSeed != 0) {
        output.WriteRawTag(248, 4);
        output.WriteInt32(LivingSeed);
      }
      if (Revitalize != 0) {
        output.WriteRawTag(128, 5);
        output.WriteInt32(Revitalize);
      }
      if (TreeOfLife != false) {
        output.WriteRawTag(136, 5);
        output.WriteBool(TreeOfLife);
      }
      if (ImprovedTreeOfLife != 0) {
        output.WriteRawTag(144, 5);
        output.WriteInt32(ImprovedTreeOfLife);
      }
      if (ImprovedBarkskin != 0) {
        output.WriteRawTag(152, 5);
        output.WriteInt32(ImprovedBarkskin);
      }
      if (GiftOfTheEarthmother != 0) {
        output.WriteRawTag(160, 5);
        output.WriteInt32(GiftOfTheEarthmother);
      }
      if (WildGrowth != false) {
        output.WriteRawTag(168, 5);
        output.WriteBool(WildGrowth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StarlightWrath != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StarlightWrath);
      }
      if (Genesis != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Genesis);
      }
      if (Moonglow != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Moonglow);
      }
      if (NaturesMajesty != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NaturesMajesty);
      }
      if (ImprovedMoonfire != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ImprovedMoonfire);
      }
      if (Brambles != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Brambles);
      }
      if (NaturesGrace != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(NaturesGrace);
      }
      if (NaturesSplendor != false) {
        output.WriteRawTag(64);
        output.WriteBool(NaturesSplendor);
      }
      if (NaturesReach != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(NaturesReach);
      }
      if (Vengeance != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Vengeance);
      }
      if (CelestialFocus != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(CelestialFocus);
      }
      if (LunarGuidance != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(LunarGuidance);
      }
      if (InsectSwarm != false) {
        output.WriteRawTag(104);
        output.WriteBool(InsectSwarm);
      }
      if (ImprovedInsectSwarm != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(ImprovedInsectSwarm);
      }
      if (Dreamstate != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dreamstate);
      }
      if (Moonfury != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Moonfury);
      }
      if (BalanceOfPower != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(BalanceOfPower);
      }
      if (MoonkinForm != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(MoonkinForm);
      }
      if (ImprovedMoonkinForm != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(ImprovedMoonkinForm);
      }
      if (ImprovedFaerieFire != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ImprovedFaerieFire);
      }
      if (OwlkinFrenzy != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(OwlkinFrenzy);
      }
      if (WrathOfCenarius != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(WrathOfCenarius);
      }
      if (Eclipse != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(Eclipse);
      }
      if (Typhoon != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(Typhoon);
      }
      if (ForceOfNature != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(ForceOfNature);
      }
      if (GaleWinds != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(GaleWinds);
      }
      if (EarthAndMoon != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(EarthAndMoon);
      }
      if (Starfall != false) {
        output.WriteRawTag(224, 1);
        output.WriteBool(Starfall);
      }
      if (Ferocity != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(Ferocity);
      }
      if (FeralAggression != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(FeralAggression);
      }
      if (FeralInstinct != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(FeralInstinct);
      }
      if (SavageFury != 0) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(SavageFury);
      }
      if (ThickHide != 0) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(ThickHide);
      }
      if (FeralSwiftness != 0) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(FeralSwiftness);
      }
      if (SurvivalInstincts != false) {
        output.WriteRawTag(152, 2);
        output.WriteBool(SurvivalInstincts);
      }
      if (SharpenedClaws != 0) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(SharpenedClaws);
      }
      if (ShreddingAttacks != 0) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(ShreddingAttacks);
      }
      if (PredatoryStrikes != 0) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(PredatoryStrikes);
      }
      if (PrimalFury != 0) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(PrimalFury);
      }
      if (PrimalPrecision != 0) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(PrimalPrecision);
      }
      if (BrutalImpact != 0) {
        output.WriteRawTag(200, 2);
        output.WriteInt32(BrutalImpact);
      }
      if (FeralCharge != false) {
        output.WriteRawTag(208, 2);
        output.WriteBool(FeralCharge);
      }
      if (NurturingInstinct != 0) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(NurturingInstinct);
      }
      if (NaturalReaction != 0) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(NaturalReaction);
      }
      if (HeartOfTheWild != 0) {
        output.WriteRawTag(232, 2);
        output.WriteInt32(HeartOfTheWild);
      }
      if (SurvivalOfTheFittest != 0) {
        output.WriteRawTag(240, 2);
        output.WriteInt32(SurvivalOfTheFittest);
      }
      if (LeaderOfThePack != false) {
        output.WriteRawTag(248, 2);
        output.WriteBool(LeaderOfThePack);
      }
      if (ImprovedLeaderOfThePack != 0) {
        output.WriteRawTag(128, 3);
        output.WriteInt32(ImprovedLeaderOfThePack);
      }
      if (PrimalTenacity != 0) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(PrimalTenacity);
      }
      if (ProtectorOfThePack != 0) {
        output.WriteRawTag(144, 3);
        output.WriteInt32(ProtectorOfThePack);
      }
      if (PredatoryInstincts != 0) {
        output.WriteRawTag(152, 3);
        output.WriteInt32(PredatoryInstincts);
      }
      if (InfectedWounds != 0) {
        output.WriteRawTag(160, 3);
        output.WriteInt32(InfectedWounds);
      }
      if (KingOfTheJungle != 0) {
        output.WriteRawTag(168, 3);
        output.WriteInt32(KingOfTheJungle);
      }
      if (Mangle != false) {
        output.WriteRawTag(176, 3);
        output.WriteBool(Mangle);
      }
      if (ImprovedMangle != 0) {
        output.WriteRawTag(184, 3);
        output.WriteInt32(ImprovedMangle);
      }
      if (RendAndTear != 0) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(RendAndTear);
      }
      if (PrimalGore != false) {
        output.WriteRawTag(200, 3);
        output.WriteBool(PrimalGore);
      }
      if (Berserk != false) {
        output.WriteRawTag(208, 3);
        output.WriteBool(Berserk);
      }
      if (ImprovedMarkOfTheWild != 0) {
        output.WriteRawTag(216, 3);
        output.WriteInt32(ImprovedMarkOfTheWild);
      }
      if (NaturesFocus != 0) {
        output.WriteRawTag(224, 3);
        output.WriteInt32(NaturesFocus);
      }
      if (Furor != 0) {
        output.WriteRawTag(232, 3);
        output.WriteInt32(Furor);
      }
      if (Naturalist != 0) {
        output.WriteRawTag(240, 3);
        output.WriteInt32(Naturalist);
      }
      if (Subtlety != 0) {
        output.WriteRawTag(248, 3);
        output.WriteInt32(Subtlety);
      }
      if (NaturalShapeshifter != 0) {
        output.WriteRawTag(128, 4);
        output.WriteInt32(NaturalShapeshifter);
      }
      if (Intensity != 0) {
        output.WriteRawTag(136, 4);
        output.WriteInt32(Intensity);
      }
      if (OmenOfClarity != false) {
        output.WriteRawTag(144, 4);
        output.WriteBool(OmenOfClarity);
      }
      if (MasterShapeshifter != 0) {
        output.WriteRawTag(152, 4);
        output.WriteInt32(MasterShapeshifter);
      }
      if (TranquilSpirit != 0) {
        output.WriteRawTag(160, 4);
        output.WriteInt32(TranquilSpirit);
      }
      if (ImprovedRejuvenation != 0) {
        output.WriteRawTag(168, 4);
        output.WriteInt32(ImprovedRejuvenation);
      }
      if (NaturesSwiftness != false) {
        output.WriteRawTag(176, 4);
        output.WriteBool(NaturesSwiftness);
      }
      if (GiftOfNature != 0) {
        output.WriteRawTag(184, 4);
        output.WriteInt32(GiftOfNature);
      }
      if (ImprovedTranquility != 0) {
        output.WriteRawTag(192, 4);
        output.WriteInt32(ImprovedTranquility);
      }
      if (EmpoweredTouch != 0) {
        output.WriteRawTag(200, 4);
        output.WriteInt32(EmpoweredTouch);
      }
      if (NaturesBounty != 0) {
        output.WriteRawTag(208, 4);
        output.WriteInt32(NaturesBounty);
      }
      if (LivingSpirit != 0) {
        output.WriteRawTag(216, 4);
        output.WriteInt32(LivingSpirit);
      }
      if (Swiftmend != false) {
        output.WriteRawTag(224, 4);
        output.WriteBool(Swiftmend);
      }
      if (NaturalPerfection != 0) {
        output.WriteRawTag(232, 4);
        output.WriteInt32(NaturalPerfection);
      }
      if (EmpoweredRejuvenation != 0) {
        output.WriteRawTag(240, 4);
        output.WriteInt32(EmpoweredRejuvenation);
      }
      if (LivingSeed != 0) {
        output.WriteRawTag(248, 4);
        output.WriteInt32(LivingSeed);
      }
      if (Revitalize != 0) {
        output.WriteRawTag(128, 5);
        output.WriteInt32(Revitalize);
      }
      if (TreeOfLife != false) {
        output.WriteRawTag(136, 5);
        output.WriteBool(TreeOfLife);
      }
      if (ImprovedTreeOfLife != 0) {
        output.WriteRawTag(144, 5);
        output.WriteInt32(ImprovedTreeOfLife);
      }
      if (ImprovedBarkskin != 0) {
        output.WriteRawTag(152, 5);
        output.WriteInt32(ImprovedBarkskin);
      }
      if (GiftOfTheEarthmother != 0) {
        output.WriteRawTag(160, 5);
        output.WriteInt32(GiftOfTheEarthmother);
      }
      if (WildGrowth != false) {
        output.WriteRawTag(168, 5);
        output.WriteBool(WildGrowth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StarlightWrath != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StarlightWrath);
      }
      if (Genesis != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Genesis);
      }
      if (Moonglow != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Moonglow);
      }
      if (NaturesMajesty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NaturesMajesty);
      }
      if (ImprovedMoonfire != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImprovedMoonfire);
      }
      if (Brambles != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Brambles);
      }
      if (NaturesGrace != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NaturesGrace);
      }
      if (NaturesSplendor != false) {
        size += 1 + 1;
      }
      if (NaturesReach != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NaturesReach);
      }
      if (Vengeance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vengeance);
      }
      if (CelestialFocus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CelestialFocus);
      }
      if (LunarGuidance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LunarGuidance);
      }
      if (InsectSwarm != false) {
        size += 1 + 1;
      }
      if (ImprovedInsectSwarm != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImprovedInsectSwarm);
      }
      if (Dreamstate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dreamstate);
      }
      if (Moonfury != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Moonfury);
      }
      if (BalanceOfPower != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BalanceOfPower);
      }
      if (MoonkinForm != false) {
        size += 2 + 1;
      }
      if (ImprovedMoonkinForm != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedMoonkinForm);
      }
      if (ImprovedFaerieFire != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedFaerieFire);
      }
      if (OwlkinFrenzy != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(OwlkinFrenzy);
      }
      if (WrathOfCenarius != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(WrathOfCenarius);
      }
      if (Eclipse != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Eclipse);
      }
      if (Typhoon != false) {
        size += 2 + 1;
      }
      if (ForceOfNature != false) {
        size += 2 + 1;
      }
      if (GaleWinds != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GaleWinds);
      }
      if (EarthAndMoon != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EarthAndMoon);
      }
      if (Starfall != false) {
        size += 2 + 1;
      }
      if (Ferocity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Ferocity);
      }
      if (FeralAggression != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FeralAggression);
      }
      if (FeralInstinct != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FeralInstinct);
      }
      if (SavageFury != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SavageFury);
      }
      if (ThickHide != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ThickHide);
      }
      if (FeralSwiftness != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FeralSwiftness);
      }
      if (SurvivalInstincts != false) {
        size += 2 + 1;
      }
      if (SharpenedClaws != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SharpenedClaws);
      }
      if (ShreddingAttacks != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ShreddingAttacks);
      }
      if (PredatoryStrikes != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PredatoryStrikes);
      }
      if (PrimalFury != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrimalFury);
      }
      if (PrimalPrecision != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrimalPrecision);
      }
      if (BrutalImpact != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BrutalImpact);
      }
      if (FeralCharge != false) {
        size += 2 + 1;
      }
      if (NurturingInstinct != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NurturingInstinct);
      }
      if (NaturalReaction != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NaturalReaction);
      }
      if (HeartOfTheWild != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HeartOfTheWild);
      }
      if (SurvivalOfTheFittest != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SurvivalOfTheFittest);
      }
      if (LeaderOfThePack != false) {
        size += 2 + 1;
      }
      if (ImprovedLeaderOfThePack != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedLeaderOfThePack);
      }
      if (PrimalTenacity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrimalTenacity);
      }
      if (ProtectorOfThePack != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ProtectorOfThePack);
      }
      if (PredatoryInstincts != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PredatoryInstincts);
      }
      if (InfectedWounds != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(InfectedWounds);
      }
      if (KingOfTheJungle != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(KingOfTheJungle);
      }
      if (Mangle != false) {
        size += 2 + 1;
      }
      if (ImprovedMangle != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedMangle);
      }
      if (RendAndTear != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RendAndTear);
      }
      if (PrimalGore != false) {
        size += 2 + 1;
      }
      if (Berserk != false) {
        size += 2 + 1;
      }
      if (ImprovedMarkOfTheWild != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedMarkOfTheWild);
      }
      if (NaturesFocus != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NaturesFocus);
      }
      if (Furor != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Furor);
      }
      if (Naturalist != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Naturalist);
      }
      if (Subtlety != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Subtlety);
      }
      if (NaturalShapeshifter != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NaturalShapeshifter);
      }
      if (Intensity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Intensity);
      }
      if (OmenOfClarity != false) {
        size += 2 + 1;
      }
      if (MasterShapeshifter != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MasterShapeshifter);
      }
      if (TranquilSpirit != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TranquilSpirit);
      }
      if (ImprovedRejuvenation != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedRejuvenation);
      }
      if (NaturesSwiftness != false) {
        size += 2 + 1;
      }
      if (GiftOfNature != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GiftOfNature);
      }
      if (ImprovedTranquility != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedTranquility);
      }
      if (EmpoweredTouch != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EmpoweredTouch);
      }
      if (NaturesBounty != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NaturesBounty);
      }
      if (LivingSpirit != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LivingSpirit);
      }
      if (Swiftmend != false) {
        size += 2 + 1;
      }
      if (NaturalPerfection != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NaturalPerfection);
      }
      if (EmpoweredRejuvenation != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EmpoweredRejuvenation);
      }
      if (LivingSeed != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LivingSeed);
      }
      if (Revitalize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Revitalize);
      }
      if (TreeOfLife != false) {
        size += 2 + 1;
      }
      if (ImprovedTreeOfLife != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedTreeOfLife);
      }
      if (ImprovedBarkskin != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImprovedBarkskin);
      }
      if (GiftOfTheEarthmother != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GiftOfTheEarthmother);
      }
      if (WildGrowth != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DruidTalents other) {
      if (other == null) {
        return;
      }
      if (other.StarlightWrath != 0) {
        StarlightWrath = other.StarlightWrath;
      }
      if (other.Genesis != 0) {
        Genesis = other.Genesis;
      }
      if (other.Moonglow != 0) {
        Moonglow = other.Moonglow;
      }
      if (other.NaturesMajesty != 0) {
        NaturesMajesty = other.NaturesMajesty;
      }
      if (other.ImprovedMoonfire != 0) {
        ImprovedMoonfire = other.ImprovedMoonfire;
      }
      if (other.Brambles != 0) {
        Brambles = other.Brambles;
      }
      if (other.NaturesGrace != 0) {
        NaturesGrace = other.NaturesGrace;
      }
      if (other.NaturesSplendor != false) {
        NaturesSplendor = other.NaturesSplendor;
      }
      if (other.NaturesReach != 0) {
        NaturesReach = other.NaturesReach;
      }
      if (other.Vengeance != 0) {
        Vengeance = other.Vengeance;
      }
      if (other.CelestialFocus != 0) {
        CelestialFocus = other.CelestialFocus;
      }
      if (other.LunarGuidance != 0) {
        LunarGuidance = other.LunarGuidance;
      }
      if (other.InsectSwarm != false) {
        InsectSwarm = other.InsectSwarm;
      }
      if (other.ImprovedInsectSwarm != 0) {
        ImprovedInsectSwarm = other.ImprovedInsectSwarm;
      }
      if (other.Dreamstate != 0) {
        Dreamstate = other.Dreamstate;
      }
      if (other.Moonfury != 0) {
        Moonfury = other.Moonfury;
      }
      if (other.BalanceOfPower != 0) {
        BalanceOfPower = other.BalanceOfPower;
      }
      if (other.MoonkinForm != false) {
        MoonkinForm = other.MoonkinForm;
      }
      if (other.ImprovedMoonkinForm != 0) {
        ImprovedMoonkinForm = other.ImprovedMoonkinForm;
      }
      if (other.ImprovedFaerieFire != 0) {
        ImprovedFaerieFire = other.ImprovedFaerieFire;
      }
      if (other.OwlkinFrenzy != 0) {
        OwlkinFrenzy = other.OwlkinFrenzy;
      }
      if (other.WrathOfCenarius != 0) {
        WrathOfCenarius = other.WrathOfCenarius;
      }
      if (other.Eclipse != 0) {
        Eclipse = other.Eclipse;
      }
      if (other.Typhoon != false) {
        Typhoon = other.Typhoon;
      }
      if (other.ForceOfNature != false) {
        ForceOfNature = other.ForceOfNature;
      }
      if (other.GaleWinds != 0) {
        GaleWinds = other.GaleWinds;
      }
      if (other.EarthAndMoon != 0) {
        EarthAndMoon = other.EarthAndMoon;
      }
      if (other.Starfall != false) {
        Starfall = other.Starfall;
      }
      if (other.Ferocity != 0) {
        Ferocity = other.Ferocity;
      }
      if (other.FeralAggression != 0) {
        FeralAggression = other.FeralAggression;
      }
      if (other.FeralInstinct != 0) {
        FeralInstinct = other.FeralInstinct;
      }
      if (other.SavageFury != 0) {
        SavageFury = other.SavageFury;
      }
      if (other.ThickHide != 0) {
        ThickHide = other.ThickHide;
      }
      if (other.FeralSwiftness != 0) {
        FeralSwiftness = other.FeralSwiftness;
      }
      if (other.SurvivalInstincts != false) {
        SurvivalInstincts = other.SurvivalInstincts;
      }
      if (other.SharpenedClaws != 0) {
        SharpenedClaws = other.SharpenedClaws;
      }
      if (other.ShreddingAttacks != 0) {
        ShreddingAttacks = other.ShreddingAttacks;
      }
      if (other.PredatoryStrikes != 0) {
        PredatoryStrikes = other.PredatoryStrikes;
      }
      if (other.PrimalFury != 0) {
        PrimalFury = other.PrimalFury;
      }
      if (other.PrimalPrecision != 0) {
        PrimalPrecision = other.PrimalPrecision;
      }
      if (other.BrutalImpact != 0) {
        BrutalImpact = other.BrutalImpact;
      }
      if (other.FeralCharge != false) {
        FeralCharge = other.FeralCharge;
      }
      if (other.NurturingInstinct != 0) {
        NurturingInstinct = other.NurturingInstinct;
      }
      if (other.NaturalReaction != 0) {
        NaturalReaction = other.NaturalReaction;
      }
      if (other.HeartOfTheWild != 0) {
        HeartOfTheWild = other.HeartOfTheWild;
      }
      if (other.SurvivalOfTheFittest != 0) {
        SurvivalOfTheFittest = other.SurvivalOfTheFittest;
      }
      if (other.LeaderOfThePack != false) {
        LeaderOfThePack = other.LeaderOfThePack;
      }
      if (other.ImprovedLeaderOfThePack != 0) {
        ImprovedLeaderOfThePack = other.ImprovedLeaderOfThePack;
      }
      if (other.PrimalTenacity != 0) {
        PrimalTenacity = other.PrimalTenacity;
      }
      if (other.ProtectorOfThePack != 0) {
        ProtectorOfThePack = other.ProtectorOfThePack;
      }
      if (other.PredatoryInstincts != 0) {
        PredatoryInstincts = other.PredatoryInstincts;
      }
      if (other.InfectedWounds != 0) {
        InfectedWounds = other.InfectedWounds;
      }
      if (other.KingOfTheJungle != 0) {
        KingOfTheJungle = other.KingOfTheJungle;
      }
      if (other.Mangle != false) {
        Mangle = other.Mangle;
      }
      if (other.ImprovedMangle != 0) {
        ImprovedMangle = other.ImprovedMangle;
      }
      if (other.RendAndTear != 0) {
        RendAndTear = other.RendAndTear;
      }
      if (other.PrimalGore != false) {
        PrimalGore = other.PrimalGore;
      }
      if (other.Berserk != false) {
        Berserk = other.Berserk;
      }
      if (other.ImprovedMarkOfTheWild != 0) {
        ImprovedMarkOfTheWild = other.ImprovedMarkOfTheWild;
      }
      if (other.NaturesFocus != 0) {
        NaturesFocus = other.NaturesFocus;
      }
      if (other.Furor != 0) {
        Furor = other.Furor;
      }
      if (other.Naturalist != 0) {
        Naturalist = other.Naturalist;
      }
      if (other.Subtlety != 0) {
        Subtlety = other.Subtlety;
      }
      if (other.NaturalShapeshifter != 0) {
        NaturalShapeshifter = other.NaturalShapeshifter;
      }
      if (other.Intensity != 0) {
        Intensity = other.Intensity;
      }
      if (other.OmenOfClarity != false) {
        OmenOfClarity = other.OmenOfClarity;
      }
      if (other.MasterShapeshifter != 0) {
        MasterShapeshifter = other.MasterShapeshifter;
      }
      if (other.TranquilSpirit != 0) {
        TranquilSpirit = other.TranquilSpirit;
      }
      if (other.ImprovedRejuvenation != 0) {
        ImprovedRejuvenation = other.ImprovedRejuvenation;
      }
      if (other.NaturesSwiftness != false) {
        NaturesSwiftness = other.NaturesSwiftness;
      }
      if (other.GiftOfNature != 0) {
        GiftOfNature = other.GiftOfNature;
      }
      if (other.ImprovedTranquility != 0) {
        ImprovedTranquility = other.ImprovedTranquility;
      }
      if (other.EmpoweredTouch != 0) {
        EmpoweredTouch = other.EmpoweredTouch;
      }
      if (other.NaturesBounty != 0) {
        NaturesBounty = other.NaturesBounty;
      }
      if (other.LivingSpirit != 0) {
        LivingSpirit = other.LivingSpirit;
      }
      if (other.Swiftmend != false) {
        Swiftmend = other.Swiftmend;
      }
      if (other.NaturalPerfection != 0) {
        NaturalPerfection = other.NaturalPerfection;
      }
      if (other.EmpoweredRejuvenation != 0) {
        EmpoweredRejuvenation = other.EmpoweredRejuvenation;
      }
      if (other.LivingSeed != 0) {
        LivingSeed = other.LivingSeed;
      }
      if (other.Revitalize != 0) {
        Revitalize = other.Revitalize;
      }
      if (other.TreeOfLife != false) {
        TreeOfLife = other.TreeOfLife;
      }
      if (other.ImprovedTreeOfLife != 0) {
        ImprovedTreeOfLife = other.ImprovedTreeOfLife;
      }
      if (other.ImprovedBarkskin != 0) {
        ImprovedBarkskin = other.ImprovedBarkskin;
      }
      if (other.GiftOfTheEarthmother != 0) {
        GiftOfTheEarthmother = other.GiftOfTheEarthmother;
      }
      if (other.WildGrowth != false) {
        WildGrowth = other.WildGrowth;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StarlightWrath = input.ReadInt32();
            break;
          }
          case 16: {
            Genesis = input.ReadInt32();
            break;
          }
          case 24: {
            Moonglow = input.ReadInt32();
            break;
          }
          case 32: {
            NaturesMajesty = input.ReadInt32();
            break;
          }
          case 40: {
            ImprovedMoonfire = input.ReadInt32();
            break;
          }
          case 48: {
            Brambles = input.ReadInt32();
            break;
          }
          case 56: {
            NaturesGrace = input.ReadInt32();
            break;
          }
          case 64: {
            NaturesSplendor = input.ReadBool();
            break;
          }
          case 72: {
            NaturesReach = input.ReadInt32();
            break;
          }
          case 80: {
            Vengeance = input.ReadInt32();
            break;
          }
          case 88: {
            CelestialFocus = input.ReadInt32();
            break;
          }
          case 96: {
            LunarGuidance = input.ReadInt32();
            break;
          }
          case 104: {
            InsectSwarm = input.ReadBool();
            break;
          }
          case 112: {
            ImprovedInsectSwarm = input.ReadInt32();
            break;
          }
          case 120: {
            Dreamstate = input.ReadInt32();
            break;
          }
          case 128: {
            Moonfury = input.ReadInt32();
            break;
          }
          case 136: {
            BalanceOfPower = input.ReadInt32();
            break;
          }
          case 144: {
            MoonkinForm = input.ReadBool();
            break;
          }
          case 152: {
            ImprovedMoonkinForm = input.ReadInt32();
            break;
          }
          case 160: {
            ImprovedFaerieFire = input.ReadInt32();
            break;
          }
          case 168: {
            OwlkinFrenzy = input.ReadInt32();
            break;
          }
          case 176: {
            WrathOfCenarius = input.ReadInt32();
            break;
          }
          case 184: {
            Eclipse = input.ReadInt32();
            break;
          }
          case 192: {
            Typhoon = input.ReadBool();
            break;
          }
          case 200: {
            ForceOfNature = input.ReadBool();
            break;
          }
          case 208: {
            GaleWinds = input.ReadInt32();
            break;
          }
          case 216: {
            EarthAndMoon = input.ReadInt32();
            break;
          }
          case 224: {
            Starfall = input.ReadBool();
            break;
          }
          case 232: {
            Ferocity = input.ReadInt32();
            break;
          }
          case 240: {
            FeralAggression = input.ReadInt32();
            break;
          }
          case 248: {
            FeralInstinct = input.ReadInt32();
            break;
          }
          case 256: {
            SavageFury = input.ReadInt32();
            break;
          }
          case 264: {
            ThickHide = input.ReadInt32();
            break;
          }
          case 272: {
            FeralSwiftness = input.ReadInt32();
            break;
          }
          case 280: {
            SurvivalInstincts = input.ReadBool();
            break;
          }
          case 288: {
            SharpenedClaws = input.ReadInt32();
            break;
          }
          case 296: {
            ShreddingAttacks = input.ReadInt32();
            break;
          }
          case 304: {
            PredatoryStrikes = input.ReadInt32();
            break;
          }
          case 312: {
            PrimalFury = input.ReadInt32();
            break;
          }
          case 320: {
            PrimalPrecision = input.ReadInt32();
            break;
          }
          case 328: {
            BrutalImpact = input.ReadInt32();
            break;
          }
          case 336: {
            FeralCharge = input.ReadBool();
            break;
          }
          case 344: {
            NurturingInstinct = input.ReadInt32();
            break;
          }
          case 352: {
            NaturalReaction = input.ReadInt32();
            break;
          }
          case 360: {
            HeartOfTheWild = input.ReadInt32();
            break;
          }
          case 368: {
            SurvivalOfTheFittest = input.ReadInt32();
            break;
          }
          case 376: {
            LeaderOfThePack = input.ReadBool();
            break;
          }
          case 384: {
            ImprovedLeaderOfThePack = input.ReadInt32();
            break;
          }
          case 392: {
            PrimalTenacity = input.ReadInt32();
            break;
          }
          case 400: {
            ProtectorOfThePack = input.ReadInt32();
            break;
          }
          case 408: {
            PredatoryInstincts = input.ReadInt32();
            break;
          }
          case 416: {
            InfectedWounds = input.ReadInt32();
            break;
          }
          case 424: {
            KingOfTheJungle = input.ReadInt32();
            break;
          }
          case 432: {
            Mangle = input.ReadBool();
            break;
          }
          case 440: {
            ImprovedMangle = input.ReadInt32();
            break;
          }
          case 448: {
            RendAndTear = input.ReadInt32();
            break;
          }
          case 456: {
            PrimalGore = input.ReadBool();
            break;
          }
          case 464: {
            Berserk = input.ReadBool();
            break;
          }
          case 472: {
            ImprovedMarkOfTheWild = input.ReadInt32();
            break;
          }
          case 480: {
            NaturesFocus = input.ReadInt32();
            break;
          }
          case 488: {
            Furor = input.ReadInt32();
            break;
          }
          case 496: {
            Naturalist = input.ReadInt32();
            break;
          }
          case 504: {
            Subtlety = input.ReadInt32();
            break;
          }
          case 512: {
            NaturalShapeshifter = input.ReadInt32();
            break;
          }
          case 520: {
            Intensity = input.ReadInt32();
            break;
          }
          case 528: {
            OmenOfClarity = input.ReadBool();
            break;
          }
          case 536: {
            MasterShapeshifter = input.ReadInt32();
            break;
          }
          case 544: {
            TranquilSpirit = input.ReadInt32();
            break;
          }
          case 552: {
            ImprovedRejuvenation = input.ReadInt32();
            break;
          }
          case 560: {
            NaturesSwiftness = input.ReadBool();
            break;
          }
          case 568: {
            GiftOfNature = input.ReadInt32();
            break;
          }
          case 576: {
            ImprovedTranquility = input.ReadInt32();
            break;
          }
          case 584: {
            EmpoweredTouch = input.ReadInt32();
            break;
          }
          case 592: {
            NaturesBounty = input.ReadInt32();
            break;
          }
          case 600: {
            LivingSpirit = input.ReadInt32();
            break;
          }
          case 608: {
            Swiftmend = input.ReadBool();
            break;
          }
          case 616: {
            NaturalPerfection = input.ReadInt32();
            break;
          }
          case 624: {
            EmpoweredRejuvenation = input.ReadInt32();
            break;
          }
          case 632: {
            LivingSeed = input.ReadInt32();
            break;
          }
          case 640: {
            Revitalize = input.ReadInt32();
            break;
          }
          case 648: {
            TreeOfLife = input.ReadBool();
            break;
          }
          case 656: {
            ImprovedTreeOfLife = input.ReadInt32();
            break;
          }
          case 664: {
            ImprovedBarkskin = input.ReadInt32();
            break;
          }
          case 672: {
            GiftOfTheEarthmother = input.ReadInt32();
            break;
          }
          case 680: {
            WildGrowth = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StarlightWrath = input.ReadInt32();
            break;
          }
          case 16: {
            Genesis = input.ReadInt32();
            break;
          }
          case 24: {
            Moonglow = input.ReadInt32();
            break;
          }
          case 32: {
            NaturesMajesty = input.ReadInt32();
            break;
          }
          case 40: {
            ImprovedMoonfire = input.ReadInt32();
            break;
          }
          case 48: {
            Brambles = input.ReadInt32();
            break;
          }
          case 56: {
            NaturesGrace = input.ReadInt32();
            break;
          }
          case 64: {
            NaturesSplendor = input.ReadBool();
            break;
          }
          case 72: {
            NaturesReach = input.ReadInt32();
            break;
          }
          case 80: {
            Vengeance = input.ReadInt32();
            break;
          }
          case 88: {
            CelestialFocus = input.ReadInt32();
            break;
          }
          case 96: {
            LunarGuidance = input.ReadInt32();
            break;
          }
          case 104: {
            InsectSwarm = input.ReadBool();
            break;
          }
          case 112: {
            ImprovedInsectSwarm = input.ReadInt32();
            break;
          }
          case 120: {
            Dreamstate = input.ReadInt32();
            break;
          }
          case 128: {
            Moonfury = input.ReadInt32();
            break;
          }
          case 136: {
            BalanceOfPower = input.ReadInt32();
            break;
          }
          case 144: {
            MoonkinForm = input.ReadBool();
            break;
          }
          case 152: {
            ImprovedMoonkinForm = input.ReadInt32();
            break;
          }
          case 160: {
            ImprovedFaerieFire = input.ReadInt32();
            break;
          }
          case 168: {
            OwlkinFrenzy = input.ReadInt32();
            break;
          }
          case 176: {
            WrathOfCenarius = input.ReadInt32();
            break;
          }
          case 184: {
            Eclipse = input.ReadInt32();
            break;
          }
          case 192: {
            Typhoon = input.ReadBool();
            break;
          }
          case 200: {
            ForceOfNature = input.ReadBool();
            break;
          }
          case 208: {
            GaleWinds = input.ReadInt32();
            break;
          }
          case 216: {
            EarthAndMoon = input.ReadInt32();
            break;
          }
          case 224: {
            Starfall = input.ReadBool();
            break;
          }
          case 232: {
            Ferocity = input.ReadInt32();
            break;
          }
          case 240: {
            FeralAggression = input.ReadInt32();
            break;
          }
          case 248: {
            FeralInstinct = input.ReadInt32();
            break;
          }
          case 256: {
            SavageFury = input.ReadInt32();
            break;
          }
          case 264: {
            ThickHide = input.ReadInt32();
            break;
          }
          case 272: {
            FeralSwiftness = input.ReadInt32();
            break;
          }
          case 280: {
            SurvivalInstincts = input.ReadBool();
            break;
          }
          case 288: {
            SharpenedClaws = input.ReadInt32();
            break;
          }
          case 296: {
            ShreddingAttacks = input.ReadInt32();
            break;
          }
          case 304: {
            PredatoryStrikes = input.ReadInt32();
            break;
          }
          case 312: {
            PrimalFury = input.ReadInt32();
            break;
          }
          case 320: {
            PrimalPrecision = input.ReadInt32();
            break;
          }
          case 328: {
            BrutalImpact = input.ReadInt32();
            break;
          }
          case 336: {
            FeralCharge = input.ReadBool();
            break;
          }
          case 344: {
            NurturingInstinct = input.ReadInt32();
            break;
          }
          case 352: {
            NaturalReaction = input.ReadInt32();
            break;
          }
          case 360: {
            HeartOfTheWild = input.ReadInt32();
            break;
          }
          case 368: {
            SurvivalOfTheFittest = input.ReadInt32();
            break;
          }
          case 376: {
            LeaderOfThePack = input.ReadBool();
            break;
          }
          case 384: {
            ImprovedLeaderOfThePack = input.ReadInt32();
            break;
          }
          case 392: {
            PrimalTenacity = input.ReadInt32();
            break;
          }
          case 400: {
            ProtectorOfThePack = input.ReadInt32();
            break;
          }
          case 408: {
            PredatoryInstincts = input.ReadInt32();
            break;
          }
          case 416: {
            InfectedWounds = input.ReadInt32();
            break;
          }
          case 424: {
            KingOfTheJungle = input.ReadInt32();
            break;
          }
          case 432: {
            Mangle = input.ReadBool();
            break;
          }
          case 440: {
            ImprovedMangle = input.ReadInt32();
            break;
          }
          case 448: {
            RendAndTear = input.ReadInt32();
            break;
          }
          case 456: {
            PrimalGore = input.ReadBool();
            break;
          }
          case 464: {
            Berserk = input.ReadBool();
            break;
          }
          case 472: {
            ImprovedMarkOfTheWild = input.ReadInt32();
            break;
          }
          case 480: {
            NaturesFocus = input.ReadInt32();
            break;
          }
          case 488: {
            Furor = input.ReadInt32();
            break;
          }
          case 496: {
            Naturalist = input.ReadInt32();
            break;
          }
          case 504: {
            Subtlety = input.ReadInt32();
            break;
          }
          case 512: {
            NaturalShapeshifter = input.ReadInt32();
            break;
          }
          case 520: {
            Intensity = input.ReadInt32();
            break;
          }
          case 528: {
            OmenOfClarity = input.ReadBool();
            break;
          }
          case 536: {
            MasterShapeshifter = input.ReadInt32();
            break;
          }
          case 544: {
            TranquilSpirit = input.ReadInt32();
            break;
          }
          case 552: {
            ImprovedRejuvenation = input.ReadInt32();
            break;
          }
          case 560: {
            NaturesSwiftness = input.ReadBool();
            break;
          }
          case 568: {
            GiftOfNature = input.ReadInt32();
            break;
          }
          case 576: {
            ImprovedTranquility = input.ReadInt32();
            break;
          }
          case 584: {
            EmpoweredTouch = input.ReadInt32();
            break;
          }
          case 592: {
            NaturesBounty = input.ReadInt32();
            break;
          }
          case 600: {
            LivingSpirit = input.ReadInt32();
            break;
          }
          case 608: {
            Swiftmend = input.ReadBool();
            break;
          }
          case 616: {
            NaturalPerfection = input.ReadInt32();
            break;
          }
          case 624: {
            EmpoweredRejuvenation = input.ReadInt32();
            break;
          }
          case 632: {
            LivingSeed = input.ReadInt32();
            break;
          }
          case 640: {
            Revitalize = input.ReadInt32();
            break;
          }
          case 648: {
            TreeOfLife = input.ReadBool();
            break;
          }
          case 656: {
            ImprovedTreeOfLife = input.ReadInt32();
            break;
          }
          case 664: {
            ImprovedBarkskin = input.ReadInt32();
            break;
          }
          case 672: {
            GiftOfTheEarthmother = input.ReadInt32();
            break;
          }
          case 680: {
            WildGrowth = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BalanceDruid : pb::IMessage<BalanceDruid>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BalanceDruid> _parser = new pb::MessageParser<BalanceDruid>(() => new BalanceDruid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BalanceDruid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.DruidReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BalanceDruid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BalanceDruid(BalanceDruid other) : this() {
      options_ = other.options_ != null ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BalanceDruid Clone() {
      return new BalanceDruid(this);
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.BalanceDruid.Types.Options options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.BalanceDruid.Types.Options Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BalanceDruid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BalanceDruid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (options_ != null) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BalanceDruid other) {
      if (other == null) {
        return;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          Options = new global::SirusDbScrapper.UIDatabase.BalanceDruid.Types.Options();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            if (options_ == null) {
              Options = new global::SirusDbScrapper.UIDatabase.BalanceDruid.Types.Options();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            if (options_ == null) {
              Options = new global::SirusDbScrapper.UIDatabase.BalanceDruid.Types.Options();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BalanceDruid message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Rotation : pb::IMessage<Rotation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Rotation> _parser = new pb::MessageParser<Rotation>(() => new Rotation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Rotation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SirusDbScrapper.UIDatabase.BalanceDruid.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation(Rotation other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation Clone() {
          return new Rotation(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Rotation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Rotation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Rotation other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class Options : pb::IMessage<Options>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Options> _parser = new pb::MessageParser<Options>(() => new Options());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Options> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SirusDbScrapper.UIDatabase.BalanceDruid.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options(Options other) : this() {
          innervateTarget_ = other.innervateTarget_ != null ? other.innervateTarget_.Clone() : null;
          okfUptime_ = other.okfUptime_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options Clone() {
          return new Options(this);
        }

        /// <summary>Field number for the "innervate_target" field.</summary>
        public const int InnervateTargetFieldNumber = 1;
        private global::SirusDbScrapper.UIDatabase.UnitReference innervateTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.UnitReference InnervateTarget {
          get { return innervateTarget_; }
          set {
            innervateTarget_ = value;
          }
        }

        /// <summary>Field number for the "okf_uptime" field.</summary>
        public const int OkfUptimeFieldNumber = 2;
        private float okfUptime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float OkfUptime {
          get { return okfUptime_; }
          set {
            okfUptime_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Options);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Options other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(InnervateTarget, other.InnervateTarget)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OkfUptime, other.OkfUptime)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (innervateTarget_ != null) hash ^= InnervateTarget.GetHashCode();
          if (OkfUptime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OkfUptime);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (innervateTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(InnervateTarget);
          }
          if (OkfUptime != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(OkfUptime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (innervateTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(InnervateTarget);
          }
          if (OkfUptime != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(OkfUptime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (innervateTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(InnervateTarget);
          }
          if (OkfUptime != 0F) {
            size += 1 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Options other) {
          if (other == null) {
            return;
          }
          if (other.innervateTarget_ != null) {
            if (innervateTarget_ == null) {
              InnervateTarget = new global::SirusDbScrapper.UIDatabase.UnitReference();
            }
            InnervateTarget.MergeFrom(other.InnervateTarget);
          }
          if (other.OkfUptime != 0F) {
            OkfUptime = other.OkfUptime;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (innervateTarget_ == null) {
                  InnervateTarget = new global::SirusDbScrapper.UIDatabase.UnitReference();
                }
                input.ReadMessage(InnervateTarget);
                break;
              }
              case 21: {
                OkfUptime = input.ReadFloat();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (innervateTarget_ == null) {
                  InnervateTarget = new global::SirusDbScrapper.UIDatabase.UnitReference();
                }
                input.ReadMessage(InnervateTarget);
                break;
              }
              case 21: {
                OkfUptime = input.ReadFloat();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class FeralDruid : pb::IMessage<FeralDruid>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeralDruid> _parser = new pb::MessageParser<FeralDruid>(() => new FeralDruid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FeralDruid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.DruidReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeralDruid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeralDruid(FeralDruid other) : this() {
      rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
      options_ = other.options_ != null ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeralDruid Clone() {
      return new FeralDruid(this);
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 1;
    private global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation Rotation {
      get { return rotation_; }
      set {
        rotation_ = value;
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Options options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Options Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FeralDruid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FeralDruid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Rotation, other.Rotation)) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (rotation_ != null) hash ^= Rotation.GetHashCode();
      if (options_ != null) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (rotation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Rotation);
      }
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (rotation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Rotation);
      }
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
      }
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FeralDruid other) {
      if (other == null) {
        return;
      }
      if (other.rotation_ != null) {
        if (rotation_ == null) {
          Rotation = new global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation();
        }
        Rotation.MergeFrom(other.Rotation);
      }
      if (other.options_ != null) {
        if (options_ == null) {
          Options = new global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Options();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rotation_ == null) {
              Rotation = new global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation();
            }
            input.ReadMessage(Rotation);
            break;
          }
          case 26: {
            if (options_ == null) {
              Options = new global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Options();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (rotation_ == null) {
              Rotation = new global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation();
            }
            input.ReadMessage(Rotation);
            break;
          }
          case 26: {
            if (options_ == null) {
              Options = new global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Options();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FeralDruid message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Rotation : pb::IMessage<Rotation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Rotation> _parser = new pb::MessageParser<Rotation>(() => new Rotation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Rotation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SirusDbScrapper.UIDatabase.FeralDruid.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation(Rotation other) : this() {
          bearWeaveType_ = other.bearWeaveType_;
          maintainFaerieFire_ = other.maintainFaerieFire_;
          minCombosForRip_ = other.minCombosForRip_;
          useRake_ = other.useRake_;
          useBite_ = other.useBite_;
          mangleSpam_ = other.mangleSpam_;
          biteTime_ = other.biteTime_;
          minCombosForBite_ = other.minCombosForBite_;
          berserkBiteThresh_ = other.berserkBiteThresh_;
          berserkFfThresh_ = other.berserkFfThresh_;
          ripLeeway_ = other.ripLeeway_;
          powerbear_ = other.powerbear_;
          minRoarOffset_ = other.minRoarOffset_;
          biteModeType_ = other.biteModeType_;
          hotUptime_ = other.hotUptime_;
          snekWeave_ = other.snekWeave_;
          flowerWeave_ = other.flowerWeave_;
          raidTargets_ = other.raidTargets_;
          manualParams_ = other.manualParams_;
          maxFfDelay_ = other.maxFfDelay_;
          rotationType_ = other.rotationType_;
          prePopBerserk_ = other.prePopBerserk_;
          prePopOoc_ = other.prePopOoc_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation Clone() {
          return new Rotation(this);
        }

        /// <summary>Field number for the "bear_weave_type" field.</summary>
        public const int BearWeaveTypeFieldNumber = 1;
        private global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BearweaveType bearWeaveType_ = global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BearweaveType.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BearweaveType BearWeaveType {
          get { return bearWeaveType_; }
          set {
            bearWeaveType_ = value;
          }
        }

        /// <summary>Field number for the "maintain_faerie_fire" field.</summary>
        public const int MaintainFaerieFireFieldNumber = 2;
        private bool maintainFaerieFire_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool MaintainFaerieFire {
          get { return maintainFaerieFire_; }
          set {
            maintainFaerieFire_ = value;
          }
        }

        /// <summary>Field number for the "min_combos_for_rip" field.</summary>
        public const int MinCombosForRipFieldNumber = 3;
        private int minCombosForRip_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int MinCombosForRip {
          get { return minCombosForRip_; }
          set {
            minCombosForRip_ = value;
          }
        }

        /// <summary>Field number for the "use_rake" field.</summary>
        public const int UseRakeFieldNumber = 4;
        private bool useRake_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool UseRake {
          get { return useRake_; }
          set {
            useRake_ = value;
          }
        }

        /// <summary>Field number for the "use_bite" field.</summary>
        public const int UseBiteFieldNumber = 5;
        private bool useBite_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool UseBite {
          get { return useBite_; }
          set {
            useBite_ = value;
          }
        }

        /// <summary>Field number for the "mangle_spam" field.</summary>
        public const int MangleSpamFieldNumber = 6;
        private bool mangleSpam_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool MangleSpam {
          get { return mangleSpam_; }
          set {
            mangleSpam_ = value;
          }
        }

        /// <summary>Field number for the "bite_time" field.</summary>
        public const int BiteTimeFieldNumber = 7;
        private float biteTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float BiteTime {
          get { return biteTime_; }
          set {
            biteTime_ = value;
          }
        }

        /// <summary>Field number for the "min_combos_for_bite" field.</summary>
        public const int MinCombosForBiteFieldNumber = 8;
        private int minCombosForBite_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int MinCombosForBite {
          get { return minCombosForBite_; }
          set {
            minCombosForBite_ = value;
          }
        }

        /// <summary>Field number for the "berserk_bite_thresh" field.</summary>
        public const int BerserkBiteThreshFieldNumber = 9;
        private int berserkBiteThresh_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int BerserkBiteThresh {
          get { return berserkBiteThresh_; }
          set {
            berserkBiteThresh_ = value;
          }
        }

        /// <summary>Field number for the "berserk_ff_thresh" field.</summary>
        public const int BerserkFfThreshFieldNumber = 18;
        private int berserkFfThresh_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int BerserkFfThresh {
          get { return berserkFfThresh_; }
          set {
            berserkFfThresh_ = value;
          }
        }

        /// <summary>Field number for the "rip_leeway" field.</summary>
        public const int RipLeewayFieldNumber = 19;
        private int ripLeeway_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int RipLeeway {
          get { return ripLeeway_; }
          set {
            ripLeeway_ = value;
          }
        }

        /// <summary>Field number for the "powerbear" field.</summary>
        public const int PowerbearFieldNumber = 10;
        private bool powerbear_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Powerbear {
          get { return powerbear_; }
          set {
            powerbear_ = value;
          }
        }

        /// <summary>Field number for the "min_roar_offset" field.</summary>
        public const int MinRoarOffsetFieldNumber = 11;
        private float minRoarOffset_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float MinRoarOffset {
          get { return minRoarOffset_; }
          set {
            minRoarOffset_ = value;
          }
        }

        /// <summary>Field number for the "bite_mode_type" field.</summary>
        public const int BiteModeTypeFieldNumber = 12;
        private global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BiteModeType biteModeType_ = global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BiteModeType.Emperical;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BiteModeType BiteModeType {
          get { return biteModeType_; }
          set {
            biteModeType_ = value;
          }
        }

        /// <summary>Field number for the "hot_uptime" field.</summary>
        public const int HotUptimeFieldNumber = 13;
        private float hotUptime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float HotUptime {
          get { return hotUptime_; }
          set {
            hotUptime_ = value;
          }
        }

        /// <summary>Field number for the "snek_weave" field.</summary>
        public const int SnekWeaveFieldNumber = 14;
        private bool snekWeave_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool SnekWeave {
          get { return snekWeave_; }
          set {
            snekWeave_ = value;
          }
        }

        /// <summary>Field number for the "flower_weave" field.</summary>
        public const int FlowerWeaveFieldNumber = 15;
        private bool flowerWeave_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool FlowerWeave {
          get { return flowerWeave_; }
          set {
            flowerWeave_ = value;
          }
        }

        /// <summary>Field number for the "raid_targets" field.</summary>
        public const int RaidTargetsFieldNumber = 16;
        private int raidTargets_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int RaidTargets {
          get { return raidTargets_; }
          set {
            raidTargets_ = value;
          }
        }

        /// <summary>Field number for the "manual_params" field.</summary>
        public const int ManualParamsFieldNumber = 17;
        private bool manualParams_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool ManualParams {
          get { return manualParams_; }
          set {
            manualParams_ = value;
          }
        }

        /// <summary>Field number for the "max_ff_delay" field.</summary>
        public const int MaxFfDelayFieldNumber = 20;
        private float maxFfDelay_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float MaxFfDelay {
          get { return maxFfDelay_; }
          set {
            maxFfDelay_ = value;
          }
        }

        /// <summary>Field number for the "rotation_type" field.</summary>
        public const int RotationTypeFieldNumber = 21;
        private global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.AplType rotationType_ = global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.AplType.SingleTarget;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.AplType RotationType {
          get { return rotationType_; }
          set {
            rotationType_ = value;
          }
        }

        /// <summary>Field number for the "pre_pop_berserk" field.</summary>
        public const int PrePopBerserkFieldNumber = 22;
        private bool prePopBerserk_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool PrePopBerserk {
          get { return prePopBerserk_; }
          set {
            prePopBerserk_ = value;
          }
        }

        /// <summary>Field number for the "pre_pop_ooc" field.</summary>
        public const int PrePopOocFieldNumber = 23;
        private bool prePopOoc_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool PrePopOoc {
          get { return prePopOoc_; }
          set {
            prePopOoc_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Rotation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Rotation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (BearWeaveType != other.BearWeaveType) return false;
          if (MaintainFaerieFire != other.MaintainFaerieFire) return false;
          if (MinCombosForRip != other.MinCombosForRip) return false;
          if (UseRake != other.UseRake) return false;
          if (UseBite != other.UseBite) return false;
          if (MangleSpam != other.MangleSpam) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BiteTime, other.BiteTime)) return false;
          if (MinCombosForBite != other.MinCombosForBite) return false;
          if (BerserkBiteThresh != other.BerserkBiteThresh) return false;
          if (BerserkFfThresh != other.BerserkFfThresh) return false;
          if (RipLeeway != other.RipLeeway) return false;
          if (Powerbear != other.Powerbear) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinRoarOffset, other.MinRoarOffset)) return false;
          if (BiteModeType != other.BiteModeType) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HotUptime, other.HotUptime)) return false;
          if (SnekWeave != other.SnekWeave) return false;
          if (FlowerWeave != other.FlowerWeave) return false;
          if (RaidTargets != other.RaidTargets) return false;
          if (ManualParams != other.ManualParams) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxFfDelay, other.MaxFfDelay)) return false;
          if (RotationType != other.RotationType) return false;
          if (PrePopBerserk != other.PrePopBerserk) return false;
          if (PrePopOoc != other.PrePopOoc) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (BearWeaveType != global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BearweaveType.None) hash ^= BearWeaveType.GetHashCode();
          if (MaintainFaerieFire != false) hash ^= MaintainFaerieFire.GetHashCode();
          if (MinCombosForRip != 0) hash ^= MinCombosForRip.GetHashCode();
          if (UseRake != false) hash ^= UseRake.GetHashCode();
          if (UseBite != false) hash ^= UseBite.GetHashCode();
          if (MangleSpam != false) hash ^= MangleSpam.GetHashCode();
          if (BiteTime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BiteTime);
          if (MinCombosForBite != 0) hash ^= MinCombosForBite.GetHashCode();
          if (BerserkBiteThresh != 0) hash ^= BerserkBiteThresh.GetHashCode();
          if (BerserkFfThresh != 0) hash ^= BerserkFfThresh.GetHashCode();
          if (RipLeeway != 0) hash ^= RipLeeway.GetHashCode();
          if (Powerbear != false) hash ^= Powerbear.GetHashCode();
          if (MinRoarOffset != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinRoarOffset);
          if (BiteModeType != global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BiteModeType.Emperical) hash ^= BiteModeType.GetHashCode();
          if (HotUptime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HotUptime);
          if (SnekWeave != false) hash ^= SnekWeave.GetHashCode();
          if (FlowerWeave != false) hash ^= FlowerWeave.GetHashCode();
          if (RaidTargets != 0) hash ^= RaidTargets.GetHashCode();
          if (ManualParams != false) hash ^= ManualParams.GetHashCode();
          if (MaxFfDelay != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxFfDelay);
          if (RotationType != global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.AplType.SingleTarget) hash ^= RotationType.GetHashCode();
          if (PrePopBerserk != false) hash ^= PrePopBerserk.GetHashCode();
          if (PrePopOoc != false) hash ^= PrePopOoc.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (BearWeaveType != global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BearweaveType.None) {
            output.WriteRawTag(8);
            output.WriteEnum((int) BearWeaveType);
          }
          if (MaintainFaerieFire != false) {
            output.WriteRawTag(16);
            output.WriteBool(MaintainFaerieFire);
          }
          if (MinCombosForRip != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(MinCombosForRip);
          }
          if (UseRake != false) {
            output.WriteRawTag(32);
            output.WriteBool(UseRake);
          }
          if (UseBite != false) {
            output.WriteRawTag(40);
            output.WriteBool(UseBite);
          }
          if (MangleSpam != false) {
            output.WriteRawTag(48);
            output.WriteBool(MangleSpam);
          }
          if (BiteTime != 0F) {
            output.WriteRawTag(61);
            output.WriteFloat(BiteTime);
          }
          if (MinCombosForBite != 0) {
            output.WriteRawTag(64);
            output.WriteInt32(MinCombosForBite);
          }
          if (BerserkBiteThresh != 0) {
            output.WriteRawTag(72);
            output.WriteInt32(BerserkBiteThresh);
          }
          if (Powerbear != false) {
            output.WriteRawTag(80);
            output.WriteBool(Powerbear);
          }
          if (MinRoarOffset != 0F) {
            output.WriteRawTag(93);
            output.WriteFloat(MinRoarOffset);
          }
          if (BiteModeType != global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BiteModeType.Emperical) {
            output.WriteRawTag(96);
            output.WriteEnum((int) BiteModeType);
          }
          if (HotUptime != 0F) {
            output.WriteRawTag(109);
            output.WriteFloat(HotUptime);
          }
          if (SnekWeave != false) {
            output.WriteRawTag(112);
            output.WriteBool(SnekWeave);
          }
          if (FlowerWeave != false) {
            output.WriteRawTag(120);
            output.WriteBool(FlowerWeave);
          }
          if (RaidTargets != 0) {
            output.WriteRawTag(128, 1);
            output.WriteInt32(RaidTargets);
          }
          if (ManualParams != false) {
            output.WriteRawTag(136, 1);
            output.WriteBool(ManualParams);
          }
          if (BerserkFfThresh != 0) {
            output.WriteRawTag(144, 1);
            output.WriteInt32(BerserkFfThresh);
          }
          if (RipLeeway != 0) {
            output.WriteRawTag(152, 1);
            output.WriteInt32(RipLeeway);
          }
          if (MaxFfDelay != 0F) {
            output.WriteRawTag(165, 1);
            output.WriteFloat(MaxFfDelay);
          }
          if (RotationType != global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.AplType.SingleTarget) {
            output.WriteRawTag(168, 1);
            output.WriteEnum((int) RotationType);
          }
          if (PrePopBerserk != false) {
            output.WriteRawTag(176, 1);
            output.WriteBool(PrePopBerserk);
          }
          if (PrePopOoc != false) {
            output.WriteRawTag(184, 1);
            output.WriteBool(PrePopOoc);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (BearWeaveType != global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BearweaveType.None) {
            output.WriteRawTag(8);
            output.WriteEnum((int) BearWeaveType);
          }
          if (MaintainFaerieFire != false) {
            output.WriteRawTag(16);
            output.WriteBool(MaintainFaerieFire);
          }
          if (MinCombosForRip != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(MinCombosForRip);
          }
          if (UseRake != false) {
            output.WriteRawTag(32);
            output.WriteBool(UseRake);
          }
          if (UseBite != false) {
            output.WriteRawTag(40);
            output.WriteBool(UseBite);
          }
          if (MangleSpam != false) {
            output.WriteRawTag(48);
            output.WriteBool(MangleSpam);
          }
          if (BiteTime != 0F) {
            output.WriteRawTag(61);
            output.WriteFloat(BiteTime);
          }
          if (MinCombosForBite != 0) {
            output.WriteRawTag(64);
            output.WriteInt32(MinCombosForBite);
          }
          if (BerserkBiteThresh != 0) {
            output.WriteRawTag(72);
            output.WriteInt32(BerserkBiteThresh);
          }
          if (Powerbear != false) {
            output.WriteRawTag(80);
            output.WriteBool(Powerbear);
          }
          if (MinRoarOffset != 0F) {
            output.WriteRawTag(93);
            output.WriteFloat(MinRoarOffset);
          }
          if (BiteModeType != global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BiteModeType.Emperical) {
            output.WriteRawTag(96);
            output.WriteEnum((int) BiteModeType);
          }
          if (HotUptime != 0F) {
            output.WriteRawTag(109);
            output.WriteFloat(HotUptime);
          }
          if (SnekWeave != false) {
            output.WriteRawTag(112);
            output.WriteBool(SnekWeave);
          }
          if (FlowerWeave != false) {
            output.WriteRawTag(120);
            output.WriteBool(FlowerWeave);
          }
          if (RaidTargets != 0) {
            output.WriteRawTag(128, 1);
            output.WriteInt32(RaidTargets);
          }
          if (ManualParams != false) {
            output.WriteRawTag(136, 1);
            output.WriteBool(ManualParams);
          }
          if (BerserkFfThresh != 0) {
            output.WriteRawTag(144, 1);
            output.WriteInt32(BerserkFfThresh);
          }
          if (RipLeeway != 0) {
            output.WriteRawTag(152, 1);
            output.WriteInt32(RipLeeway);
          }
          if (MaxFfDelay != 0F) {
            output.WriteRawTag(165, 1);
            output.WriteFloat(MaxFfDelay);
          }
          if (RotationType != global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.AplType.SingleTarget) {
            output.WriteRawTag(168, 1);
            output.WriteEnum((int) RotationType);
          }
          if (PrePopBerserk != false) {
            output.WriteRawTag(176, 1);
            output.WriteBool(PrePopBerserk);
          }
          if (PrePopOoc != false) {
            output.WriteRawTag(184, 1);
            output.WriteBool(PrePopOoc);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (BearWeaveType != global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BearweaveType.None) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BearWeaveType);
          }
          if (MaintainFaerieFire != false) {
            size += 1 + 1;
          }
          if (MinCombosForRip != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinCombosForRip);
          }
          if (UseRake != false) {
            size += 1 + 1;
          }
          if (UseBite != false) {
            size += 1 + 1;
          }
          if (MangleSpam != false) {
            size += 1 + 1;
          }
          if (BiteTime != 0F) {
            size += 1 + 4;
          }
          if (MinCombosForBite != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinCombosForBite);
          }
          if (BerserkBiteThresh != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(BerserkBiteThresh);
          }
          if (BerserkFfThresh != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(BerserkFfThresh);
          }
          if (RipLeeway != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(RipLeeway);
          }
          if (Powerbear != false) {
            size += 1 + 1;
          }
          if (MinRoarOffset != 0F) {
            size += 1 + 4;
          }
          if (BiteModeType != global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BiteModeType.Emperical) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BiteModeType);
          }
          if (HotUptime != 0F) {
            size += 1 + 4;
          }
          if (SnekWeave != false) {
            size += 1 + 1;
          }
          if (FlowerWeave != false) {
            size += 1 + 1;
          }
          if (RaidTargets != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(RaidTargets);
          }
          if (ManualParams != false) {
            size += 2 + 1;
          }
          if (MaxFfDelay != 0F) {
            size += 2 + 4;
          }
          if (RotationType != global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.AplType.SingleTarget) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RotationType);
          }
          if (PrePopBerserk != false) {
            size += 2 + 1;
          }
          if (PrePopOoc != false) {
            size += 2 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Rotation other) {
          if (other == null) {
            return;
          }
          if (other.BearWeaveType != global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BearweaveType.None) {
            BearWeaveType = other.BearWeaveType;
          }
          if (other.MaintainFaerieFire != false) {
            MaintainFaerieFire = other.MaintainFaerieFire;
          }
          if (other.MinCombosForRip != 0) {
            MinCombosForRip = other.MinCombosForRip;
          }
          if (other.UseRake != false) {
            UseRake = other.UseRake;
          }
          if (other.UseBite != false) {
            UseBite = other.UseBite;
          }
          if (other.MangleSpam != false) {
            MangleSpam = other.MangleSpam;
          }
          if (other.BiteTime != 0F) {
            BiteTime = other.BiteTime;
          }
          if (other.MinCombosForBite != 0) {
            MinCombosForBite = other.MinCombosForBite;
          }
          if (other.BerserkBiteThresh != 0) {
            BerserkBiteThresh = other.BerserkBiteThresh;
          }
          if (other.BerserkFfThresh != 0) {
            BerserkFfThresh = other.BerserkFfThresh;
          }
          if (other.RipLeeway != 0) {
            RipLeeway = other.RipLeeway;
          }
          if (other.Powerbear != false) {
            Powerbear = other.Powerbear;
          }
          if (other.MinRoarOffset != 0F) {
            MinRoarOffset = other.MinRoarOffset;
          }
          if (other.BiteModeType != global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BiteModeType.Emperical) {
            BiteModeType = other.BiteModeType;
          }
          if (other.HotUptime != 0F) {
            HotUptime = other.HotUptime;
          }
          if (other.SnekWeave != false) {
            SnekWeave = other.SnekWeave;
          }
          if (other.FlowerWeave != false) {
            FlowerWeave = other.FlowerWeave;
          }
          if (other.RaidTargets != 0) {
            RaidTargets = other.RaidTargets;
          }
          if (other.ManualParams != false) {
            ManualParams = other.ManualParams;
          }
          if (other.MaxFfDelay != 0F) {
            MaxFfDelay = other.MaxFfDelay;
          }
          if (other.RotationType != global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.AplType.SingleTarget) {
            RotationType = other.RotationType;
          }
          if (other.PrePopBerserk != false) {
            PrePopBerserk = other.PrePopBerserk;
          }
          if (other.PrePopOoc != false) {
            PrePopOoc = other.PrePopOoc;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                BearWeaveType = (global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BearweaveType) input.ReadEnum();
                break;
              }
              case 16: {
                MaintainFaerieFire = input.ReadBool();
                break;
              }
              case 24: {
                MinCombosForRip = input.ReadInt32();
                break;
              }
              case 32: {
                UseRake = input.ReadBool();
                break;
              }
              case 40: {
                UseBite = input.ReadBool();
                break;
              }
              case 48: {
                MangleSpam = input.ReadBool();
                break;
              }
              case 61: {
                BiteTime = input.ReadFloat();
                break;
              }
              case 64: {
                MinCombosForBite = input.ReadInt32();
                break;
              }
              case 72: {
                BerserkBiteThresh = input.ReadInt32();
                break;
              }
              case 80: {
                Powerbear = input.ReadBool();
                break;
              }
              case 93: {
                MinRoarOffset = input.ReadFloat();
                break;
              }
              case 96: {
                BiteModeType = (global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BiteModeType) input.ReadEnum();
                break;
              }
              case 109: {
                HotUptime = input.ReadFloat();
                break;
              }
              case 112: {
                SnekWeave = input.ReadBool();
                break;
              }
              case 120: {
                FlowerWeave = input.ReadBool();
                break;
              }
              case 128: {
                RaidTargets = input.ReadInt32();
                break;
              }
              case 136: {
                ManualParams = input.ReadBool();
                break;
              }
              case 144: {
                BerserkFfThresh = input.ReadInt32();
                break;
              }
              case 152: {
                RipLeeway = input.ReadInt32();
                break;
              }
              case 165: {
                MaxFfDelay = input.ReadFloat();
                break;
              }
              case 168: {
                RotationType = (global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.AplType) input.ReadEnum();
                break;
              }
              case 176: {
                PrePopBerserk = input.ReadBool();
                break;
              }
              case 184: {
                PrePopOoc = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                BearWeaveType = (global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BearweaveType) input.ReadEnum();
                break;
              }
              case 16: {
                MaintainFaerieFire = input.ReadBool();
                break;
              }
              case 24: {
                MinCombosForRip = input.ReadInt32();
                break;
              }
              case 32: {
                UseRake = input.ReadBool();
                break;
              }
              case 40: {
                UseBite = input.ReadBool();
                break;
              }
              case 48: {
                MangleSpam = input.ReadBool();
                break;
              }
              case 61: {
                BiteTime = input.ReadFloat();
                break;
              }
              case 64: {
                MinCombosForBite = input.ReadInt32();
                break;
              }
              case 72: {
                BerserkBiteThresh = input.ReadInt32();
                break;
              }
              case 80: {
                Powerbear = input.ReadBool();
                break;
              }
              case 93: {
                MinRoarOffset = input.ReadFloat();
                break;
              }
              case 96: {
                BiteModeType = (global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.BiteModeType) input.ReadEnum();
                break;
              }
              case 109: {
                HotUptime = input.ReadFloat();
                break;
              }
              case 112: {
                SnekWeave = input.ReadBool();
                break;
              }
              case 120: {
                FlowerWeave = input.ReadBool();
                break;
              }
              case 128: {
                RaidTargets = input.ReadInt32();
                break;
              }
              case 136: {
                ManualParams = input.ReadBool();
                break;
              }
              case 144: {
                BerserkFfThresh = input.ReadInt32();
                break;
              }
              case 152: {
                RipLeeway = input.ReadInt32();
                break;
              }
              case 165: {
                MaxFfDelay = input.ReadFloat();
                break;
              }
              case 168: {
                RotationType = (global::SirusDbScrapper.UIDatabase.FeralDruid.Types.Rotation.Types.AplType) input.ReadEnum();
                break;
              }
              case 176: {
                PrePopBerserk = input.ReadBool();
                break;
              }
              case 184: {
                PrePopOoc = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Rotation message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public enum AplType {
            [pbr::OriginalName("SingleTarget")] SingleTarget = 0,
            [pbr::OriginalName("Aoe")] Aoe = 1,
          }

          public enum BearweaveType {
            [pbr::OriginalName("None")] None = 0,
            [pbr::OriginalName("Mangle")] Mangle = 1,
            [pbr::OriginalName("Lacerate")] Lacerate = 2,
          }

          public enum BiteModeType {
            [pbr::OriginalName("Emperical")] Emperical = 0,
            [pbr::OriginalName("Analytical")] Analytical = 1,
          }

        }
        #endregion

      }

      public sealed partial class Options : pb::IMessage<Options>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Options> _parser = new pb::MessageParser<Options>(() => new Options());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Options> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SirusDbScrapper.UIDatabase.FeralDruid.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options(Options other) : this() {
          innervateTarget_ = other.innervateTarget_ != null ? other.innervateTarget_.Clone() : null;
          latencyMs_ = other.latencyMs_;
          assumeBleedActive_ = other.assumeBleedActive_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options Clone() {
          return new Options(this);
        }

        /// <summary>Field number for the "innervate_target" field.</summary>
        public const int InnervateTargetFieldNumber = 1;
        private global::SirusDbScrapper.UIDatabase.UnitReference innervateTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.UnitReference InnervateTarget {
          get { return innervateTarget_; }
          set {
            innervateTarget_ = value;
          }
        }

        /// <summary>Field number for the "latency_ms" field.</summary>
        public const int LatencyMsFieldNumber = 2;
        private int latencyMs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LatencyMs {
          get { return latencyMs_; }
          set {
            latencyMs_ = value;
          }
        }

        /// <summary>Field number for the "assume_bleed_active" field.</summary>
        public const int AssumeBleedActiveFieldNumber = 4;
        private bool assumeBleedActive_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AssumeBleedActive {
          get { return assumeBleedActive_; }
          set {
            assumeBleedActive_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Options);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Options other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(InnervateTarget, other.InnervateTarget)) return false;
          if (LatencyMs != other.LatencyMs) return false;
          if (AssumeBleedActive != other.AssumeBleedActive) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (innervateTarget_ != null) hash ^= InnervateTarget.GetHashCode();
          if (LatencyMs != 0) hash ^= LatencyMs.GetHashCode();
          if (AssumeBleedActive != false) hash ^= AssumeBleedActive.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (innervateTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(InnervateTarget);
          }
          if (LatencyMs != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(LatencyMs);
          }
          if (AssumeBleedActive != false) {
            output.WriteRawTag(32);
            output.WriteBool(AssumeBleedActive);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (innervateTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(InnervateTarget);
          }
          if (LatencyMs != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(LatencyMs);
          }
          if (AssumeBleedActive != false) {
            output.WriteRawTag(32);
            output.WriteBool(AssumeBleedActive);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (innervateTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(InnervateTarget);
          }
          if (LatencyMs != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(LatencyMs);
          }
          if (AssumeBleedActive != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Options other) {
          if (other == null) {
            return;
          }
          if (other.innervateTarget_ != null) {
            if (innervateTarget_ == null) {
              InnervateTarget = new global::SirusDbScrapper.UIDatabase.UnitReference();
            }
            InnervateTarget.MergeFrom(other.InnervateTarget);
          }
          if (other.LatencyMs != 0) {
            LatencyMs = other.LatencyMs;
          }
          if (other.AssumeBleedActive != false) {
            AssumeBleedActive = other.AssumeBleedActive;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (innervateTarget_ == null) {
                  InnervateTarget = new global::SirusDbScrapper.UIDatabase.UnitReference();
                }
                input.ReadMessage(InnervateTarget);
                break;
              }
              case 16: {
                LatencyMs = input.ReadInt32();
                break;
              }
              case 32: {
                AssumeBleedActive = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (innervateTarget_ == null) {
                  InnervateTarget = new global::SirusDbScrapper.UIDatabase.UnitReference();
                }
                input.ReadMessage(InnervateTarget);
                break;
              }
              case 16: {
                LatencyMs = input.ReadInt32();
                break;
              }
              case 32: {
                AssumeBleedActive = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class FeralTankDruid : pb::IMessage<FeralTankDruid>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeralTankDruid> _parser = new pb::MessageParser<FeralTankDruid>(() => new FeralTankDruid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FeralTankDruid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.DruidReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeralTankDruid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeralTankDruid(FeralTankDruid other) : this() {
      options_ = other.options_ != null ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeralTankDruid Clone() {
      return new FeralTankDruid(this);
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.FeralTankDruid.Types.Options options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.FeralTankDruid.Types.Options Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FeralTankDruid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FeralTankDruid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (options_ != null) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FeralTankDruid other) {
      if (other == null) {
        return;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          Options = new global::SirusDbScrapper.UIDatabase.FeralTankDruid.Types.Options();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            if (options_ == null) {
              Options = new global::SirusDbScrapper.UIDatabase.FeralTankDruid.Types.Options();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            if (options_ == null) {
              Options = new global::SirusDbScrapper.UIDatabase.FeralTankDruid.Types.Options();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FeralTankDruid message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Rotation : pb::IMessage<Rotation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Rotation> _parser = new pb::MessageParser<Rotation>(() => new Rotation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Rotation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SirusDbScrapper.UIDatabase.FeralTankDruid.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation(Rotation other) : this() {
          maulRageThreshold_ = other.maulRageThreshold_;
          maintainDemoralizingRoar_ = other.maintainDemoralizingRoar_;
          lacerateTime_ = other.lacerateTime_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation Clone() {
          return new Rotation(this);
        }

        /// <summary>Field number for the "maul_rage_threshold" field.</summary>
        public const int MaulRageThresholdFieldNumber = 1;
        private int maulRageThreshold_;
        /// <summary>
        /// Minimum rage to queue HS or Cleave.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int MaulRageThreshold {
          get { return maulRageThreshold_; }
          set {
            maulRageThreshold_ = value;
          }
        }

        /// <summary>Field number for the "maintain_demoralizing_roar" field.</summary>
        public const int MaintainDemoralizingRoarFieldNumber = 2;
        private bool maintainDemoralizingRoar_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool MaintainDemoralizingRoar {
          get { return maintainDemoralizingRoar_; }
          set {
            maintainDemoralizingRoar_ = value;
          }
        }

        /// <summary>Field number for the "lacerate_time" field.</summary>
        public const int LacerateTimeFieldNumber = 3;
        private double lacerateTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LacerateTime {
          get { return lacerateTime_; }
          set {
            lacerateTime_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Rotation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Rotation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MaulRageThreshold != other.MaulRageThreshold) return false;
          if (MaintainDemoralizingRoar != other.MaintainDemoralizingRoar) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LacerateTime, other.LacerateTime)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (MaulRageThreshold != 0) hash ^= MaulRageThreshold.GetHashCode();
          if (MaintainDemoralizingRoar != false) hash ^= MaintainDemoralizingRoar.GetHashCode();
          if (LacerateTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LacerateTime);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MaulRageThreshold != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(MaulRageThreshold);
          }
          if (MaintainDemoralizingRoar != false) {
            output.WriteRawTag(16);
            output.WriteBool(MaintainDemoralizingRoar);
          }
          if (LacerateTime != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(LacerateTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MaulRageThreshold != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(MaulRageThreshold);
          }
          if (MaintainDemoralizingRoar != false) {
            output.WriteRawTag(16);
            output.WriteBool(MaintainDemoralizingRoar);
          }
          if (LacerateTime != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(LacerateTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (MaulRageThreshold != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaulRageThreshold);
          }
          if (MaintainDemoralizingRoar != false) {
            size += 1 + 1;
          }
          if (LacerateTime != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Rotation other) {
          if (other == null) {
            return;
          }
          if (other.MaulRageThreshold != 0) {
            MaulRageThreshold = other.MaulRageThreshold;
          }
          if (other.MaintainDemoralizingRoar != false) {
            MaintainDemoralizingRoar = other.MaintainDemoralizingRoar;
          }
          if (other.LacerateTime != 0D) {
            LacerateTime = other.LacerateTime;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                MaulRageThreshold = input.ReadInt32();
                break;
              }
              case 16: {
                MaintainDemoralizingRoar = input.ReadBool();
                break;
              }
              case 25: {
                LacerateTime = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                MaulRageThreshold = input.ReadInt32();
                break;
              }
              case 16: {
                MaintainDemoralizingRoar = input.ReadBool();
                break;
              }
              case 25: {
                LacerateTime = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Options : pb::IMessage<Options>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Options> _parser = new pb::MessageParser<Options>(() => new Options());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Options> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SirusDbScrapper.UIDatabase.FeralTankDruid.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options(Options other) : this() {
          innervateTarget_ = other.innervateTarget_ != null ? other.innervateTarget_.Clone() : null;
          startingRage_ = other.startingRage_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options Clone() {
          return new Options(this);
        }

        /// <summary>Field number for the "innervate_target" field.</summary>
        public const int InnervateTargetFieldNumber = 1;
        private global::SirusDbScrapper.UIDatabase.UnitReference innervateTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.UnitReference InnervateTarget {
          get { return innervateTarget_; }
          set {
            innervateTarget_ = value;
          }
        }

        /// <summary>Field number for the "starting_rage" field.</summary>
        public const int StartingRageFieldNumber = 2;
        private double startingRage_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double StartingRage {
          get { return startingRage_; }
          set {
            startingRage_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Options);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Options other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(InnervateTarget, other.InnervateTarget)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StartingRage, other.StartingRage)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (innervateTarget_ != null) hash ^= InnervateTarget.GetHashCode();
          if (StartingRage != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StartingRage);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (innervateTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(InnervateTarget);
          }
          if (StartingRage != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(StartingRage);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (innervateTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(InnervateTarget);
          }
          if (StartingRage != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(StartingRage);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (innervateTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(InnervateTarget);
          }
          if (StartingRage != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Options other) {
          if (other == null) {
            return;
          }
          if (other.innervateTarget_ != null) {
            if (innervateTarget_ == null) {
              InnervateTarget = new global::SirusDbScrapper.UIDatabase.UnitReference();
            }
            InnervateTarget.MergeFrom(other.InnervateTarget);
          }
          if (other.StartingRage != 0D) {
            StartingRage = other.StartingRage;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (innervateTarget_ == null) {
                  InnervateTarget = new global::SirusDbScrapper.UIDatabase.UnitReference();
                }
                input.ReadMessage(InnervateTarget);
                break;
              }
              case 17: {
                StartingRage = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (innervateTarget_ == null) {
                  InnervateTarget = new global::SirusDbScrapper.UIDatabase.UnitReference();
                }
                input.ReadMessage(InnervateTarget);
                break;
              }
              case 17: {
                StartingRage = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class RestorationDruid : pb::IMessage<RestorationDruid>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RestorationDruid> _parser = new pb::MessageParser<RestorationDruid>(() => new RestorationDruid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RestorationDruid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SirusDbScrapper.UIDatabase.DruidReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RestorationDruid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RestorationDruid(RestorationDruid other) : this() {
      options_ = other.options_ != null ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RestorationDruid Clone() {
      return new RestorationDruid(this);
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::SirusDbScrapper.UIDatabase.RestorationDruid.Types.Options options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SirusDbScrapper.UIDatabase.RestorationDruid.Types.Options Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RestorationDruid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RestorationDruid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (options_ != null) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RestorationDruid other) {
      if (other == null) {
        return;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          Options = new global::SirusDbScrapper.UIDatabase.RestorationDruid.Types.Options();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            if (options_ == null) {
              Options = new global::SirusDbScrapper.UIDatabase.RestorationDruid.Types.Options();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            if (options_ == null) {
              Options = new global::SirusDbScrapper.UIDatabase.RestorationDruid.Types.Options();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RestorationDruid message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Rotation : pb::IMessage<Rotation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Rotation> _parser = new pb::MessageParser<Rotation>(() => new Rotation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Rotation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SirusDbScrapper.UIDatabase.RestorationDruid.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation(Rotation other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rotation Clone() {
          return new Rotation(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Rotation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Rotation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Rotation other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class Options : pb::IMessage<Options>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Options> _parser = new pb::MessageParser<Options>(() => new Options());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Options> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SirusDbScrapper.UIDatabase.RestorationDruid.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options(Options other) : this() {
          innervateTarget_ = other.innervateTarget_ != null ? other.innervateTarget_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Options Clone() {
          return new Options(this);
        }

        /// <summary>Field number for the "innervate_target" field.</summary>
        public const int InnervateTargetFieldNumber = 1;
        private global::SirusDbScrapper.UIDatabase.UnitReference innervateTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::SirusDbScrapper.UIDatabase.UnitReference InnervateTarget {
          get { return innervateTarget_; }
          set {
            innervateTarget_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Options);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Options other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(InnervateTarget, other.InnervateTarget)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (innervateTarget_ != null) hash ^= InnervateTarget.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (innervateTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(InnervateTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (innervateTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(InnervateTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (innervateTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(InnervateTarget);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Options other) {
          if (other == null) {
            return;
          }
          if (other.innervateTarget_ != null) {
            if (innervateTarget_ == null) {
              InnervateTarget = new global::SirusDbScrapper.UIDatabase.UnitReference();
            }
            InnervateTarget.MergeFrom(other.InnervateTarget);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (innervateTarget_ == null) {
                  InnervateTarget = new global::SirusDbScrapper.UIDatabase.UnitReference();
                }
                input.ReadMessage(InnervateTarget);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (innervateTarget_ == null) {
                  InnervateTarget = new global::SirusDbScrapper.UIDatabase.UnitReference();
                }
                input.ReadMessage(InnervateTarget);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
